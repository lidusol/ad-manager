import { Component, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Renderer2, ViewChild, ContentChildren, forwardRef, Input, Directive, NgModule } from '@angular/core';
import { DirAlias, keyframesUniqueId, st2c, StyleCollection, shadowBuilder, toBoolean, StyleRenderer, LyTheme2, LyCommonModule } from '@alyle/ui';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { Platform } from '@angular/cdk/platform';
import { CommonModule } from '@angular/common';

/** Default interval in ms */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alyle/ui';
import * as ɵngcc2 from '@angular/cdk/platform';
import * as ɵngcc3 from '@angular/common';

const _c0 = ["slideContainer"];
const _c1 = ["_slide"];
const _c2 = ["_progressBar"];
const _c3 = function (a0, a1) { return [a0, a1]; };
function LyCarousel_ol_5_li_1_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 7);
    ɵngcc0.ɵɵlistener("click", function LyCarousel_ol_5_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const i_r8 = ctx.index; const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9._select(i_r8); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const i_r8 = ctx.index;
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(3, _c3, ctx_r6.classes.indicator, ctx_r6.selectedIndex == i_r8 ? ctx_r6.classes.indicatorActive : ""));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r6.classes.indicatorIcon);
} }
function LyCarousel_ol_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ol", 2);
    ɵngcc0.ɵɵtemplate(1, LyCarousel_ol_5_li_1_Template, 2, 6, "li", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("className", ctx_r2.classes.indicators);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.lyItems);
} }
const _c4 = function (a0) { return [a0, "left"]; };
function LyCarousel_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵlistener("click", function LyCarousel_div_6_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.prev(); });
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 8);
    ɵngcc0.ɵɵelement(2, "path", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c4, ctx_r3.classes.actions));
} }
const _c5 = function (a0) { return [a0, "right"]; };
function LyCarousel_div_7_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵlistener("click", function LyCarousel_div_7_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.next(); });
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(1, "svg", 8);
    ɵngcc0.ɵɵelement(2, "path", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c5, ctx_r4.classes.actions));
} }
function LyCarousel_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelement(1, "div", 2, 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("className", ctx_r5.classes.barContainer);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("animation-duration", ctx_r5.interval + "ms");
    ɵngcc0.ɵɵproperty("className", ctx_r5.classes.bar);
} }
const _c6 = ["*"];
const DEFAULT_INTERVAL = 7000;
const DEFAULT_AUTOPLAY = true;
const DEFAULT_HAS_PROGRESS_BAR = false;
const STYLE_PRIORITY = -2;
const STYLES = (theme, ref) => {
    const dir = theme.getDirection(DirAlias.before);
    const right = dir === 'right' ? 0 : 180;
    const left = dir === 'left' ? 0 : 180;
    const carousel = ref.selectorsOf(STYLES);
    const barAnimation = keyframesUniqueId.next();
    const { after, before } = theme;
    return {
        $priority: STYLE_PRIORITY,
        $global: (className) => `@keyframes ${barAnimation}{${className} 0%{transform:translateX(0%);}${className} 100%{transform:translateX(${dir === 'left' ? '-' : ''}100%);}}`,
        root: () => (className) => `${className}{display:block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;position:relative;}${st2c(((theme.carousel
            && theme.carousel.root
            && (theme.carousel.root instanceof StyleCollection
                ? theme.carousel.root.setTransformer(fn => fn(carousel))
                : theme.carousel.root(carousel)))), `${className}`)}${className} ${carousel.actions}.right{${after}:0;transform:rotate(${right}deg);}${className} ${carousel.actions}.left{${before}:0;transform:rotate(${left}deg);}${className} svg{display:block;fill:currentColor;}`,
        actions: (className) => `${className}{position:absolute;top:0;bottom:0;margin:auto .25em;height:1em;width:1em;font-size:36px;cursor:pointer;background:${theme.background.primary.default.alpha(.25)};color:${theme.text.primary};will-change:transform;}`,
        slideContainer: (className) => `${className}{overflow:hidden;display:block;width:100%;height:100%;position:relative;touch-action:pan-y !important;}`,
        slide: (className) => `${className}{display:flex;width:100%;height:100%;will-change:transform;}${className} > ly-carousel-item{width:100%;flex-shrink:0;position:relative;background-size:cover;background-position:center;background-repeat:no-repeat;}`,
        slideContent: (className) => `${className}{display:flex;}`,
        slideAnim: (className) => `${className} > div{transition:transform 750ms cubic-bezier(.1, 1, 0.5, 1);}`,
        slideNoEvent: (className) => `${className}>div{touch-action:initial !important;-webkit-user-drag:initial !important;}`,
        indicators: () => (className) => `${className}{position:absolute;bottom:0;left:0;right:0;margin:0;box-sizing:border-box;display:flex;align-items:center;justify-content:center;height:48px;}`,
        indicator: () => (className) => `${className}{display:inline-block;border-radius:50%;cursor:pointer;position:relative;padding:.5em;outline:none;}`,
        indicatorIcon: () => (className) => `${className}{transition:300ms cubic-bezier(0.65, 0.05, 0.36, 1);width:1em;height:1em;transform:scale(.5);border-radius:50%;will-change:transform;display:block;opacity:.65;box-shadow:${shadowBuilder(8, theme.text.default)};background:${theme.background.primary.default};}`,
        indicatorActive: () => (className) => `${className} ${carousel.indicatorIcon}{transform:scale(1);opacity:1;}`,
        barContainer: (className) => `${className}{background:${theme.background.primary.default.alpha(.25)};height:4px;position:absolute;bottom:0;width:100%;}`,
        bar: (className) => `${className}{height:4px;position:absolute;bottom:0;width:100%;animation-name:${barAnimation};animation-timing-function:linear;animation-iteration-count:infinite;background:${theme.text.primary};}`
    };
};
/** @docs-private */
var CarouselMode;
(function (CarouselMode) {
    /** full */
    CarouselMode[CarouselMode["default"] = 0] = "default";
    CarouselMode[CarouselMode["inline"] = 1] = "inline";
})(CarouselMode || (CarouselMode = {}));
class LyCarousel {
    constructor(_el, _cd, _theme, _renderer, sRenderer, _platform) {
        this._el = _el;
        this._cd = _cd;
        this._theme = _theme;
        this._renderer = _renderer;
        this.sRenderer = sRenderer;
        this._platform = _platform;
        /** @docs-private */
        this.classes = this.sRenderer.renderSheet(STYLES, true);
        this._intervalFn = null;
        /** @docs-private */
        this.mode = CarouselMode.default;
        this.selectedIndex = 0;
        this._interval = DEFAULT_INTERVAL;
        /** Emits whenever the component is destroyed. */
        this._destroy = new Subject();
        this._hasNavigationArrows = true;
        this._hasNavigationIndicators = true;
    }
    /** @internal */
    get _isIntervalFn() {
        return !!this._intervalFn;
    }
    /**
     * It will pause the slide change when the mouse cursor passes
     * through the carousel.
     */
    get pauseOnHover() {
        return this._pauseOnHover;
    }
    set pauseOnHover(val) {
        const newVal = toBoolean(val);
        this._pauseOnHover = newVal;
    }
    set touch(val) {
        const newVal = toBoolean(val);
        this._touch = newVal;
        if (newVal) {
            this._renderer.removeClass(this._el.nativeElement, this.classes.slideNoEvent);
        }
        else {
            this._renderer.addClass(this._el.nativeElement, this.classes.slideNoEvent);
        }
    }
    get touch() {
        return this._touch;
    }
    set autoplay(val) {
        const newVal = toBoolean(val);
        this._autoplay = newVal;
        if (newVal) {
            this._resetInterval();
        }
        else {
            this.stop();
        }
    }
    get autoplay() {
        return this._autoplay;
    }
    set hasProgressBar(val) {
        const newVal = toBoolean(val);
        this._hasProgressBar = newVal;
    }
    get hasProgressBar() {
        return this._hasProgressBar;
    }
    set interval(val) {
        this._interval = val;
        this._resetInterval();
    }
    get interval() {
        return this._interval;
    }
    set hasNavigationArrows(val) {
        this._hasNavigationArrows = toBoolean(val);
    }
    get hasNavigationArrows() {
        return this._hasNavigationArrows;
    }
    set hasNavigationIndicators(val) {
        this._hasNavigationIndicators = toBoolean(val);
    }
    get hasNavigationIndicators() {
        return this._hasNavigationIndicators;
    }
    ngOnInit() {
        if (!this.touch) {
            this.touch = false;
        }
        if (this.autoplay == null) {
            this.autoplay = DEFAULT_AUTOPLAY;
        }
        if (this.hasProgressBar == null) {
            this.hasProgressBar = DEFAULT_HAS_PROGRESS_BAR;
        }
    }
    ngAfterViewInit() {
        this._renderer.addClass(this.slideContainer.nativeElement, this.classes.slideContainer);
        if (this._platform.isBrowser) {
            this._renderer.addClass(this.slideContainer.nativeElement, this.classes.slideAnim);
        }
        this.lyItems.changes.pipe(takeUntil(this._destroy)).subscribe(() => this._markForCheck());
    }
    ngOnDestroy() {
        this._destroy.next();
        this._destroy.complete();
        if (this._platform.isBrowser) {
            this.stop();
        }
    }
    _onMouseEnter() {
        if (this.pauseOnHover) {
            this.stop();
        }
    }
    _onMouseLeave() {
        if (this.pauseOnHover) {
            this._resetInterval();
        }
    }
    /** @docs-private */
    _onDragStart() {
        this.stop();
        this._renderer.removeClass(this.slideContainer.nativeElement, this.classes.slideAnim);
        this._selectedElement = this.lyItems.find((_item, index) => index === this.selectedIndex)._nativeElement;
    }
    _onDrag(e) {
        const rect = this._selectedElement.getBoundingClientRect();
        if (Math.abs(e.deltaX) < rect.width) {
            this._onPan(e.deltaX);
        }
        else {
            this._onPan(rect.width * Math.sign(e.deltaX));
        }
    }
    _onDragEnd(e) {
        const rect = this._selectedElement.getBoundingClientRect();
        const dir = this._theme.variables.getDirection(DirAlias.before);
        this._renderer.addClass(this.slideContainer.nativeElement, this.classes.slideAnim);
        this._select(this.selectedIndex);
        if (Math.abs(e.deltaX) > rect.width / 2) {
            if (0 > e.deltaX) {
                this.next();
            }
            else if (0 < e.deltaX) {
                this.prev();
            }
        }
        else if (e.additionalEvent) {
            const eventName = e.additionalEvent;
            if (Math.abs(e.velocity) >= 0.25) {
                if (eventName === 'slideleft') {
                    if (dir === 'left') {
                        this.next();
                    }
                    else {
                        this.prev();
                    }
                }
                else if (eventName === 'slideright') {
                    if (dir === 'right') {
                        this.next();
                    }
                    else {
                        this.prev();
                    }
                }
            }
        }
        this._renderer.removeStyle(this._slide.nativeElement, 'transform');
    }
    _onDragCancel() {
        this._renderer.addClass(this.slideContainer.nativeElement, this.classes.slideAnim);
        this._select(this.selectedIndex);
        this._resetInterval();
    }
    _select(val, notResetInterval) {
        this.selectedIndex = val;
        if (this.mode === CarouselMode.default) {
            this._slideClass = this._theme.addStyle(`lyCarousel.select:${val.toString(32)}`, (theme) => {
                const sign = theme.getDirection(DirAlias.before) === 'left' ? -1 : 1;
                return {
                    transform: `translateX(${100 * val * sign}%)`
                };
            }, this._slide.nativeElement, this._slideClass, STYLE_PRIORITY);
        }
        if (!notResetInterval) {
            if (this.autoplay && !this.pauseOnHover) {
                this._resetInterval();
            }
        }
    }
    prev() {
        const len = this.lyItems.length - 1;
        const prev = this.selectedIndex - 1;
        this._select(prev < 0 ? len : prev);
    }
    next(notResetInterval) {
        const len = this.lyItems.length - 1;
        const next = this.selectedIndex + 1;
        this._select(next > len ? 0 : next, notResetInterval);
    }
    stop() {
        if (this._intervalFn !== null) {
            clearInterval(this._intervalFn);
            this._intervalFn = null;
        }
    }
    _resetInterval() {
        if (this._platform.isBrowser) {
            this.stop();
            this._restartProgressBarAnimation();
            this._markForCheck();
            this._intervalFn = setInterval(() => {
                this.next(true);
                this._restartProgressBarAnimation();
                this._markForCheck();
            }, this.interval);
        }
    }
    _restartProgressBarAnimation() {
        if (this.hasProgressBar && this._progressBar) {
            const el = this._progressBar.nativeElement;
            // Hack for restart animation
            el.style.animationName = 'øfakeName';
            window.getComputedStyle(el).getPropertyValue('opacity');
            el.style.animationName = '';
        }
    }
    _onPan(x) {
        const sign = this._theme.variables.getDirection(DirAlias.before) === 'left' ? -1 : 1;
        this._renderer.setStyle(this._slide.nativeElement, 'transform', `translateX(calc(${sign * 100 * this.selectedIndex}% + ${x}px))`);
    }
    _markForCheck() {
        this._cd.markForCheck();
    }
}
LyCarousel.ɵfac = function LyCarousel_Factory(t) { return new (t || LyCarousel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LyTheme2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleRenderer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };
LyCarousel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LyCarousel, selectors: [["ly-carousel"]], contentQueries: function LyCarousel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, LyCarouselItem, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lyItems = _t);
    } }, viewQuery: function LyCarousel_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true);
        ɵngcc0.ɵɵviewQuery(_c2, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slideContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._slide = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._progressBar = _t.first);
    } }, hostBindings: function LyCarousel_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mouseenter", function LyCarousel_mouseenter_HostBindingHandler() { return ctx._onMouseEnter(); })("mouseleave", function LyCarousel_mouseleave_HostBindingHandler() { return ctx._onMouseLeave(); });
    } }, inputs: { mode: "mode", selectedIndex: "selectedIndex", pauseOnHover: "pauseOnHover", touch: "touch", autoplay: "autoplay", hasProgressBar: "hasProgressBar", interval: "interval", hasNavigationArrows: "hasNavigationArrows", hasNavigationIndicators: "hasNavigationIndicators" }, features: [ɵngcc0.ɵɵProvidersFeature([
            StyleRenderer
        ])], ngContentSelectors: _c6, decls: 9, vars: 5, consts: [[3, "slidestart", "slideleft", "slideright", "slidecancel", "slideend"], ["slideContainer", ""], [3, "className"], ["_slide", ""], [3, "className", 4, "ngIf"], [3, "ngClass", "click", 4, "ngIf"], [3, "ngClass", "click", 4, "ngFor", "ngForOf"], [3, "ngClass", "click"], ["viewBox", "0 0 24 24"], ["d", "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"], ["_progressBar", ""]], template: function LyCarousel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵlistener("slidestart", function LyCarousel_Template_div_slidestart_0_listener() { return ctx.touch && ctx._onDragStart(); })("slideleft", function LyCarousel_Template_div_slideleft_0_listener($event) { return ctx.touch && ctx._onDrag($event); })("slideright", function LyCarousel_Template_div_slideright_0_listener($event) { return ctx.touch && ctx._onDrag($event); })("slidecancel", function LyCarousel_Template_div_slidecancel_0_listener() { return ctx.touch && ctx._onDragCancel(); })("slideend", function LyCarousel_Template_div_slideend_0_listener($event) { return ctx.touch && ctx._onDragEnd($event); });
        ɵngcc0.ɵɵelementStart(2, "div", 2, 3);
        ɵngcc0.ɵɵprojection(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, LyCarousel_ol_5_Template, 2, 2, "ol", 4);
        ɵngcc0.ɵɵtemplate(6, LyCarousel_div_6_Template, 3, 3, "div", 5);
        ɵngcc0.ɵɵtemplate(7, LyCarousel_div_7_Template, 3, 3, "div", 5);
        ɵngcc0.ɵɵtemplate(8, LyCarousel_div_8_Template, 3, 4, "div", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("className", ctx.classes.slide);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.lyItems.length !== 1 && ctx.hasNavigationIndicators);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasNavigationArrows);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasNavigationArrows);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.hasProgressBar && ctx._isIntervalFn && ctx.interval && ctx.autoplay);
    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc3.NgClass], encapsulation: 2, changeDetection: 0 });
LyCarousel.ctorParameters = () => [
    { type: ElementRef },
    { type: ChangeDetectorRef },
    { type: LyTheme2 },
    { type: Renderer2 },
    { type: StyleRenderer },
    { type: Platform }
];
LyCarousel.propDecorators = {
    slideContainer: [{ type: ViewChild, args: ['slideContainer',] }],
    _slide: [{ type: ViewChild, args: ['_slide',] }],
    _progressBar: [{ type: ViewChild, args: ['_progressBar',] }],
    lyItems: [{ type: ContentChildren, args: [forwardRef(() => LyCarouselItem),] }],
    mode: [{ type: Input }],
    selectedIndex: [{ type: Input }],
    pauseOnHover: [{ type: Input }],
    touch: [{ type: Input }],
    autoplay: [{ type: Input }],
    hasProgressBar: [{ type: Input }],
    interval: [{ type: Input }],
    hasNavigationArrows: [{ type: Input }],
    hasNavigationIndicators: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyCarousel, [{
        type: Component,
        args: [{
                selector: 'ly-carousel',
                template: "<div\n(slidestart)=\"touch && _onDragStart()\"\n(slideleft)=\"touch && _onDrag($event)\"\n(slideright)=\"touch && _onDrag($event)\"\n(slidecancel)=\"touch && _onDragCancel()\"\n(slideend)=\"touch && _onDragEnd($event)\"\n#slideContainer\n>\n  <div #_slide [className]=\"classes.slide\">\n    <ng-content></ng-content>\n  </div>\n  <ol [className]=\"classes.indicators\" *ngIf=\"lyItems.length !== 1 && hasNavigationIndicators\">\n    <li\n      *ngFor=\"let item of lyItems; index as i\"\n      [ngClass]=\"[classes.indicator, selectedIndex == i ? classes.indicatorActive : '']\"\n      (click)=\"_select(i)\"\n    >\n      <span\n        [class]=\"classes.indicatorIcon\"\n      ></span>\n    </li>\n  </ol>\n  <div *ngIf=\"hasNavigationArrows\" [ngClass]=\"[classes.actions, 'left']\" (click)=\"prev()\">\n    <svg viewBox=\"0 0 24 24\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg>\n  </div>\n  <div *ngIf=\"hasNavigationArrows\" [ngClass]=\"[classes.actions, 'right']\" (click)=\"next()\">\n    <svg viewBox=\"0 0 24 24\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg>\n  </div>\n  <div\n    [className]=\"classes.barContainer\"\n    *ngIf=\"hasProgressBar && _isIntervalFn && interval && autoplay\"\n  >\n    <div\n      [className]=\"classes.bar\"\n      #_progressBar\n      [style.animation-duration]=\"interval + 'ms'\"\n    ></div>\n  </div>\n</div>",
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false,
                host: {
                    '(mouseenter)': '_onMouseEnter()',
                    '(mouseleave)': '_onMouseLeave()'
                },
                providers: [
                    StyleRenderer
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.LyTheme2 }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.StyleRenderer }, { type: ɵngcc2.Platform }]; }, { mode: [{
            type: Input
        }], selectedIndex: [{
            type: Input
        }], pauseOnHover: [{
            type: Input
        }], touch: [{
            type: Input
        }], autoplay: [{
            type: Input
        }], hasProgressBar: [{
            type: Input
        }], interval: [{
            type: Input
        }], hasNavigationArrows: [{
            type: Input
        }], hasNavigationIndicators: [{
            type: Input
        }], slideContainer: [{
            type: ViewChild,
            args: ['slideContainer']
        }], _slide: [{
            type: ViewChild,
            args: ['_slide']
        }], _progressBar: [{
            type: ViewChild,
            args: ['_progressBar']
        }], lyItems: [{
            type: ContentChildren,
            args: [forwardRef(() => LyCarouselItem)]
        }] }); })();
class LyCarouselItem {
    constructor(_theme, _el) {
        this._theme = _theme;
        this._nativeElement = _el.nativeElement;
    }
    set srcImg(value) {
        this._className = this._theme.addStyle(`ly-carousel-img:${value}`, (`background-image: url('${value}')`), this._nativeElement, this._className, STYLE_PRIORITY);
    }
}
LyCarouselItem.ɵfac = function LyCarouselItem_Factory(t) { return new (t || LyCarouselItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LyTheme2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
LyCarouselItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LyCarouselItem, selectors: [["ly-carousel-item"]], inputs: { srcImg: "srcImg" } });
LyCarouselItem.ctorParameters = () => [
    { type: LyTheme2 },
    { type: ElementRef }
];
LyCarouselItem.propDecorators = {
    srcImg: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyCarouselItem, [{
        type: Directive,
        args: [{
                selector: 'ly-carousel-item'
            }]
    }], function () { return [{ type: ɵngcc1.LyTheme2 }, { type: ɵngcc0.ElementRef }]; }, { srcImg: [{
            type: Input
        }] }); })();

class LyCarouselModule {
}
LyCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LyCarouselModule });
LyCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LyCarouselModule_Factory(t) { return new (t || LyCarouselModule)(); }, imports: [[CommonModule, LyCommonModule],
        LyCommonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LyCarouselModule, { declarations: function () { return [LyCarouselItem,
        LyCarousel]; }, imports: function () { return [CommonModule, LyCommonModule]; }, exports: function () { return [LyCarouselItem,
        LyCarousel,
        LyCommonModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyCarouselModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, LyCommonModule],
                exports: [LyCarouselItem, LyCarousel, LyCommonModule],
                declarations: [LyCarouselItem, LyCarousel]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { CarouselMode, LyCarousel, LyCarouselItem, LyCarouselModule, STYLES };

//# sourceMappingURL=alyle-ui-carousel.js.map