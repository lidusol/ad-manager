{"version":3,"file":"alyle-ui-divider.js","sources":["../../../lib/divider/divider.ts","../../../lib/divider/divider.module.ts","../../../lib/divider/alyle-ui-divider.ts"],"names":[],"mappings":";;;;;AAMA,MAAM,MAAM,GAAG,CAAC,KAAqB,KAAK,CAAC,SAAiB,KAAK,GAAG,SAAS,mCAAmC,KAAK,CAAC,OAAO,eAAe,CAAC;AAC7I;AAEK,MAKQ,SAAS;AAAG,IAuBvB,YACW,SAAwB;AAClC,QADU,cAAS,GAAT,SAAS,CAAe;AACrC,KAAO;AACP;AAEkB,IAvBhB,IACI,KAAK,CAAC,GAAY;AACxB,QAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;AAChD,QAAI,IAAI,MAAM,EAAE;AAChB,YAAM,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAC5B,GAAG,SAAS,CAAC,CAAC,SAAS,EACvB,CAAC,EAAC,MAAM,EAAC,KAAK,CAAC,SAAiB,KAAK,GAAG,SAAS,WAAW,MAAM,SAAS,EAC3E,IAAI,CAAC,GAAG,CAAC,CACV,CAAC;AACR,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C,SAAK;AACL,KAAG;AACH,IAAE,IAAI,KAAK;AACX,QAAI,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,KAAG;AACH,IAME,QAAQ;AACV,QAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC/B,KAAG;AACH;;;;eAAC;AA7BiB,WAAC,GAAG,WAAW,CAAC,AAD7B;AAAC;EANL,SAAS,SAAC,pBAM8B,YAXvC,aAAa;AACd;OAKC,QAAQ,EAAE,jBALR;AAKoB,kBACtB,SAAS,3BAJX,oBAaG,KAAK;AATK,AAUZ;mBATG,aAAa,kBACd,cACF;;;;;;;;;;oBAOE;AAAC;AAAC,MCbQ,eAAe;AAC5B;2CALC,QAAQ,SAAC;GACR,OAAO,EAAE,CAAC,SAAS,CAAC,kBACpB,YAAY,EAAE,CAAC,SAAS,CAAC,cAC1B;;;;;;;;0BACI;AAAC;ACPN;AACA;AACA;AACA;AACA;AACa","sourcesContent":["import { Directive, Input, OnInit } from '@angular/core';\nimport {\n  ThemeVariables,\n  StyleRenderer,\n  toBoolean } from '@alyle/ui';\n\nconst STYLES = (theme: ThemeVariables) => (className: string) => `${className}{display:block;background-color:${theme.divider};height:1px;}`;\n\n@Directive({\n  selector: 'ly-divider',\n  providers: [\n    StyleRenderer\n  ]\n})\nexport class LyDivider implements OnInit {\n  static readonly и = 'LyDivider';\n  private _inset: boolean;\n\n  /** Add indentation (72px) */\n  @Input()\n  set inset(val: boolean) {\n    const newVal = this._inset = toBoolean(val);\n    if (newVal) {\n      this[0x1] = this.sRenderer.add(\n        `${LyDivider.и}--inset`,\n        ({before}) => (className: string) => `${className}{margin-${before}:74px;}`,\n        this[0x1]\n      );\n    } else {\n      this.sRenderer.removeClass(this[0x1]);\n    }\n  }\n  get inset() {\n    return this._inset;\n  }\n  [0x1]: string;\n\n  constructor(\n    readonly sRenderer: StyleRenderer\n  ) { }\n\n  ngOnInit() {\n    this.sRenderer.add(STYLES);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LyDivider } from './divider';\n\n@NgModule({\n  exports: [LyDivider],\n  declarations: [LyDivider]\n})\nexport class LyDividerModule {\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}