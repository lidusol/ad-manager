{"version":3,"file":"alyle-ui-image-cropper.js","sources":["../../../lib/image-cropper/resize-canvas.ts","../../../lib/image-cropper/image-cropper.ts","../../../lib/image-cropper/image-cropper-area.ts","../../../lib/image-cropper/image-cropper.module.ts","../../../lib/image-cropper/alyle-ui-image-cropper.ts"],"names":["activeEventOptions","isTouchEvent","getGesturePointFromEvent"],"mappings":"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","sourcesContent":["/*\n * Hermite resize - fast image resize/resample using Hermite filter.\n * https://github.com/viliusle/Hermite-resize\n */\nexport function resizeCanvas(canvas: HTMLCanvasElement, width: number, height: number) {\n  const width_source = canvas.width;\n  const height_source = canvas.height;\n  width = Math.round(width);\n  height = Math.round(height);\n\n  const ratio_w = width_source / width;\n  const ratio_h = height_source / height;\n  const ratio_w_half = Math.ceil(ratio_w / 2);\n  const ratio_h_half = Math.ceil(ratio_h / 2);\n\n  const ctx = canvas.getContext('2d');\n  const img = ctx!.getImageData(0, 0, width_source, height_source);\n  const img2 = ctx!.createImageData(width, height);\n  const data = img.data;\n  const data2 = img2.data;\n\n  for (let j = 0; j < height; j++) {\n    for (let i = 0; i < width; i++) {\n      const x2 = (i + j * width) * 4;\n      let weight = 0;\n      let weights = 0;\n      let weights_alpha = 0;\n      let gx_r = 0;\n      let gx_g = 0;\n      let gx_b = 0;\n      let gx_a = 0;\n      const center_y = j * ratio_h;\n\n      const xx_start = Math.floor(i * ratio_w);\n      let xx_stop = Math.ceil((i + 1) * ratio_w);\n      const yy_start = Math.floor(j * ratio_h);\n      let yy_stop = Math.ceil((j + 1) * ratio_h);\n      xx_stop = Math.min(xx_stop, width_source);\n      yy_stop = Math.min(yy_stop, height_source);\n\n      for (let yy = yy_start; yy < yy_stop; yy++) {\n        const dy = Math.abs(center_y - yy) / ratio_h_half;\n        const center_x = i * ratio_w;\n        const w0 = dy * dy; // pre-calc part of w\n        for (let xx = xx_start; xx < xx_stop; xx++) {\n          const dx = Math.abs(center_x - xx) / ratio_w_half;\n          const w = Math.sqrt(w0 + dx * dx);\n          if (w >= 1) {\n            // pixel too far\n            continue;\n          }\n          // hermite filter\n          weight = 2 * w * w * w - 3 * w * w + 1;\n          const pos_x = 4 * (xx + yy * width_source);\n          // alpha\n          gx_a += weight * data[pos_x + 3];\n          weights_alpha += weight;\n          // colors\n          if (data[pos_x + 3] < 255) {\n            weight = weight * data[pos_x + 3] / 250;\n          }\n          gx_r += weight * data[pos_x];\n          gx_g += weight * data[pos_x + 1];\n          gx_b += weight * data[pos_x + 2];\n          weights += weight;\n        }\n      }\n      data2[x2] = gx_r / weights;\n      data2[x2 + 1] = gx_g / weights;\n      data2[x2 + 2] = gx_b / weights;\n      data2[x2 + 3] = gx_a / weights_alpha;\n    }\n  }\n\n  // clear and resize canvas\n  canvas.width = width;\n  canvas.height = height;\n\n  // draw\n  ctx!.putImageData(img2, 0, 0);\n  return ctx;\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  EventEmitter,\n  Renderer2,\n  OnDestroy,\n  NgZone,\n  Inject,\n  OnInit\n} from '@angular/core';\nimport {\n  mergeDeep,\n  LY_COMMON_STYLES,\n  ThemeVariables,\n  st2c,\n  ThemeRef,\n  StyleCollection,\n  LyClasses,\n  StyleTemplate,\n  StyleRenderer } from '@alyle/ui';\nimport { Subject, Observable } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { resizeCanvas } from './resize-canvas';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\n\nexport interface LyImageCropperTheme {\n  /** Styles for Image Cropper Component */\n  root?: StyleCollection<((classes: LyClasses<typeof STYLES>) => StyleTemplate)>\n    | ((classes: LyClasses<typeof STYLES>) => StyleTemplate);\n}\n\nexport interface LyImageCropperVariables {\n  cropper?: LyImageCropperTheme;\n}\n\nconst activeEventOptions = normalizePassiveListenerOptions({passive: false});\nconst STYLE_PRIORITY = -2;\n\nexport const STYLES = (theme: ThemeVariables & LyImageCropperVariables, ref: ThemeRef) => {\n  const cropper = ref.selectorsOf(STYLES);\n  const { after } = theme;\n  return {\n    $name: LyImageCropper.и,\n    $priority: STYLE_PRIORITY,\n    root: ( ) => (className: string) => `${className}{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:flex;overflow:hidden;position:relative;justify-content:center;align-items:center;}${st2c((\n          (theme.cropper\n            && theme.cropper.root\n            && (theme.cropper.root instanceof StyleCollection\n              ? theme.cropper.root.setTransformer(fn => fn(cropper))\n              : theme.cropper.root(cropper))\n          )), `${className}`)}`,\n    imgContainer: (className: string) => `${className}{cursor:move;position:absolute;top:0;left:0;display:flex;touch-action:none;}${className} > canvas{display:block;}`,\n    overlay: (className: string) => `${st2c((LY_COMMON_STYLES.fill), `${className}`)}`,\n    area: (className: string) => `${className}{pointer-events:none;box-shadow:0 0 0 20000px rgba(0, 0, 0, 0.4);margin:auto;}${st2c((LY_COMMON_STYLES.fill), `${className}`)}${st2c((LY_COMMON_STYLES.fill), `${className}:before,${className}:after`)}${className}:before,${className}:after{content:'';}${className}:before{width:0;height:0;margin:auto;border-radius:50%;background:#fff;border:solid 2px rgb(255, 255, 255);}${className}:after{border:solid 2px rgb(255, 255, 255);border-radius:inherit;}`,\n    resizer: (className: string) => `${className}{width:10px;height:10px;background:#fff;border-radius:3px;position:absolute;touch-action:none;bottom:0;${after}:0;pointer-events:all;cursor:${\n        after === 'right'\n          ? 'nwse-resize'\n          : 'nesw-resize'};}${st2c((LY_COMMON_STYLES.fill), `${className}:before`)}${className}:before{content:'';width:20px;height:20px;transform:translate(-25%, -25%);}`,\n    defaultContent: (className: string) => `${className}{display:flex;align-items:center;justify-content:center;}${st2c((LY_COMMON_STYLES.fill), `${className},${className} > input`)}${className} *:not(input){pointer-events:none;}${className} > input{background:transparent;opacity:0;width:100%;height:100%;}`\n  };\n};\n/** Image Cropper Config */\nexport class ImgCropperConfig {\n  /** Cropper area width */\n  width: number = 250;\n  /** Cropper area height */\n  height: number = 200;\n  minWidth?: number = 40;\n  minHeight?: number = 40;\n  /** If this is not defined, the new image will be automatically defined. */\n  type?: string;\n  /** Background color( default: null), if is null in png is transparent but not in jpg. */\n  fill?: string | null;\n  /**\n   * Set anti-aliased (default: true)\n   * @deprecated this is not necessary as the cropper will automatically resize the image\n   * to the best quality\n   */\n  antiAliased?: boolean = true;\n  autoCrop?: boolean;\n  output?: ImgOutput | ImgResolution = ImgResolution.Default;\n  /**\n   * Zoom out until the entire image fits into the cropping area.\n   * default: false\n   */\n  extraZoomOut?: boolean;\n  /**\n   * Emit event `error` if the file size in bytes for the limit.\n   * Note: It only works when the image is received from the `<input>` event.\n   */\n  maxFileSize?: number | null;\n  /**\n   * Whether the cropper area will be round.\n   * This implies that the cropper area will maintain its aspect ratio.\n   * default: false\n   */\n  round?: boolean;\n  /**\n   * Whether the cropper area is resizable.\n   * default: false\n   */\n  resizableArea?: boolean;\n  /**\n   * Keep the width and height of the growing area the same according\n   * to `ImgCropperConfig.width` and `ImgCropperConfig.height`\n   * default: false\n   */\n  keepAspectRatio?: boolean;\n  /**\n   * Whether the cropper area is responsive.\n   * By default, the width and height of the cropper area is fixed,\n   * so can use when the cropper area is larger than its container,\n   * otherwise this will bring problems when cropping.\n   */\n  responsiveArea?: boolean;\n}\n\n/**\n * The output image\n * With this option you can resize the output image.\n * If `width` or `height` are 0, this will be set automatically.\n * Both cannot be 0.\n */\nexport interface ImgOutput {\n  /**\n   * The cropped image will be resized to this `width`.\n   */\n  width: number;\n  /**\n   * Cropped image will be resized to this `height`.\n   */\n  height: number;\n}\n\n/** Image output */\nexport enum ImgResolution {\n  /**\n   * The output image will be equal to the initial size of the cropper area.\n   */\n  Default,\n  /** Just crop the image without resizing */\n  OriginalImage\n}\n\n/** Image output */\nexport enum ImgCropperError {\n  /** The loaded image exceeds the size limit set. */\n  Size,\n  /** The file loaded is not image. */\n  Type,\n  /** When the image has not been loaded. */\n  Other\n}\n\nexport interface ImgCropperEvent {\n  /** Cropped image data URL */\n  dataURL?: string;\n  name: string | null;\n  /** Filetype */\n  type?: string;\n  /** Cropped area width */\n  areaWidth: number;\n  /** Cropped area height */\n  areaHeight: number;\n  /** Cropped image width */\n  width: number;\n  /** Cropped image height */\n  height: number;\n  /** Original Image data URL */\n  originalDataURL?: string;\n  scale: number;\n  /** Current rotation in degrees */\n  rotation: number;\n  /** Size of the image in bytes */\n  size: number;\n  /** Scaled offset from the left edge of the image */\n  left: number;\n  /** Scaled offset from the top edge of the image */\n  top: number;\n  /**\n   * Scaled offset from the left edge of the image to center of area\n   * Can be used to set image position\n   */\n  xOrigin: number;\n  /**\n   * Scaled offset from the top edge of the image to center of area\n   * Can be used to set image position\n   */\n  yOrigin: number;\n  /** @deprecated Use `xOrigin & yOrigin` instead. */\n  position?: {\n    x: number\n    y: number\n  };\n}\n\nexport interface ImgCropperErrorEvent {\n  name?: string;\n  /** Size of the image in bytes */\n  size: number;\n  /** Filetype */\n  type: string;\n  /** Type of error */\n  error: ImgCropperError;\n  errorMsg?: string;\n}\n\ninterface ImgRect {\n  x: number;\n  y: number;\n  xc: number;\n  yc: number;\n  /** transform with */\n  wt: number;\n  ht: number;\n}\n\nexport interface ImgCropperLoaderConfig {\n  name?: string | null;\n  /** Filetype */\n  type?: string;\n  /** Cropped area width */\n  areaWidth?: number;\n  /** Cropped area height */\n  areaHeight?: number;\n  /** Cropped image width */\n  width?: number;\n  /** Cropped image height */\n  height?: number;\n  /** Original Image data URL */\n  originalDataURL: string;\n  scale?: number;\n  /** Current rotation in degrees */\n  rotation?: number;\n  /** Size of the image in bytes */\n  size?: number;\n  /** Offset from the left edge of the image to center of area */\n  xOrigin?: number;\n  /** Offset from the top edge of the image to center of area */\n  yOrigin?: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  selector: 'ly-img-cropper, ly-image-cropper',\n  templateUrl: 'image-cropper.html',\n  providers: [\n    StyleRenderer\n  ]\n})\nexport class LyImageCropper implements OnInit, OnDestroy {\n  static readonly и = 'LyImageCropper';\n  /**\n   * styles\n   * @docs-private\n   */\n  readonly classes = this.sRenderer.renderSheet(STYLES, true);\n  private _currentLoadConfig?: ImgCropperLoaderConfig;\n  // _originalImgBase64?: string;\n  // private _fileName: string | null;\n\n  /** Original image */\n  private _img: HTMLImageElement;\n  private offset?: {\n    x: number\n    y: number\n    left: number\n    top: number\n  };\n  private _scale?: number;\n  private _scal3Fix?: number;\n  private _minScale?: number;\n  private _maxScale?: number;\n  /** Initial config */\n  private _configPrimary: ImgCropperConfig;\n  private _config: ImgCropperConfig;\n  private _imgRect: ImgRect = {} as any;\n  private _rotation: number = 0;\n  // private _sizeInBytes: number | null;\n  private _isSliding: boolean;\n  /** Keeps track of the last pointer event that was captured by the crop area. */\n  private _lastPointerEvent: MouseEvent | TouchEvent | null;\n  private _startPointerEvent: {\n    x: number\n    y: number\n  } | null;\n  _primaryAreaWidth: number;\n  _primaryAreaHeight: number;\n\n  _absoluteScale: number;\n\n  /**\n   * When is loaded image\n   * @internal\n   */\n  _isLoadedImg: boolean;\n\n  /** When is loaded image & ready for crop */\n  isLoaded: boolean;\n  /** When the cropper is ready to be interacted  */\n  isReady: boolean;\n  isCropped: boolean;\n\n  @ViewChild('_imgContainer', { static: true }) _imgContainer: ElementRef;\n  @ViewChild('_area', {\n    read: ElementRef\n  }) _areaRef: ElementRef;\n  @ViewChild('_imgCanvas', { static: true }) _imgCanvas: ElementRef<HTMLCanvasElement>;\n  @Input()\n  get config(): ImgCropperConfig {\n    return this._config;\n  }\n  set config(val: ImgCropperConfig) {\n    this._config = mergeDeep({}, new ImgCropperConfig(), val);\n    this._configPrimary = mergeDeep({}, this._config);\n    this._primaryAreaWidth = this.config.width;\n    this._primaryAreaHeight = this.config.height;\n    if (\n      this._config.round\n      && this.config.width !== this.config.height\n    ) {\n      throw new Error(`${LyImageCropper.и}: Both width and height must be equal when using \\`ImgCropperConfig.round = true\\``);\n    }\n    const maxFileSize = this._config.maxFileSize;\n    if (maxFileSize) {\n      this.maxFileSize = maxFileSize;\n    }\n  }\n  /** Set scale */\n  @Input()\n  get scale(): number | undefined {\n    return this._scale;\n  }\n  set scale(val: number | undefined) {\n    this.setScale(val);\n  }\n\n  /**\n   * Emit event `error` if the file size for the limit.\n   * Note: It only works when the image is received from the `<input>` event.\n   */\n  @Input() maxFileSize: number;\n\n  /** Get min scale */\n  get minScale(): number | undefined {\n    return this._minScale;\n  }\n\n  @Output() readonly scaleChange = new EventEmitter<number>();\n\n  /** Emits minimum supported image scale */\n  @Output('minScale') readonly minScaleChange = new EventEmitter<number>();\n\n  /** Emits maximum supported image scale */\n  @Output('maxScale') readonly maxScaleChange = new EventEmitter<number>();\n\n  /** @deprecated Emits when the image is loaded, instead use `ready` */\n  @Output() readonly loaded = new EventEmitter<ImgCropperEvent>();\n\n  /** Emits when the image is loaded */\n  @Output() readonly imageLoaded = new EventEmitter<ImgCropperEvent>();\n\n  /** Emits when the cropper is ready to be interacted */\n  @Output() readonly ready = new EventEmitter<ImgCropperEvent>();\n\n  /** On crop new image */\n  @Output() readonly cropped = new EventEmitter<ImgCropperEvent>();\n\n  /** Emits when the cropper is cleaned */\n  @Output() readonly cleaned = new EventEmitter<void>();\n\n  /** Emit an error when the loaded image is not valid */\n  // tslint:disable-next-line: no-output-native\n  @Output() readonly error = new EventEmitter<ImgCropperErrorEvent>();\n\n  private _currentInputElement?: HTMLInputElement;\n\n  /** Emits whenever the component is destroyed. */\n  private readonly _destroy = new Subject<void>();\n\n  /** Used to subscribe to global move and end events */\n  protected _document: Document;\n\n  constructor(\n    readonly sRenderer: StyleRenderer,\n    private _renderer: Renderer2,\n    readonly _elementRef: ElementRef<HTMLElement>,\n    private cd: ChangeDetectorRef,\n    private _ngZone: NgZone,\n    @Inject(DOCUMENT) _document: any,\n    viewPortRuler: ViewportRuler\n  ) {\n    this._document = _document;\n    viewPortRuler.change()\n    .pipe(takeUntil(this._destroy))\n    .subscribe(() =>\n      this._ngZone.run(() => this.updateCropperPosition())\n    );\n  }\n\n  ngOnInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const element = this._imgContainer.nativeElement;\n      element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    const element = this._imgContainer.nativeElement;\n    this._lastPointerEvent = null;\n    this._removeGlobalEvents();\n    element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n    element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n  }\n\n  /** Load image with canvas */\n  private _imgLoaded(imgElement: HTMLImageElement) {\n    if (imgElement) {\n      this._img = imgElement;\n      const canvas = this._imgCanvas.nativeElement;\n      canvas.width = imgElement.width;\n      canvas.height = imgElement.height;\n      const ctx = canvas.getContext('2d')!;\n      ctx.clearRect(0, 0, imgElement.width, imgElement.height);\n      ctx.drawImage(imgElement, 0, 0);\n\n      /** set min scale */\n      this._updateMinScale(canvas);\n      this._updateMaxScale();\n    }\n  }\n\n  private _setStylesForContImg(values: {\n    x?: number\n    y?: number\n  }) {\n    const newStyles = { } as any;\n    if (values.x != null && values.y != null) {\n      const rootRect = this._rootRect();\n      const x = rootRect.width / 2 - (values.x);\n      const y = rootRect.height / 2 - (values.y);\n\n      this._imgRect.x = (values.x);\n      this._imgRect.y = (values.y);\n      this._imgRect.xc = (x);\n      this._imgRect.yc = (y);\n\n    }\n    newStyles.transform = `translate3d(${(this._imgRect.x)}px,${(this._imgRect.y)}px, 0)`;\n    newStyles.transform += `scale(${this._scal3Fix})`;\n    newStyles.transformOrigin = `${this._imgRect.xc}px ${this._imgRect.yc}px 0`;\n    newStyles['-webkit-transform'] = newStyles.transform;\n    newStyles['-webkit-transform-origin'] = newStyles.transformOrigin;\n    for (const key in newStyles) {\n      if (newStyles.hasOwnProperty(key)) {\n        this._renderer.setStyle(this._imgContainer.nativeElement, key, newStyles[key]);\n      }\n    }\n  }\n  /**\n   * Update area and image position only if needed,\n   * this is used when window resize\n   */\n  updateCropperPosition() {\n    if (this.isLoaded) {\n      this.updatePosition();\n      this._updateAreaIfNeeded();\n    }\n  }\n\n  /** Load Image from input event */\n  selectInputEvent(img: Event) {\n    this._currentInputElement = img.target as HTMLInputElement;\n    const _img = img.target as HTMLInputElement;\n    if (_img.files && _img.files.length !== 1) {\n      return;\n    }\n    const fileSize = _img.files![0].size;\n    const fileName = _img.value.replace(/.*(\\/|\\\\)/, '');\n\n    if (this.maxFileSize && fileSize > this.maxFileSize) {\n      const cropEvent: ImgCropperErrorEvent = {\n        name: fileName,\n        type: _img.files![0].type,\n        size: fileSize,\n        error: ImgCropperError.Size\n      };\n      this.clean();\n      this.error.emit(cropEvent as ImgCropperErrorEvent);\n      return;\n    }\n\n    new Observable<ProgressEvent>(observer => {\n\n      const reader = new FileReader();\n\n      reader.onerror = err => observer.error(err);\n      reader.onabort = err => observer.error(err);\n      reader.onload = (ev) => setTimeout(() => {\n        observer.next(ev);\n        observer.complete();\n      });\n\n      reader.readAsDataURL(_img.files![0]);\n    })\n      .pipe(take(1), takeUntil(this._destroy))\n      .subscribe(\n        (loadEvent) => {\n          const originalDataURL = (loadEvent.target as FileReader).result as string;\n\n          this.loadImage({\n            name: fileName,\n            size: _img.files![0].size, // size in bytes\n            type: this.config.type || _img.files![0].type,\n            originalDataURL\n          });\n\n          this.cd.markForCheck();\n        },\n        () => {\n          const cropEvent: ImgCropperErrorEvent = {\n            name: fileName,\n            size: fileSize,\n            error: ImgCropperError.Other,\n            errorMsg: 'The File could not be loaded.',\n            type: _img.files![0].type\n          };\n          this.clean();\n          this.error.emit(cropEvent as ImgCropperErrorEvent);\n        }\n      );\n\n  }\n\n  /** Set the size of the image, the values can be 0 between 1, where 1 is the original size */\n  setScale(size?: number, noAutoCrop?: boolean) {\n    // fix min scale\n    const newSize = size! >= this.minScale! && size! <= 1 ? size : this.minScale;\n\n    // check\n    const changed = size != null && size !== this.scale && newSize !== this.scale;\n    this._scale = size;\n    if (!changed) {\n      return;\n    }\n    this._scal3Fix = newSize;\n    this._updateAbsoluteScale();\n    if (this.isLoaded) {\n      if (changed) {\n        const originPosition = {...this._imgRect};\n        this.offset = {\n          x: originPosition.x,\n          y: originPosition.y,\n          left: originPosition.xc,\n          top: originPosition.yc\n        };\n        this._setStylesForContImg({});\n        this._simulatePointerMove();\n      } else {\n        return;\n      }\n    } else if (this.minScale) {\n      this._setStylesForContImg({\n        ...this._getCenterPoints()\n      });\n    } else {\n      return;\n    }\n\n    this.scaleChange.emit(size);\n    if (!noAutoCrop) {\n      this._cropIfAutoCrop();\n    }\n\n  }\n\n  private _getCenterPoints() {\n    const root = this._elementRef.nativeElement as HTMLElement;\n    const img = this._imgCanvas.nativeElement;\n    const x = (root.offsetWidth - (img.width)) / 2;\n    const y = (root.offsetHeight - (img.height)) / 2;\n    return {\n      x,\n      y\n    };\n  }\n\n  /**\n   * Fit to screen\n   */\n  fitToScreen() {\n    const container = this._elementRef.nativeElement as HTMLElement;\n    const min = {\n      width: container.offsetWidth,\n      height: container.offsetHeight\n    };\n    const { width, height } = this._img;\n    const minScale = {\n      width: min.width / width,\n      height: min.height / height\n    };\n    const result = Math.max(minScale.width, minScale.height);\n    this.setScale(result);\n  }\n\n  fit() {\n    this.setScale(this.minScale);\n  }\n\n  private _pointerDown = (event: TouchEvent | MouseEvent) => {\n    // Don't do anything if the\n    // user is using anything other than the main mouse button.\n    if (this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n      return;\n    }\n\n    this._ngZone.run(() => {\n      this._isSliding = true;\n      this.offset = {\n        x: this._imgRect.x,\n        y: this._imgRect.y,\n        left: this._imgRect.xc,\n        top: this._imgRect.yc\n      };\n      this._lastPointerEvent = event;\n      this._startPointerEvent = getGesturePointFromEvent(event);\n      event.preventDefault();\n      this._bindGlobalEvents(event);\n    });\n\n  }\n\n  /**\n   * Simulate pointerMove with clientX = 0 and clientY = 0,\n   * this is used by `setScale` and `rotate`\n   */\n  private _simulatePointerMove() {\n    this._isSliding = true;\n    this._startPointerEvent = {\n      x: 0,\n      y: 0\n    };\n    this._pointerMove({\n      clientX: 0,\n      clientY: 0,\n      type: 'n',\n      preventDefault: () => {}\n    } as MouseEvent);\n    this._isSliding = false;\n    this._startPointerEvent = null;\n  }\n\n  _markForCheck() {\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Called when the user has moved their pointer after\n   * starting to drag.\n   */\n  private _pointerMove = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding) {\n      event.preventDefault();\n      this._lastPointerEvent = event;\n      let x: number | undefined, y: number | undefined;\n      const canvas = this._imgCanvas.nativeElement;\n      const scaleFix = this._scal3Fix;\n      const config = this.config;\n      const startP = this.offset;\n      const point = getGesturePointFromEvent(event);\n      const deltaX = point.x - this._startPointerEvent!.x;\n      const deltaY = point.y - this._startPointerEvent!.y;\n      if (!scaleFix || !startP) {\n        return;\n      }\n\n      const isMinScaleY = canvas.height * scaleFix < config.height && config.extraZoomOut;\n      const isMinScaleX = canvas.width * scaleFix < config.width && config.extraZoomOut;\n\n      const limitLeft = (config.width / 2 / scaleFix) >= startP.left - (deltaX / scaleFix);\n      const limitRight = (config.width / 2 / scaleFix) + (canvas.width) - (startP.left - (deltaX / scaleFix)) <= config.width / scaleFix;\n      const limitTop = ((config.height / 2 / scaleFix) >= (startP.top - (deltaY / scaleFix)));\n      const limitBottom = (\n        ((config.height / 2 / scaleFix) + (canvas.height) - (startP.top - (deltaY / scaleFix))) <= (config.height / scaleFix)\n      );\n\n      // Limit for left\n      if ((limitLeft && !isMinScaleX) || (!limitLeft && isMinScaleX)) {\n        x = startP.x + (startP.left) - (config.width / 2 / scaleFix);\n      }\n\n      // Limit for right\n      if ((limitRight && !isMinScaleX) || (!limitRight && isMinScaleX)) {\n        x = startP.x + (startP.left) + (config.width / 2 / scaleFix) - canvas.width;\n      }\n\n      // Limit for top\n      if ((limitTop && !isMinScaleY) || (!limitTop && isMinScaleY)) {\n        y = startP.y + (startP.top) - (config.height / 2 / scaleFix);\n      }\n\n      // Limit for bottom\n      if ((limitBottom && !isMinScaleY) || (!limitBottom && isMinScaleY)) {\n        y = startP.y + (startP.top) + (config.height / 2 / scaleFix) - canvas.height;\n      }\n\n      // When press shiftKey, deprecated\n      // if (event.srcEvent && event.srcEvent.shiftKey) {\n      //   if (Math.abs(event.deltaX) === Math.max(Math.abs(event.deltaX), Math.abs(event.deltaY))) {\n      //     y = this.offset.top;\n      //   } else {\n      //     x = this.offset.left;\n      //   }\n      // }\n\n      if (x === void 0) { x = (deltaX / scaleFix) + (startP.x); }\n      if (y === void 0) { y = (deltaY / scaleFix) + (startP.y); }\n      this._setStylesForContImg({\n        x, y\n      });\n    }\n  }\n\n  updatePosition(): void;\n  updatePosition(xOrigin: number, yOrigin: number): void;\n  updatePosition(xOrigin?: number, yOrigin?: number) {\n    const hostRect = this._rootRect();\n    const areaRect = this._areaCropperRect();\n    const areaWidth = areaRect.width > hostRect.width\n      ? hostRect.width\n      : areaRect.width;\n    const areaHeight = areaRect.height > hostRect.height\n      ? hostRect.height\n      : areaRect.height;\n    let x: number, y: number;\n    if (xOrigin == null && yOrigin == null) {\n      xOrigin = this._imgRect.xc;\n      yOrigin = this._imgRect.yc;\n    }\n    x = (areaRect.left - hostRect.left);\n    y = (areaRect.top - hostRect.top);\n    x -= (xOrigin! - (areaWidth / 2));\n    y -= (yOrigin! - (areaHeight / 2));\n\n    this._setStylesForContImg({\n      x, y\n    });\n  }\n\n  _slideEnd() {\n    this._cropIfAutoCrop();\n  }\n\n  private _cropIfAutoCrop() {\n    if (this.config.autoCrop) {\n      this.crop();\n    }\n  }\n\n  /** + */\n  zoomIn() {\n    const scale = this._scal3Fix! + .05;\n    if (scale > this.minScale! && scale <= this._maxScale!) {\n      this.setScale(scale);\n    } else {\n      this.setScale(this._maxScale!);\n    }\n  }\n\n  /** Clean the img cropper */\n  clean() {\n    // fix choosing the same image does not load\n    if (this._currentInputElement) {\n      this._currentInputElement.value = '';\n      this._currentInputElement = null!;\n    }\n    if (this.isLoaded) {\n      this._imgRect = { } as any;\n      this.offset = undefined;\n      this.scale = undefined as any;\n      this._scal3Fix = undefined;\n      this._rotation = 0;\n      this._minScale = undefined;\n      this._isLoadedImg = false;\n      this.isLoaded = false;\n      this.isCropped = false;\n      this._currentLoadConfig = undefined;\n      this.config = this._configPrimary;\n      const canvas = this._imgCanvas.nativeElement;\n      canvas.width = 0;\n      canvas.height = 0;\n      this.cleaned.emit(null!);\n      this.cd.markForCheck();\n    }\n  }\n\n  /** - */\n  zoomOut() {\n    const scale = this._scal3Fix! - .05;\n    if (scale > this.minScale! && scale <= this._maxScale!) {\n      this.setScale(scale);\n    } else {\n      this.fit();\n    }\n  }\n  center() {\n    const newStyles = {\n      ...this._getCenterPoints()\n    };\n    this._setStylesForContImg(newStyles);\n    this._cropIfAutoCrop();\n  }\n  /**\n   * load an image from a given configuration,\n   * or from the result of a cropped image\n   */\n  loadImage(config: ImgCropperLoaderConfig | string, fn?: () => void) {\n    this.clean();\n    const _config = this._currentLoadConfig = typeof config === 'string'\n      ? { originalDataURL: config }\n      : { ...config };\n    let src = _config.originalDataURL;\n    this._primaryAreaWidth = this._configPrimary.width;\n    this._primaryAreaHeight = this._configPrimary.height;\n    if (_config.areaWidth && _config.areaHeight) {\n      this.config.width = _config.areaWidth;\n      this.config.height = _config.areaHeight;\n    }\n    src = normalizeSVG(src);\n\n    const img = createHtmlImg(src);\n\n    const cropEvent = { ..._config } as ImgCropperEvent;\n\n    new Observable<void>(observer => {\n\n      img.onerror = err => observer.error(err);\n      img.onabort = err => observer.error(err);\n      img.onload = () => observer.next(null!);\n    })\n    .pipe(take(1), takeUntil(this._destroy))\n    .subscribe(\n      () => {\n        this._imgLoaded(img);\n        this._isLoadedImg = true;\n        this.imageLoaded.emit(cropEvent);\n        this.cd.markForCheck();\n        this._ngZone.runOutsideAngular(() => {\n          this._ngZone\n            .onStable\n            .asObservable()\n            .pipe(take(1), takeUntil(this._destroy))\n            .subscribe(\n              () => setTimeout(() => this._ngZone.run(() => this._positionImg(cropEvent, fn)))\n            );\n        });\n      },\n      () => {\n        const error: ImgCropperErrorEvent = {\n          name: _config.name!,\n          error: ImgCropperError.Type,\n          type: _config.type!,\n          size: _config.size!\n        };\n        this.error.emit(error);\n      }\n    );\n  }\n\n  private _updateAreaIfNeeded() {\n    if (!this._config.responsiveArea) {\n      return;\n    }\n\n    const rootRect = this._rootRect();\n    const areaRect = this._areaCropperRect();\n    const minWidth = this.config.minWidth || 1;\n    const minHeight = this.config.minHeight || 1;\n    if (!(\n      areaRect.width > rootRect.width\n      || areaRect.height > rootRect.height\n      || areaRect.width < this._primaryAreaWidth\n      || areaRect.height < this._primaryAreaHeight\n    )) {\n      return;\n    }\n    const areaWidthConf = Math.max(this.config.width, minWidth);\n    const areaWidthMax = Math.max(rootRect.width, minWidth);\n    const minHost = Math.min(\n      Math.max(rootRect.width, minWidth), Math.max(rootRect.height, minHeight)\n    );\n    const currentScale = this._scal3Fix!;\n    let newScale = 0;\n    const roundConf = this.config.round;\n\n    if (roundConf) {\n      this.config.width = this.config.height = minHost;\n    } else {\n      if (areaWidthConf === areaRect.width) {\n        if (areaWidthMax > this._primaryAreaWidth) {\n          this.config.width = this._primaryAreaWidth;\n          this.config.height = (this._primaryAreaWidth * areaRect.height) / areaRect.width;\n          newScale = (currentScale * this._primaryAreaWidth) / areaRect.width;\n        } else {\n          this.config.width = areaWidthMax;\n          this.config.height = (areaWidthMax * areaRect.height) / areaRect.width;\n          newScale = (currentScale * areaWidthMax) / areaRect.width;\n        }\n        this._updateMinScale();\n        this._updateMaxScale();\n        this.setScale(newScale, true);\n        this._markForCheck();\n      }\n    }\n  }\n\n  private _updateAbsoluteScale() {\n    const scale = this._scal3Fix! / (this.config.width / this._primaryAreaWidth);\n    this._absoluteScale = scale;\n  }\n\n  /**\n   * Load Image from URL\n   * @deprecated Use `loadImage` instead of `setImageUrl`\n   * @param src URL\n   * @param fn function that will be called before emit the event loaded\n   */\n  setImageUrl(src: string, fn?: () => void) {\n    this.loadImage(src, fn);\n  }\n\n  private _positionImg(cropEvent: ImgCropperEvent, fn?: () => void) {\n    const loadConfig = this._currentLoadConfig!;\n    this._updateMinScale(this._imgCanvas.nativeElement);\n    this._updateMaxScale();\n    this.isLoaded = false;\n    if (fn) {\n      fn();\n    } else {\n      if (loadConfig.scale) {\n        this.setScale(loadConfig.scale, true);\n      } else {\n        this.setScale(this.minScale, true);\n      }\n      this.rotate(loadConfig.rotation || 0);\n      this._updateAreaIfNeeded();\n      this._markForCheck();\n      this._ngZone.runOutsideAngular(() => {\n        this._ngZone\n          .onStable\n          .asObservable()\n          .pipe(take(1), takeUntil(this._destroy))\n          .subscribe(() => {\n            if (loadConfig.xOrigin != null && loadConfig.yOrigin != null) {\n              this.updatePosition(loadConfig.xOrigin, loadConfig.yOrigin);\n            }\n            this._updateAreaIfNeeded();\n            this.isLoaded = true;\n            this._cropIfAutoCrop();\n            this._ngZone.run(() => {\n              this._markForCheck();\n              this.ready.emit(cropEvent);\n              // tslint:disable-next-line: deprecation\n              this.loaded.emit(cropEvent);\n            });\n          });\n      });\n    }\n  }\n\n  rotate(degrees: number) {\n    let validDegrees = _normalizeDegrees(degrees);\n    // If negative convert to positive\n    if (validDegrees < 0) {\n      validDegrees += 360;\n    }\n    const newRotation = _normalizeDegrees((this._rotation || 0) + validDegrees);\n    if (newRotation === this._rotation) {\n      return;\n    }\n    const degreesRad = validDegrees * Math.PI / 180;\n    const canvas = this._imgCanvas.nativeElement;\n    const canvasClon = createCanvasImg(canvas);\n    const ctx = canvas.getContext('2d')!;\n    this._rotation = newRotation;\n\n    // clear\n    ctx.clearRect(0, 0, canvasClon.width, canvasClon.height);\n\n    // rotate canvas image\n    const transform = `rotate(${validDegrees}deg) scale(${1 / this._scal3Fix!})`;\n    const transformOrigin = `${this._imgRect.xc}px ${this._imgRect.yc}px 0`;\n    canvas.style.transform = transform;\n    // tslint:disable-next-line: deprecation\n    canvas.style.webkitTransform = transform;\n    canvas.style.transformOrigin = transformOrigin;\n    // tslint:disable-next-line: deprecation\n    canvas.style.webkitTransformOrigin = transformOrigin;\n\n    const { left, top } = canvas.getBoundingClientRect() as DOMRect;\n\n    // save rect\n    const canvasRect = canvas.getBoundingClientRect();\n\n    // remove rotate styles\n    canvas.removeAttribute('style');\n\n    // set w & h\n    const w = canvasRect.width;\n    const h = canvasRect.height;\n    ctx.canvas.width = w;\n    ctx.canvas.height = h;\n\n    // clear\n    ctx.clearRect(0, 0, w, h);\n\n    // translate and rotate\n    ctx.translate(w / 2, h / 2);\n    ctx.rotate(degreesRad);\n    ctx.drawImage(canvasClon, -canvasClon.width / 2, -canvasClon.height / 2);\n\n    // Update min scale\n    this._updateMinScale(canvas);\n    this._updateMaxScale();\n\n    // set the minimum scale, only if necessary\n    if (this.scale! < this.minScale!) {\n      this.setScale(0, true);\n    } //                ↑ no AutoCrop\n\n    const rootRect = this._rootRect();\n\n    this._setStylesForContImg({\n      x: (left - rootRect.left),\n      y: (top - rootRect.top)\n    });\n\n    // keep image inside the frame\n    const originPosition = {...this._imgRect};\n    this.offset = {\n      x: originPosition.x,\n      y: originPosition.y,\n      left: originPosition.xc,\n      top: originPosition.yc\n    };\n    this._setStylesForContImg({});\n    this._simulatePointerMove();\n\n    this._cropIfAutoCrop();\n  }\n\n  _updateMinScale(canvas?: HTMLCanvasElement) {\n    if (!canvas) {\n      canvas = this._imgCanvas.nativeElement;\n    }\n    const config = this.config;\n    const minScale = (config.extraZoomOut ? Math.min : Math.max)(\n      config.width / canvas.width,\n      config.height / canvas.height);\n    this._minScale = minScale;\n    this.minScaleChange.emit(minScale!);\n  }\n\n  private _updateMaxScale() {\n    const maxScale = (this.config.width / this._primaryAreaWidth);\n    this._maxScale = maxScale;\n    this.maxScaleChange.emit(maxScale);\n  }\n\n  /**\n   * Resize & crop image\n   */\n  crop(config?: ImgCropperConfig): ImgCropperEvent {\n    const newConfig = config\n    ? mergeDeep({ }, this.config || new ImgCropperConfig(), config) : this.config;\n    const cropEvent = this._imgCrop(newConfig);\n    this.cd.markForCheck();\n    return cropEvent;\n  }\n\n  /**\n   * @docs-private\n   */\n  private _imgCrop(myConfig: ImgCropperConfig) {\n    const canvasElement: HTMLCanvasElement = document.createElement('canvas');\n    const areaRect = this._areaCropperRect();\n    const canvasRect = this._canvasRect();\n    const scaleFix = this._scal3Fix!;\n    const left = (areaRect.left - canvasRect.left) / scaleFix;\n    const top = (areaRect.top - canvasRect.top) / scaleFix;\n    const { output } = myConfig;\n    const currentImageLoadConfig = this._currentLoadConfig!;\n    const area = {\n      width: myConfig.width,\n      height: myConfig.height\n    };\n    canvasElement.width = area.width / scaleFix;\n    canvasElement.height = area.height / scaleFix;\n    const ctx = canvasElement.getContext('2d')!;\n    if (myConfig.fill) {\n      ctx.fillStyle = myConfig.fill;\n      ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n    }\n    ctx.drawImage(this._imgCanvas.nativeElement,\n      -(left), -(top),\n    );\n    const result = canvasElement;\n    if (myConfig.output === ImgResolution.Default) {\n      resizeCanvas(\n        result,\n        this._configPrimary.width,\n        this._configPrimary.height);\n    } else if (typeof output === 'object') {\n      if (output.width && output.height) {\n        resizeCanvas(result, output.width, output.height);\n      } else if (output.width) {\n        const newHeight = area.height * output.width / area.width;\n        resizeCanvas(result, output.width, newHeight);\n      } else if (output.height) {\n        const newWidth = area.width * output.height / area.height;\n        resizeCanvas(result, newWidth, output.height);\n      }\n    }\n    const type = currentImageLoadConfig.originalDataURL.startsWith('http')\n      ? currentImageLoadConfig.type || myConfig.type\n      : myConfig.type || currentImageLoadConfig.type!;\n    const dataURL = result.toDataURL(type);\n    const cropEvent: ImgCropperEvent = {\n      dataURL,\n      type,\n      name: currentImageLoadConfig.name!,\n      areaWidth: this._primaryAreaWidth,\n      areaHeight: this._primaryAreaHeight,\n      width: result.width,\n      height: result.height,\n      originalDataURL: currentImageLoadConfig.originalDataURL,\n      scale: this._absoluteScale!,\n      rotation: this._rotation,\n      left: (areaRect.left - canvasRect.left) / this._scal3Fix!,\n      top: (areaRect.top - canvasRect.top) / this._scal3Fix!,\n      size: currentImageLoadConfig.size!,\n      xOrigin: this._imgRect.xc,\n      yOrigin: this._imgRect.yc,\n      position: {\n        x: this._imgRect.xc,\n        y: this._imgRect.yc\n      }\n    };\n\n    this.isCropped = true;\n    this.cropped.emit(cropEvent);\n    return cropEvent;\n  }\n\n  _rootRect(): DOMRect {\n    return this._elementRef.nativeElement.getBoundingClientRect() as DOMRect;\n  }\n\n  _areaCropperRect(): DOMRect {\n    return this._areaRef.nativeElement.getBoundingClientRect() as DOMRect;\n  }\n\n  _canvasRect(): DOMRect {\n    return this._imgCanvas.nativeElement.getBoundingClientRect();\n  }\n\n\n  /** Called when the user has lifted their pointer. */\n  private _pointerUp = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding) {\n      event.preventDefault();\n      this._removeGlobalEvents();\n      this._isSliding = false;\n      this._startPointerEvent = null;\n      this._cropIfAutoCrop();\n    }\n  }\n\n  /** Called when the window has lost focus. */\n  private _windowBlur = () => {\n    // If the window is blurred while dragging we need to stop dragging because the\n    // browser won't dispatch the `mouseup` and `touchend` events anymore.\n    if (this._lastPointerEvent) {\n      this._pointerUp(this._lastPointerEvent);\n    }\n  }\n\n  private _bindGlobalEvents(triggerEvent: TouchEvent | MouseEvent) {\n    const element = this._document;\n    const isTouch = isTouchEvent(triggerEvent);\n    const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n    const endEventName = isTouch ? 'touchend' : 'mouseup';\n    element.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n    element.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n\n    if (isTouch) {\n      element.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Removes any global event listeners that we may have added. */\n  private _removeGlobalEvents() {\n    const element = this._document;\n    element.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n    element.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n    element.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n    element.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n    element.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  private _getWindow(): Window {\n    return this._document.defaultView || window;\n  }\n\n}\n\n/**\n * Normalize degrees for cropper rotation\n * @docs-private\n */\nexport function _normalizeDegrees(n: number) {\n  const de = n % 360;\n  if (de % 90) {\n    throw new Error(`LyCropper: Invalid \\`${n}\\` degree, only accepted values: 0, 90, 180, 270 & 360.`);\n  }\n  return de;\n}\n\n/**\n * @docs-private\n */\nfunction createCanvasImg(img: HTMLCanvasElement | HTMLImageElement) {\n\n  // create a new canvas\n  const newCanvas = document.createElement('canvas');\n  const context = newCanvas.getContext('2d')!;\n\n  // set dimensions\n  newCanvas.width = img.width;\n  newCanvas.height = img.height;\n\n  // apply the old canvas to the new one\n  context.drawImage(img, 0, 0);\n\n  // return the new canvas\n  return newCanvas;\n}\n\n\nconst DATA_IMAGE_SVG_PREFIX = 'data:image/svg+xml;base64,';\n\nfunction normalizeSVG(dataURL: string) {\n  if (window.atob && isSvgImage(dataURL)) {\n    const len = dataURL.length / 5;\n    const text = window.atob(dataURL.replace(DATA_IMAGE_SVG_PREFIX, ''));\n    const span = document.createElement('span');\n    span.innerHTML = text;\n    const svg = span.querySelector('svg')!;\n    span.setAttribute('style', 'display:none');\n    document.body.appendChild(span);\n    const width = parseFloat(getComputedStyle(svg).width!) || 1;\n    const height = parseFloat(getComputedStyle(svg).height!) || 1;\n    const max = Math.max(width, height);\n\n    svg.setAttribute('width', `${len / (width / max)}px`);\n    svg.setAttribute('height', `${len / (height / max)}px`);\n    const result = DATA_IMAGE_SVG_PREFIX + window.btoa(span.innerHTML);\n    document.body.removeChild(span);\n    return result;\n  }\n  return dataURL;\n}\n\nfunction isSvgImage(dataUrl: string) {\n  return dataUrl.startsWith(DATA_IMAGE_SVG_PREFIX);\n}\n\nfunction createHtmlImg(src: string) {\n  const img = new Image();\n  img.crossOrigin = 'anonymous';\n  img.src = src;\n  return img;\n}\n\n\nfunction getGesturePointFromEvent(event: TouchEvent | MouseEvent) {\n\n  // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n  const point = isTouchEvent(event)\n    ? (event.touches[0] || event.changedTouches[0])\n    : event;\n\n  return {\n    x: point.clientX,\n    y: point.clientY\n  };\n}\n\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n  return event.type[0] === 't';\n}\n\nexport function round(n: number) {\n  return Math.round(n);\n}\n","import { Component, ElementRef, NgZone, Input, OnDestroy, ChangeDetectionStrategy, Inject, ViewChild } from '@angular/core';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport {\n  Style,\n  WithStyles,\n  StyleRenderer } from '@alyle/ui';\nimport { STYLES, LyImageCropper } from './image-cropper';\nimport { DOCUMENT } from '@angular/common';\n\nconst activeEventOptions = normalizePassiveListenerOptions({passive: false});\n\nconst pos = (100 * Math.sqrt(2) - 100) / 2 / Math.sqrt(2);\n\n/**\n * @dynamic\n */\n@Component({\n  selector: 'ly-cropper-area',\n  templateUrl: './image-cropper-area.html',\n  providers: [\n    StyleRenderer\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'lyCropperArea'\n})\nexport class LyCropperArea implements WithStyles, OnDestroy {\n  readonly classes = this.sRenderer.renderSheet(STYLES, 'area');\n\n  private _isSliding: boolean;\n  /** Keeps track of the last pointer event that was captured by the crop area. */\n  private _lastPointerEvent: MouseEvent | TouchEvent | null;\n  private _startPointerEvent: {\n    x: number\n    y: number\n  } | null;\n  private _currentWidth: number;\n  private _currentHeight: number;\n  private _startAreaRect: DOMRect;\n  private _startImgRect: DOMRect;\n\n  /** Used to subscribe to global move and end events */\n  protected _document: Document;\n\n  @ViewChild('resizer') readonly _resizer?: ElementRef;\n\n  @Input()\n  set resizableArea(val: boolean) {\n    if (val !== this._resizableArea) {\n      this._resizableArea = val;\n      Promise.resolve(null).then(() => {\n        if (val) {\n          this._removeResizableArea();\n          this._addResizableArea();\n        } else {\n          this._removeResizableArea();\n        }\n      });\n    }\n  }\n  get resizableArea() {\n    return this._resizableArea;\n  }\n  private _resizableArea: boolean;\n  @Input() keepAspectRatio: boolean;\n  @Input()\n  @Style<boolean, LyCropperArea>(\n    (_value, _, { classes: __ }) => ({ after }) => (className: string) => `${className}{border-radius:50%;}${className} .${__.resizer}{${after}:${pos}%;bottom:${pos}%;transform:translate(4px, 4px);}`\n  ) round: boolean;\n\n  constructor(\n    readonly sRenderer: StyleRenderer,\n    readonly _elementRef: ElementRef,\n    private _ngZone: NgZone,\n    readonly _cropper: LyImageCropper,\n    @Inject(DOCUMENT) _document: any,\n  ) {\n    this._document = _document;\n  }\n\n  ngOnDestroy() {\n    this._removeResizableArea();\n  }\n\n  private _addResizableArea() {\n    this._ngZone.runOutsideAngular(() => {\n      const element = this._resizer!.nativeElement;\n      element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n    });\n  }\n\n  private _removeResizableArea() {\n    const element = this._resizer?.nativeElement;\n    if (element) {\n      this._lastPointerEvent = null;\n      this._removeGlobalEvents();\n      element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n    }\n  }\n\n  private _pointerDown = (event: MouseEvent | TouchEvent) => {\n    // Don't do anything if the\n    // user is using anything other than the main mouse button.\n    if (this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    this._ngZone.run(() => {\n      this._isSliding = true;\n      this._lastPointerEvent = event;\n      this._startPointerEvent = getGesturePointFromEvent(event);\n      this._startAreaRect = this._cropper._areaCropperRect();\n      this._startImgRect = this._cropper._canvasRect();\n      event.preventDefault();\n      this._bindGlobalEvents(event);\n    });\n\n  }\n\n  private _pointerMove = (event: MouseEvent | TouchEvent) => {\n    if (this._isSliding) {\n      event.preventDefault();\n      this._lastPointerEvent = event;\n      const element: HTMLDivElement = this._elementRef.nativeElement;\n      const { width, height, minWidth, minHeight } = this._cropper.config;\n      const point = getGesturePointFromEvent(event);\n      const deltaX = point.x - this._startPointerEvent!.x;\n      const deltaY = point.y - this._startPointerEvent!.y;\n      const startAreaRect = this._startAreaRect;\n      const startImgRect = this._startImgRect;\n      const round = this.round;\n      const keepAspectRatio = this._cropper.config.keepAspectRatio || event.shiftKey;\n      let newWidth = 0;\n      let newHeight = 0;\n      const rootRect = this._cropper._rootRect();\n\n      if (round) {\n        // The distance from the center of the cropper area to the pointer\n        const originX = ((width / 2 / Math.sqrt(2)) + deltaX);\n        const originY = ((height / 2 / Math.sqrt(2)) + deltaY);\n\n        // Leg\n        const side = Math.sqrt(originX ** 2 + originY ** 2);\n        newWidth = newHeight = side * 2;\n\n      } else if (keepAspectRatio) {\n        newWidth = width + deltaX * 2;\n        newHeight = height + deltaY * 2;\n        if (width !== height) {\n          if (width > height) {\n            newHeight = height / (width / newWidth);\n          } else if (height > width) {\n            newWidth = width / (height / newHeight);\n          }\n        } else {\n          newWidth = newHeight = Math.max(newWidth, newHeight);\n        }\n      } else {\n        newWidth = width + deltaX * 2;\n        newHeight = height + deltaY * 2;\n      }\n\n      // To min width\n      if (newWidth < minWidth!) {\n        newWidth = minWidth!;\n      }\n      // To min height\n      if (newHeight < minHeight!) {\n        newHeight = minHeight!;\n      }\n\n      // Do not overflow the cropper area\n      const centerX = startAreaRect.x + startAreaRect.width / 2;\n      const centerY = startAreaRect.y + startAreaRect.height / 2;\n      const topOverflow = startImgRect.y > centerY - (newHeight / 2);\n      const bottomOverflow = centerY + (newHeight / 2) > startImgRect.bottom;\n      const minHeightOnOverflow = Math.min((centerY - startImgRect.y) * 2, (startImgRect.bottom - centerY) * 2);\n      const leftOverflow = startImgRect.x > centerX - (newWidth / 2);\n      const rightOverflow = centerX + (newWidth / 2) > startImgRect.right;\n      const minWidthOnOverflow = Math.min((centerX - startImgRect.x) * 2, (startImgRect.right - centerX) * 2);\n      const minOnOverflow = Math.min(minWidthOnOverflow, minHeightOnOverflow);\n      if (round) {\n        if (topOverflow || bottomOverflow || leftOverflow || rightOverflow) {\n          newHeight = newWidth = minOnOverflow;\n        }\n      } else if (keepAspectRatio) {\n        const newNewWidth: number[] = [];\n        const newNewHeight: number[] = [];\n        if ((topOverflow || bottomOverflow) && Math.min()) {\n          newHeight = minHeightOnOverflow;\n          newNewHeight.push(newHeight);\n          newWidth = width / (height / minHeightOnOverflow);\n          newNewWidth.push(newWidth);\n        }\n        if ((leftOverflow || rightOverflow)) {\n          newWidth = minWidthOnOverflow;\n          newNewWidth.push(newWidth);\n          newHeight = height / (width / minWidthOnOverflow);\n          newNewHeight.push(newHeight);\n        }\n        if (newNewWidth.length === 2) {\n          newWidth = Math.min(...newNewWidth);\n        }\n        if (newNewHeight.length === 2) {\n          newHeight = Math.min(...newNewHeight);\n        }\n      } else {\n        if (topOverflow || bottomOverflow) {\n          newHeight = minHeightOnOverflow;\n        }\n        if (leftOverflow || rightOverflow) {\n          newWidth = minWidthOnOverflow;\n        }\n      }\n\n      // Do not overflow the container\n      if (round) {\n        const min = Math.min(rootRect.width, rootRect.height);\n        if (newWidth > min) {\n          newWidth = newHeight = min;\n        } else if (newHeight > min) {\n          newWidth = newHeight = min;\n        }\n      } else if (keepAspectRatio) {\n        if (newWidth > rootRect.width) {\n          newWidth = rootRect.width;\n          newHeight = height / (width / rootRect.width);\n        } else if (newHeight > rootRect.height) {\n          newWidth = width / (height / rootRect.height);\n          newHeight = rootRect.height;\n        }\n      } else {\n        if (newWidth > rootRect.width) {\n          newWidth = rootRect.width;\n        } else if (newHeight > rootRect.height) {\n          newHeight = rootRect.height;\n        }\n      }\n\n\n      // round values\n      newWidth = Math.round(newWidth);\n      newHeight = Math.round(newHeight);\n\n      element.style.width = `${newWidth}px`;\n      element.style.height = `${newHeight}px`;\n      this._currentWidth = newWidth;\n      this._currentHeight = newHeight;\n    }\n  }\n\n  /** Called when the user has lifted their pointer. */\n  private _pointerUp = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding) {\n      event.preventDefault();\n      this._removeGlobalEvents();\n      this._cropper._primaryAreaWidth = this._cropper.config.width = this._currentWidth;\n      this._cropper._primaryAreaHeight = this._cropper.config.height = this._currentHeight;\n      this._cropper.config = this._cropper.config;\n      this._cropper._updateMinScale();\n      this._isSliding = false;\n      this._startPointerEvent = null;\n    }\n  }\n\n  /** Called when the window has lost focus. */\n  private _windowBlur = () => {\n    // If the window is blurred while dragging we need to stop dragging because the\n    // browser won't dispatch the `mouseup` and `touchend` events anymore.\n    if (this._lastPointerEvent) {\n      this._pointerUp(this._lastPointerEvent);\n    }\n  }\n\n  private _bindGlobalEvents(triggerEvent: TouchEvent | MouseEvent) {\n    const element = this._document;\n    const isTouch = isTouchEvent(triggerEvent);\n    const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n    const endEventName = isTouch ? 'touchend' : 'mouseup';\n    element.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n    element.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n\n    if (isTouch) {\n      element.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Removes any global event listeners that we may have added. */\n  private _removeGlobalEvents() {\n    const element = this._document;\n    element.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n    element.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n    element.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n    element.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n    element.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  private _getWindow(): Window {\n    return this._document.defaultView || window;\n  }\n}\n\nfunction getGesturePointFromEvent(event: TouchEvent | MouseEvent) {\n\n  // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n  const point = isTouchEvent(event)\n    ? (event.touches[0] || event.changedTouches[0])\n    : event;\n\n  return {\n    x: point.clientX,\n    y: point.clientY\n  };\n}\n\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n  return event.type[0] === 't';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { LyImageCropper } from './image-cropper';\nimport { LyCropperArea } from './image-cropper-area';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [LyImageCropper],\n  declarations: [LyImageCropper, LyCropperArea]\n})\nexport class LyImageCropperModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {LyCropperArea as ɵa} from './image-cropper-area';"]}