(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@alyle/ui'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/platform'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@alyle/ui/carousel', ['exports', '@angular/core', '@alyle/ui', 'rxjs', 'rxjs/operators', '@angular/cdk/platform', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ly = global.ly || {}, global.ly.carousel = {}), global.ng.core, global.ly.core, global.rxjs, global.rxjs.operators, global.ng.cdk.platform, global.ng.common));
}(this, (function (exports, core, ui, rxjs, operators, platform, common) { 'use strict';

    /** Default interval in ms */
    var DEFAULT_INTERVAL = 7000;
    var DEFAULT_AUTOPLAY = true;
    var DEFAULT_HAS_PROGRESS_BAR = false;
    var STYLE_PRIORITY = -2;
    var STYLES = function (theme, ref) {
        var dir = theme.getDirection(ui.DirAlias.before);
        var right = dir === 'right' ? 0 : 180;
        var left = dir === 'left' ? 0 : 180;
        var carousel = ref.selectorsOf(STYLES);
        var barAnimation = ui.keyframesUniqueId.next();
        var after = theme.after, before = theme.before;
        return {
            $priority: STYLE_PRIORITY,
            $global: function (className) { return "@keyframes " + barAnimation + "{" + className + " 0%{transform:translateX(0%);}" + className + " 100%{transform:translateX(" + (dir === 'left' ? '-' : '') + "100%);}}"; },
            root: function () { return function (className) { return className + "{display:block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;position:relative;}" + ui.st2c(((theme.carousel
                && theme.carousel.root
                && (theme.carousel.root instanceof ui.StyleCollection
                    ? theme.carousel.root.setTransformer(function (fn) { return fn(carousel); })
                    : theme.carousel.root(carousel)))), "" + className) + className + " " + carousel.actions + ".right{" + after + ":0;transform:rotate(" + right + "deg);}" + className + " " + carousel.actions + ".left{" + before + ":0;transform:rotate(" + left + "deg);}" + className + " svg{display:block;fill:currentColor;}"; }; },
            actions: function (className) { return className + "{position:absolute;top:0;bottom:0;margin:auto .25em;height:1em;width:1em;font-size:36px;cursor:pointer;background:" + theme.background.primary.default.alpha(.25) + ";color:" + theme.text.primary + ";will-change:transform;}"; },
            slideContainer: function (className) { return className + "{overflow:hidden;display:block;width:100%;height:100%;position:relative;touch-action:pan-y !important;}"; },
            slide: function (className) { return className + "{display:flex;width:100%;height:100%;will-change:transform;}" + className + " > ly-carousel-item{width:100%;flex-shrink:0;position:relative;background-size:cover;background-position:center;background-repeat:no-repeat;}"; },
            slideContent: function (className) { return className + "{display:flex;}"; },
            slideAnim: function (className) { return className + " > div{transition:transform 750ms cubic-bezier(.1, 1, 0.5, 1);}"; },
            slideNoEvent: function (className) { return className + ">div{touch-action:initial !important;-webkit-user-drag:initial !important;}"; },
            indicators: function () { return function (className) { return className + "{position:absolute;bottom:0;left:0;right:0;margin:0;box-sizing:border-box;display:flex;align-items:center;justify-content:center;height:48px;}"; }; },
            indicator: function () { return function (className) { return className + "{display:inline-block;border-radius:50%;cursor:pointer;position:relative;padding:.5em;outline:none;}"; }; },
            indicatorIcon: function () { return function (className) { return className + "{transition:300ms cubic-bezier(0.65, 0.05, 0.36, 1);width:1em;height:1em;transform:scale(.5);border-radius:50%;will-change:transform;display:block;opacity:.65;box-shadow:" + ui.shadowBuilder(8, theme.text.default) + ";background:" + theme.background.primary.default + ";}"; }; },
            indicatorActive: function () { return function (className) { return className + " " + carousel.indicatorIcon + "{transform:scale(1);opacity:1;}"; }; },
            barContainer: function (className) { return className + "{background:" + theme.background.primary.default.alpha(.25) + ";height:4px;position:absolute;bottom:0;width:100%;}"; },
            bar: function (className) { return className + "{height:4px;position:absolute;bottom:0;width:100%;animation-name:" + barAnimation + ";animation-timing-function:linear;animation-iteration-count:infinite;background:" + theme.text.primary + ";}"; }
        };
    };
    (function (CarouselMode) {
        /** full */
        CarouselMode[CarouselMode["default"] = 0] = "default";
        CarouselMode[CarouselMode["inline"] = 1] = "inline";
    })(exports.CarouselMode || (exports.CarouselMode = {}));
    var LyCarousel = /** @class */ (function () {
        function LyCarousel(_el, _cd, _theme, _renderer, sRenderer, _platform) {
            this._el = _el;
            this._cd = _cd;
            this._theme = _theme;
            this._renderer = _renderer;
            this.sRenderer = sRenderer;
            this._platform = _platform;
            /** @docs-private */
            this.classes = this.sRenderer.renderSheet(STYLES, true);
            this._intervalFn = null;
            /** @docs-private */
            this.mode = exports.CarouselMode.default;
            this.selectedIndex = 0;
            this._interval = DEFAULT_INTERVAL;
            /** Emits whenever the component is destroyed. */
            this._destroy = new rxjs.Subject();
            this._hasNavigationArrows = true;
            this._hasNavigationIndicators = true;
        }
        Object.defineProperty(LyCarousel.prototype, "_isIntervalFn", {
            /** @internal */
            get: function () {
                return !!this._intervalFn;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyCarousel.prototype, "pauseOnHover", {
            /**
             * It will pause the slide change when the mouse cursor passes
             * through the carousel.
             */
            get: function () {
                return this._pauseOnHover;
            },
            set: function (val) {
                var newVal = ui.toBoolean(val);
                this._pauseOnHover = newVal;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyCarousel.prototype, "touch", {
            get: function () {
                return this._touch;
            },
            set: function (val) {
                var newVal = ui.toBoolean(val);
                this._touch = newVal;
                if (newVal) {
                    this._renderer.removeClass(this._el.nativeElement, this.classes.slideNoEvent);
                }
                else {
                    this._renderer.addClass(this._el.nativeElement, this.classes.slideNoEvent);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyCarousel.prototype, "autoplay", {
            get: function () {
                return this._autoplay;
            },
            set: function (val) {
                var newVal = ui.toBoolean(val);
                this._autoplay = newVal;
                if (newVal) {
                    this._resetInterval();
                }
                else {
                    this.stop();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyCarousel.prototype, "hasProgressBar", {
            get: function () {
                return this._hasProgressBar;
            },
            set: function (val) {
                var newVal = ui.toBoolean(val);
                this._hasProgressBar = newVal;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyCarousel.prototype, "interval", {
            get: function () {
                return this._interval;
            },
            set: function (val) {
                this._interval = val;
                this._resetInterval();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyCarousel.prototype, "hasNavigationArrows", {
            get: function () {
                return this._hasNavigationArrows;
            },
            set: function (val) {
                this._hasNavigationArrows = ui.toBoolean(val);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyCarousel.prototype, "hasNavigationIndicators", {
            get: function () {
                return this._hasNavigationIndicators;
            },
            set: function (val) {
                this._hasNavigationIndicators = ui.toBoolean(val);
            },
            enumerable: false,
            configurable: true
        });
        LyCarousel.prototype.ngOnInit = function () {
            if (!this.touch) {
                this.touch = false;
            }
            if (this.autoplay == null) {
                this.autoplay = DEFAULT_AUTOPLAY;
            }
            if (this.hasProgressBar == null) {
                this.hasProgressBar = DEFAULT_HAS_PROGRESS_BAR;
            }
        };
        LyCarousel.prototype.ngAfterViewInit = function () {
            var _this = this;
            this._renderer.addClass(this.slideContainer.nativeElement, this.classes.slideContainer);
            if (this._platform.isBrowser) {
                this._renderer.addClass(this.slideContainer.nativeElement, this.classes.slideAnim);
            }
            this.lyItems.changes.pipe(operators.takeUntil(this._destroy)).subscribe(function () { return _this._markForCheck(); });
        };
        LyCarousel.prototype.ngOnDestroy = function () {
            this._destroy.next();
            this._destroy.complete();
            if (this._platform.isBrowser) {
                this.stop();
            }
        };
        LyCarousel.prototype._onMouseEnter = function () {
            if (this.pauseOnHover) {
                this.stop();
            }
        };
        LyCarousel.prototype._onMouseLeave = function () {
            if (this.pauseOnHover) {
                this._resetInterval();
            }
        };
        /** @docs-private */
        LyCarousel.prototype._onDragStart = function () {
            var _this = this;
            this.stop();
            this._renderer.removeClass(this.slideContainer.nativeElement, this.classes.slideAnim);
            this._selectedElement = this.lyItems.find(function (_item, index) { return index === _this.selectedIndex; })._nativeElement;
        };
        LyCarousel.prototype._onDrag = function (e) {
            var rect = this._selectedElement.getBoundingClientRect();
            if (Math.abs(e.deltaX) < rect.width) {
                this._onPan(e.deltaX);
            }
            else {
                this._onPan(rect.width * Math.sign(e.deltaX));
            }
        };
        LyCarousel.prototype._onDragEnd = function (e) {
            var rect = this._selectedElement.getBoundingClientRect();
            var dir = this._theme.variables.getDirection(ui.DirAlias.before);
            this._renderer.addClass(this.slideContainer.nativeElement, this.classes.slideAnim);
            this._select(this.selectedIndex);
            if (Math.abs(e.deltaX) > rect.width / 2) {
                if (0 > e.deltaX) {
                    this.next();
                }
                else if (0 < e.deltaX) {
                    this.prev();
                }
            }
            else if (e.additionalEvent) {
                var eventName = e.additionalEvent;
                if (Math.abs(e.velocity) >= 0.25) {
                    if (eventName === 'slideleft') {
                        if (dir === 'left') {
                            this.next();
                        }
                        else {
                            this.prev();
                        }
                    }
                    else if (eventName === 'slideright') {
                        if (dir === 'right') {
                            this.next();
                        }
                        else {
                            this.prev();
                        }
                    }
                }
            }
            this._renderer.removeStyle(this._slide.nativeElement, 'transform');
        };
        LyCarousel.prototype._onDragCancel = function () {
            this._renderer.addClass(this.slideContainer.nativeElement, this.classes.slideAnim);
            this._select(this.selectedIndex);
            this._resetInterval();
        };
        LyCarousel.prototype._select = function (val, notResetInterval) {
            this.selectedIndex = val;
            if (this.mode === exports.CarouselMode.default) {
                this._slideClass = this._theme.addStyle("lyCarousel.select:" + val.toString(32), function (theme) {
                    var sign = theme.getDirection(ui.DirAlias.before) === 'left' ? -1 : 1;
                    return {
                        transform: "translateX(" + 100 * val * sign + "%)"
                    };
                }, this._slide.nativeElement, this._slideClass, STYLE_PRIORITY);
            }
            if (!notResetInterval) {
                if (this.autoplay && !this.pauseOnHover) {
                    this._resetInterval();
                }
            }
        };
        LyCarousel.prototype.prev = function () {
            var len = this.lyItems.length - 1;
            var prev = this.selectedIndex - 1;
            this._select(prev < 0 ? len : prev);
        };
        LyCarousel.prototype.next = function (notResetInterval) {
            var len = this.lyItems.length - 1;
            var next = this.selectedIndex + 1;
            this._select(next > len ? 0 : next, notResetInterval);
        };
        LyCarousel.prototype.stop = function () {
            if (this._intervalFn !== null) {
                clearInterval(this._intervalFn);
                this._intervalFn = null;
            }
        };
        LyCarousel.prototype._resetInterval = function () {
            var _this = this;
            if (this._platform.isBrowser) {
                this.stop();
                this._restartProgressBarAnimation();
                this._markForCheck();
                this._intervalFn = setInterval(function () {
                    _this.next(true);
                    _this._restartProgressBarAnimation();
                    _this._markForCheck();
                }, this.interval);
            }
        };
        LyCarousel.prototype._restartProgressBarAnimation = function () {
            if (this.hasProgressBar && this._progressBar) {
                var el = this._progressBar.nativeElement;
                // Hack for restart animation
                el.style.animationName = 'øfakeName';
                window.getComputedStyle(el).getPropertyValue('opacity');
                el.style.animationName = '';
            }
        };
        LyCarousel.prototype._onPan = function (x) {
            var sign = this._theme.variables.getDirection(ui.DirAlias.before) === 'left' ? -1 : 1;
            this._renderer.setStyle(this._slide.nativeElement, 'transform', "translateX(calc(" + sign * 100 * this.selectedIndex + "% + " + x + "px))");
        };
        LyCarousel.prototype._markForCheck = function () {
            this._cd.markForCheck();
        };
        return LyCarousel;
    }());
    LyCarousel.decorators = [
        { type: core.Component, args: [{
                    selector: 'ly-carousel',
                    template: "<div\n(slidestart)=\"touch && _onDragStart()\"\n(slideleft)=\"touch && _onDrag($event)\"\n(slideright)=\"touch && _onDrag($event)\"\n(slidecancel)=\"touch && _onDragCancel()\"\n(slideend)=\"touch && _onDragEnd($event)\"\n#slideContainer\n>\n  <div #_slide [className]=\"classes.slide\">\n    <ng-content></ng-content>\n  </div>\n  <ol [className]=\"classes.indicators\" *ngIf=\"lyItems.length !== 1 && hasNavigationIndicators\">\n    <li\n      *ngFor=\"let item of lyItems; index as i\"\n      [ngClass]=\"[classes.indicator, selectedIndex == i ? classes.indicatorActive : '']\"\n      (click)=\"_select(i)\"\n    >\n      <span\n        [class]=\"classes.indicatorIcon\"\n      ></span>\n    </li>\n  </ol>\n  <div *ngIf=\"hasNavigationArrows\" [ngClass]=\"[classes.actions, 'left']\" (click)=\"prev()\">\n    <svg viewBox=\"0 0 24 24\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg>\n  </div>\n  <div *ngIf=\"hasNavigationArrows\" [ngClass]=\"[classes.actions, 'right']\" (click)=\"next()\">\n    <svg viewBox=\"0 0 24 24\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg>\n  </div>\n  <div\n    [className]=\"classes.barContainer\"\n    *ngIf=\"hasProgressBar && _isIntervalFn && interval && autoplay\"\n  >\n    <div\n      [className]=\"classes.bar\"\n      #_progressBar\n      [style.animation-duration]=\"interval + 'ms'\"\n    ></div>\n  </div>\n</div>",
                    changeDetection: core.ChangeDetectionStrategy.OnPush,
                    preserveWhitespaces: false,
                    host: {
                        '(mouseenter)': '_onMouseEnter()',
                        '(mouseleave)': '_onMouseLeave()'
                    },
                    providers: [
                        ui.StyleRenderer
                    ]
                },] }
    ];
    LyCarousel.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.ChangeDetectorRef },
        { type: ui.LyTheme2 },
        { type: core.Renderer2 },
        { type: ui.StyleRenderer },
        { type: platform.Platform }
    ]; };
    LyCarousel.propDecorators = {
        slideContainer: [{ type: core.ViewChild, args: ['slideContainer',] }],
        _slide: [{ type: core.ViewChild, args: ['_slide',] }],
        _progressBar: [{ type: core.ViewChild, args: ['_progressBar',] }],
        lyItems: [{ type: core.ContentChildren, args: [core.forwardRef(function () { return LyCarouselItem; }),] }],
        mode: [{ type: core.Input }],
        selectedIndex: [{ type: core.Input }],
        pauseOnHover: [{ type: core.Input }],
        touch: [{ type: core.Input }],
        autoplay: [{ type: core.Input }],
        hasProgressBar: [{ type: core.Input }],
        interval: [{ type: core.Input }],
        hasNavigationArrows: [{ type: core.Input }],
        hasNavigationIndicators: [{ type: core.Input }]
    };
    var LyCarouselItem = /** @class */ (function () {
        function LyCarouselItem(_theme, _el) {
            this._theme = _theme;
            this._nativeElement = _el.nativeElement;
        }
        Object.defineProperty(LyCarouselItem.prototype, "srcImg", {
            set: function (value) {
                this._className = this._theme.addStyle("ly-carousel-img:" + value, ("background-image: url('" + value + "')"), this._nativeElement, this._className, STYLE_PRIORITY);
            },
            enumerable: false,
            configurable: true
        });
        return LyCarouselItem;
    }());
    LyCarouselItem.decorators = [
        { type: core.Directive, args: [{
                    selector: 'ly-carousel-item'
                },] }
    ];
    LyCarouselItem.ctorParameters = function () { return [
        { type: ui.LyTheme2 },
        { type: core.ElementRef }
    ]; };
    LyCarouselItem.propDecorators = {
        srcImg: [{ type: core.Input }]
    };

    var LyCarouselModule = /** @class */ (function () {
        function LyCarouselModule() {
        }
        return LyCarouselModule;
    }());
    LyCarouselModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule, ui.LyCommonModule],
                    exports: [LyCarouselItem, LyCarousel, ui.LyCommonModule],
                    declarations: [LyCarouselItem, LyCarousel]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.LyCarousel = LyCarousel;
    exports.LyCarouselItem = LyCarouselItem;
    exports.LyCarouselModule = LyCarouselModule;
    exports.STYLES = STYLES;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=alyle-ui-carousel.umd.js.map
