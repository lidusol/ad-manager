{"version":3,"file":"alyle-ui-divider.umd.js","sources":["../../../lib/divider/divider.ts","../../../lib/divider/divider.module.ts","../../../lib/divider/alyle-ui-divider.ts"],"names":["toBoolean","Directive","StyleRenderer","Input","NgModule"],"mappings":";;;;;;IAMA,IAAM,MAAM,GAAG,UAAC,KAAqB,IAAK,OAAA,UAAC,SAAiB,IAAK,OAAG,SAAS,wCAAmC,KAAK,CAAC,OAAO,kBAAe,GAAA,GAAA,CAAC;AAC7I;AAEO;AAEQ,QA0Bb,mBACW,SAAwB;AAClC,YADU,cAAS,GAAT,SAAS,CAAe;AACrC,SAAO;AACP,QArBE,sBACI,4BAAK;AAAI,iBAYb;AACF,gBAAI,OAAO,IAAI,CAAC,MAAM,CAAC;AACvB,aAAG;AACF;AAGS,iBAnBR,UACU,GAAY;AACxB,gBAAI,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAGA,YAAS,CAAC,GAAG,CAAC,CAAC;AAChD,gBAAI,IAAI,MAAM,EAAE;AAChB,oBAAM,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CACzB,SAAS,CAAC,CAAC,YAAS,EACvB,UAAC,EAAQ;AAAI,4BAAX,MAAM,YAAA;AAAE,wBAAI,OAAA,UAAC,SAAiB,IAAK,OAAG,SAAS,gBAAW,MAAM,YAAS,GAAA;AACnF,qBADmF,EAC3E,IAAI,CAAC,GAAG,CAAC,CACV,CAAC;AACR,iBAAK;AAAC,qBAAK;AACX,oBAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C,iBAAK;AACL,aAAG;AACF;AACe;AAIf,WANE;AACH,QASE,4BAAQ,GAAR;AACD,YAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAG;;;;;;;;;;;;;;;oBACH;AAAC;AACwB;AAAU,IA9BjB,WAAC,GAAG,WAAW,CAAC,AADzB;6CANRC,7CAMS;KANA,SAAC,dAOU,gBAZnBC,gBAAa;CAMb,QAAQ,TALT;CAKW,YAAY,bALb;EAMT,SAAS,EAAE,bAJF,wBAaRC,UAAK;CARJD,DASH;AAAO;SATS,sBACd,kBACF,jDAOQ;AAC2B,QCdpC;AAA6B;;;;;;;;;;gDAGzB;AAAC;AAAgC,SAH5B;AAAC;AAAC,ICPX;0CDGCE,1CCFD;AAEA;AACO;EDDE,SAAC,sBACR,jCCAM;KDAC,EAAE,CAAC,SAAS,CAAC,sBACpB,xCCAW;KDAC,EAAE,CAAC,SAAS,CAAC,lBCAiC;AAAqB;cDChF,dCDiF;AAAmE;AAAC;AAAM","sourcesContent":["import { Directive, Input, OnInit } from '@angular/core';\nimport {\n  ThemeVariables,\n  StyleRenderer,\n  toBoolean } from '@alyle/ui';\n\nconst STYLES = (theme: ThemeVariables) => (className: string) => `${className}{display:block;background-color:${theme.divider};height:1px;}`;\n\n@Directive({\n  selector: 'ly-divider',\n  providers: [\n    StyleRenderer\n  ]\n})\nexport class LyDivider implements OnInit {\n  static readonly и = 'LyDivider';\n  private _inset: boolean;\n\n  /** Add indentation (72px) */\n  @Input()\n  set inset(val: boolean) {\n    const newVal = this._inset = toBoolean(val);\n    if (newVal) {\n      this[0x1] = this.sRenderer.add(\n        `${LyDivider.и}--inset`,\n        ({before}) => (className: string) => `${className}{margin-${before}:74px;}`,\n        this[0x1]\n      );\n    } else {\n      this.sRenderer.removeClass(this[0x1]);\n    }\n  }\n  get inset() {\n    return this._inset;\n  }\n  [0x1]: string;\n\n  constructor(\n    readonly sRenderer: StyleRenderer\n  ) { }\n\n  ngOnInit() {\n    this.sRenderer.add(STYLES);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LyDivider } from './divider';\n\n@NgModule({\n  exports: [LyDivider],\n  declarations: [LyDivider]\n})\nexport class LyDividerModule {\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}