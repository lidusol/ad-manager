!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("@alyle/ui")):"function"==typeof define&&define.amd?define("@alyle/ui/divider",["exports","@angular/core","@alyle/ui"],r):r(((e="undefined"!=typeof globalThis?globalThis:e||self).ly=e.ly||{},e.ly.divider={}),e.ng.core,e.ly.core)}(this,(function(e,r,t){"use strict";var n=function(e){return function(r){return r+"{display:block;background-color:"+e.divider+";height:1px;}"}},i=n,o=function(){function e(e){this.sRenderer=e}return Object.defineProperty(e.prototype,"inset",{get:function(){return this._inset},set:function(r){(this._inset=t.toBoolean(r))?this[1]=this.sRenderer.add(e.и+"--inset",(function(e){var r=e.before;return function(e){return e+"{margin-"+r+":74px;}"}}),this[1]):this.sRenderer.removeClass(this[1])},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){this.sRenderer.add(n)},e}();o.и="LyDivider",o.decorators=[{type:r.Directive,args:[{selector:"ly-divider",providers:[t.StyleRenderer]}]}],o.ctorParameters=function(){return[{type:t.StyleRenderer}]},o.propDecorators={inset:[{type:r.Input}]};var s=function(){};s.decorators=[{type:r.NgModule,args:[{exports:[o],declarations:[o]}]}],e.LyDivider=o,e.LyDividerModule=s,e.ɵ0=i,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=alyle-ui-divider.umd.min.js.map