{"version":3,"file":"alyle-ui-grid.umd.js","sources":["../../../lib/grid/grid.ts","../../../lib/grid/grid.module.ts","../../../lib/grid/alyle-ui-grid.ts"],"sourcesContent":["import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\nimport {\n  LyTheme2,\n  eachMedia,\n  ThemeVariables,\n  StyleCollection,\n  StyleTemplate,\n  StyleRenderer } from '@alyle/ui';\n\nconst STYLE_PRIORITY = -1;\n\nconst ALIGN_ALIAS = {\n  rowReverse: 'row-reverse',\n  columnReverse: 'column-reverse',\n  wrapReverse: 'wrap-reverse',\n  start: 'flex-start',\n  end: 'flex-end',\n  between: 'space-between',\n  around: 'space-around',\n  evenly: 'space-evenly',\n};\n\nexport type AlignItems = 'start' | 'center' | 'end' | 'stretch' | 'baseline';\n\nexport const STYLES = () => ({\n  $priority: STYLE_PRIORITY,\n  $name: LyGrid.и,\n  root: (className: string) => `${className}{width:100%;display:flex;flex-wrap:wrap;box-sizing:border-box;}`,\n  item: (className: string) => `${className},${className} :first-child{box-sizing:border-box;}`\n});\n\nexport type Justify = 'start' | 'center' | 'end' | 'between' | 'around' | 'evenly';\nexport type Direction = 'row' | 'rowReverse' | 'column' | 'columnReverse';\n\n/**\n * Grid container\n */\n@Directive({\n  selector: 'ly-grid[container]'\n})\nexport class LyGrid {\n  static readonly и = 'LyGrid';\n  /**\n   * Styles\n   * @docs-private\n   */\n  readonly classes = this.theme.renderStyleSheet(STYLES);\n\n  private _spacing: string | number;\n  _spacingClass?: string;\n\n  private _spacingX: string | number;\n  _spacingXClass?: string;\n\n  private _spacingY: string | number;\n  _spacingYClass?: string;\n\n\n  private _negativeMarginClass?: string;\n\n  private _justify: Justify;\n  private _justifyClass?: string;\n\n  private _direction: Direction;\n  private _directionClass?: string;\n\n  private _alignItems: AlignItems;\n  private _alignItemsClass?: string;\n\n  @Input()\n  get spacingX(): string | number {\n    return this._spacingX;\n  }\n  set spacingX(val: string | number) {\n    if (val !== this.spacingX) {\n      this._spacingX = val;\n      this._createSpacingClass(undefined, val);\n    }\n  }\n\n  @Input()\n  get spacingY(): string | number {\n    return this._spacingY;\n  }\n  set spacingY(val: string | number) {\n    if (val !== this.spacingY) {\n      this._spacingY = val;\n      this._createSpacingClass(undefined, undefined, val);\n    }\n  }\n\n  /**\n   * Defines the space between the component with the `item` attribute.\n   * Support breakpoints\n   */\n  @Input()\n  get spacing(): string | number {\n    return this._spacing;\n  }\n  set spacing(val: string | number) {\n    if (val !== this.spacing) {\n      this._spacing = val;\n      this._createSpacingClass(val);\n    }\n  }\n\n  /**\n   * Only one param must be defined\n   */\n  private _createSpacingClass(xy?: string | number, x?: string | number, y?: string | number) {\n    const newSpacingClass = this.theme.addStyle(`lyGrid-spacing:${xy}·${x}·${y}`, (theme: ThemeVariables) => {\n      const val = (xy || x || y) as string | number;\n      const spacingStyles: {\n        padding?: string\n      } = {};\n      eachMedia(val, (value, media) => {\n        const valuePadding = `${(+value) / 2}px`;\n        const padding = xy != null\n          ? valuePadding\n          : x != null\n            ? `0 ${valuePadding}`\n            : `${valuePadding} 0`;\n        if (media) {\n          spacingStyles[theme.getBreakpoint(media)] = {\n            padding\n          };\n        } else {\n          spacingStyles.padding = padding;\n        }\n      });\n      return spacingStyles;\n    }, undefined, undefined, STYLE_PRIORITY);\n\n    if (xy) {\n      this._spacingClass = newSpacingClass;\n    } else {\n      if (x) {\n        this._spacingXClass = newSpacingClass;\n      }\n      if (y) {\n        this._spacingYClass = newSpacingClass;\n      }\n    }\n\n    this._negativeMarginClass = this.theme.addStyle(`lyGrid-negative-margin:${xy}·${x}·${y}`, (theme: ThemeVariables) => {\n      const val = (xy || x || y) as string | number;\n      let negativeMarginStyles: {\n        margin?: string\n        width?: string\n      };\n      eachMedia(val, (value, media) => {\n        const valueMargin = `${(-value) / 2}px`;\n        const margin = xy != null\n          ? valueMargin\n          : x != null\n            ? `0 ${valueMargin}`\n            : `${valueMargin} 0`;\n        const negativeMarginstyles: {\n          margin: string\n          width?: string\n        } = { margin };\n\n        if (xy != null || x != null) {\n          negativeMarginstyles.width = `calc(100% + ${value}px)`;\n        }\n        if (media) {\n          if (!negativeMarginStyles) {\n            negativeMarginStyles = {};\n          }\n          negativeMarginStyles[theme.getBreakpoint(media)] = negativeMarginstyles;\n        } else {\n          negativeMarginStyles = negativeMarginstyles;\n        }\n      });\n      return negativeMarginStyles!;\n    }, this.el.nativeElement, this._negativeMarginClass, STYLE_PRIORITY);\n  }\n\n  /**\n   * Defines the justify-content style property.\n   * Support breakpoints\n   */\n  @Input()\n  get justify(): Justify {\n    return this._justify;\n  }\n  set justify(val: Justify) {\n    if (val !== this.justify) {\n      this._justify = val;\n      this._justifyClass = this.theme.addStyle(`lyGrid-justify:${val}`, (theme: ThemeVariables) => {\n        let justifyStyles: {\n          justifyContent?: string\n        };\n        eachMedia(val, (value, media) => {\n          const newJustifyStyles = {\n            justifyContent: value in ALIGN_ALIAS\n            ? ALIGN_ALIAS[value]\n            : value\n          };\n          if (media) {\n            if (!justifyStyles) {\n              justifyStyles = {};\n            }\n            justifyStyles[theme.getBreakpoint(media)] = newJustifyStyles;\n          } else {\n            justifyStyles = newJustifyStyles;\n          }\n        });\n        return justifyStyles!;\n      }, this.el.nativeElement, this._justifyClass, STYLE_PRIORITY);\n    }\n  }\n\n  /**\n   * Defines the justify-content style property.\n   * Support breakpoints\n   */\n  @Input()\n  get direction(): Direction {\n    return this._direction;\n  }\n  set direction(val: Direction) {\n    if (val !== this.direction) {\n      this._direction = val;\n      this._directionClass = this.theme.addStyle(`lyGrid-direction:${val}`, (theme: ThemeVariables) => {\n        let directionStyles: {\n          flexDirection?: string\n        };\n        eachMedia(val, (value, media) => {\n          const newDirectionStyles = {\n            flexDirection: value in ALIGN_ALIAS\n            ? ALIGN_ALIAS[value]\n            : value\n          };\n          if (media) {\n            if (!directionStyles) {\n              directionStyles = {};\n            }\n            directionStyles[theme.getBreakpoint(media)] = newDirectionStyles;\n          } else {\n            directionStyles = newDirectionStyles;\n          }\n        });\n        return directionStyles!;\n      }, this.el.nativeElement, this._directionClass, STYLE_PRIORITY);\n    }\n  }\n\n  /**\n   * Defines the `align-items` style property.\n   * Support breakpoints\n   */\n  @Input()\n  set alignItems(val: AlignItems) {\n    this._alignItems = val;\n    this._alignItemsClass = this.theme.addStyle(`lyGrid.align:${val}`, (theme: ThemeVariables) => {\n      let alignItemsStyles: {\n        alignItems?: string,\n        [media: string]: {\n          alignItems?: string\n        } | string | undefined\n      };\n      eachMedia(val, (value, media) => {\n        const newAlignItemsStyles = {\n          alignItems: value in ALIGN_ALIAS\n          ? ALIGN_ALIAS[value]\n          : value\n        };\n        if (media) {\n          if (!alignItemsStyles) {\n            alignItemsStyles = {};\n          }\n          alignItemsStyles[theme.getBreakpoint(media)] = newAlignItemsStyles;\n        } else {\n          alignItemsStyles = newAlignItemsStyles;\n        }\n      });\n      return alignItemsStyles!;\n    }, this.el.nativeElement, this._alignItemsClass, STYLE_PRIORITY);\n  }\n  get alignItems() {\n    return this._alignItems;\n  }\n\n  constructor(\n    private theme: LyTheme2,\n    private el: ElementRef,\n  ) {\n    this.el.nativeElement.classList.add(this.classes.root);\n  }\n}\n\n@Directive({\n  selector: 'ly-grid[item], [ly-grid-item], [lyGridItem]',\n  providers: [\n    StyleRenderer\n  ]\n})\nexport class LyGridItem implements OnInit {\n  static readonly и = 'LyGridItem';\n  private _col: string | number;\n  private _colClass: string | null;\n\n  private _order: string | number;\n  private _orderClass: string;\n\n  /**\n   * Defines the number of grids\n   * Support breakpoints\n   */\n  @Input()\n  get col(): string | number {\n    return this._col;\n  }\n  set col(val: string | number) {\n    const newVal = this._col = val || 0;\n    this._colClass = this._sr.add(`${LyGridItem.и}--col-${newVal}`, (theme: ThemeVariables) => {\n      const medias = new StyleCollection<StyleTemplate>();\n      eachMedia(newVal, (value, media) => {\n        if (typeof value === 'string') {\n          throw new Error(`${LyGridItem.и}: '${val}' is not valid.`);\n        }\n        const maxWidth = value ? value * 100 / 12 : 100;\n        const flexBasis = value ? value * 100 / 12 : 0;\n        const flexGrow = value ? 0 : 1;\n\n        if (media) {\n          medias.add(\n            (className: string) => `@media ${theme.breakpoints[media]}{${className}{max-width:${maxWidth}%;flex-basis:${flexBasis}%;flex-grow:${flexGrow};}}`\n          );\n        } else {\n          medias.add(\n            (className: string) => `${className}{max-width:${maxWidth}%;flex-basis:${flexBasis}%;flex-grow:${flexGrow};}`\n          );\n        }\n      });\n      return medias.css;\n    }, STYLE_PRIORITY, this._colClass);\n  }\n\n  @Input('lyGridItem')\n  set gridItemCol(val: string | number) {\n    this.col = val;\n  }\n  get gridItemCol() {\n    return this.col;\n  }\n\n  /**\n   * Defines the order style property.\n   * Support breakpoints\n   */\n  @Input()\n  get order(): string | number {\n    return this._order;\n  }\n  set order(val: string | number) {\n    if (val !== this.order) {\n      this._order = val;\n      this._orderClass = this.theme.addStyle(`lyGrid-order:${val}`, (theme: ThemeVariables) => {\n        let orderStyles: {\n          order?: string | number\n        };\n        eachMedia(`${val}`, (value, media) => {\n          const newOrderStyles = {\n            order: value\n          };\n          if (media) {\n            if (!orderStyles) {\n              orderStyles = {};\n            }\n            orderStyles[theme.getBreakpoint(media)] = newOrderStyles;\n          } else {\n            orderStyles = newOrderStyles;\n          }\n        });\n        return orderStyles!;\n      }, this.el.nativeElement, this._orderClass, STYLE_PRIORITY);\n    }\n  }\n\n  constructor(\n    private gridContainer: LyGrid,\n    private el: ElementRef,\n    renderer: Renderer2,\n    private theme: LyTheme2,\n    private _sr: StyleRenderer\n  ) {\n    if (!gridContainer) {\n      throw new Error(`Require parent <ly-grid container>`);\n    }\n    renderer.addClass(el.nativeElement, this.gridContainer.classes.item);\n  }\n\n  ngOnInit() {\n    this._updateSpacing();\n  }\n\n  private _updateSpacing() {\n    if (this.gridContainer._spacingClass) {\n      this.el.nativeElement.classList.add(this.gridContainer._spacingClass);\n    } else {\n      if (this.gridContainer._spacingXClass) {\n        this.el.nativeElement.classList.add(this.gridContainer._spacingXClass);\n      }\n      if (this.gridContainer._spacingYClass) {\n        this.el.nativeElement.classList.add(this.gridContainer._spacingYClass);\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { LyGrid, LyGridItem } from './grid';\n\n@NgModule({\n  exports: [LyGrid, LyGridItem],\n  declarations: [LyGrid, LyGridItem]\n})\nexport class LyGridModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["eachMedia","Directive","LyTheme2","ElementRef","Input","StyleCollection","StyleRenderer","Renderer2","NgModule"],"mappings":"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"}