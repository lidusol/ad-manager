(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@alyle/ui'),require('@angular/cdk/scrolling'),require('@angular/common'),require('@angular/forms'),exports, require('@angular/core'), require('@alyle/ui'), require('@angular/animations'), require('@angular/cdk/coercion'), require('@angular/cdk/scrolling'), require('rxjs'), require('rxjs/operators'), require('@angular/forms'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@alyle/ui/menu', ['@angular/core','@alyle/ui','@angular/cdk/scrolling','@angular/common','@angular/forms','exports', '@angular/core', '@alyle/ui', '@angular/animations', '@angular/cdk/coercion', '@angular/cdk/scrolling', 'rxjs', 'rxjs/operators', '@angular/forms', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.alyle.ui,global.ng.cdk.scrolling,global.ng.common,global.ng.forms,(global.ly = global.ly || {}, global.ly.menu = {}), global.ng.core, global.ly.core, global.ng.animations, global.ng.cdk.coercion, global.ng.cdk.scrolling, global.rxjs, global.rxjs.operators, global.ng.forms, global.ng.common));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,exports, core, ui, animations, coercion, scrolling, rxjs, operators, forms, common) { 
var _c0 = ["container"];
var _c1 = ["*"];
'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var STYLE_PRIORITY = -1;
    var STYLES = function (theme, ref) {
        var menu = ref.selectorsOf(STYLES);
        var after = theme.after;
        return {
            $name: LyMenu.и,
            $priority: STYLE_PRIORITY,
            root: function () {
                var _a;
                return (((_a = theme.menu) === null || _a === void 0 ? void 0 : _a.root) && (theme.menu.root instanceof ui.StyleCollection
                    ? theme.menu.root.setTransformer(function (fn) { return fn(menu); }).css
                    : theme.menu.root(menu)));
            },
            container: function (className) { return className + "{background:" + theme.background.primary.default + ";border-radius:2px;box-shadow:" + ui.shadowBuilder(4) + ";display:block;padding-top:8px;padding-bottom:8px;transform-origin:inherit;pointer-events:all;overflow:auto;max-height:inherit;max-width:inherit;box-sizing:border-box;}"; },
            item: function (className) { return className + "{display:flex;min-height:48px;border-radius:0;width:100%;justify-content:flex-start;font-weight:400;}" + className + " ly-icon{margin-" + after + ":16px;}"; },
            itemSubMenuTrigger: function () { return function (className) { return className + "{padding-" + after + ":32px;}" + className + "::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\"\";display:inline-block;position:absolute;top:50%;" + after + ":16px;transform:translateY(-50%);}"; }; }
        };
    };
    var ANIMATIONS = [
        animations.trigger('transformMenu', [
            animations.transition('void => enter', animations.group([
                animations.style({
                    opacity: 0,
                    transform: 'scale(0.8)'
                }),
                animations.animate('100ms linear', animations.style({
                    opacity: 1
                })),
                animations.animate('120ms cubic-bezier(0, 0, 0.2, 1)', animations.style({ transform: 'scale(1)' })),
            ]))
        ]),
        animations.trigger('transformMenuLeave', [
            animations.transition('* => void', animations.animate('100ms 25ms linear', animations.style({ opacity: 0 })))
        ])
    ];
    /** Menu container */
    var LyMenu = /** @class */ (function () {
        function LyMenu(_theme, _el, _renderer, _viewportRuler, sRenderer) {
            this._theme = _theme;
            this._el = _el;
            this._renderer = _renderer;
            this._viewportRuler = _viewportRuler;
            this.sRenderer = sRenderer;
            /**
             * styles
             * @docs-private
             */
            this.classes = this.sRenderer.renderSheet(STYLES, true);
            /** Emits whenever an animation on the menu completes. */
            this._animationDone = new rxjs.Subject();
            this._hasBackdrop = true;
        }
        Object.defineProperty(LyMenu.prototype, "ref", {
            get: function () {
                return this._ref;
            },
            /** Menu Trigger */
            set: function (value) {
                this._ref = value;
                this._menuRef = value._menuRef;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyMenu.prototype, "hasBackdrop", {
            /** Whether the menu has a backdrop. */
            get: function () {
                return this._hasBackdrop;
            },
            set: function (value) {
                this._hasBackdrop = coercion.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        LyMenu.prototype.ngOnChanges = function () {
            var _a;
            if (((_a = this.ref) === null || _a === void 0 ? void 0 : _a._menuRef) && this._container) {
                // Update backdrop
                this.ref._menuRef.updateBackdrop(this.ref._isItemSubMenuTrigger() ? false : this.hasBackdrop);
                this._updatePlacement();
                this._checkBackdropAndOpenOnHover();
            }
        };
        LyMenu.prototype.ngOnInit = function () {
            if (!this.ref) {
                throw new Error('LyMenu: require @Input() ref');
            }
        };
        LyMenu.prototype.ngAfterViewInit = function () {
            var _this = this;
            if (this.ref._menuRef) {
                this.ref._menuRef.onResizeScroll = this._updatePlacement.bind(this);
                this.ref._menuRef.updateBackdrop(this.ref._isItemSubMenuTrigger() ? false : this.hasBackdrop);
                this._checkBackdropAndOpenOnHover();
            }
            this._updatePlacement();
            this.ref.menuOpened.emit();
            Promise.resolve(null).then(function () {
                _this.ref._setMenuOpenToTrue();
            });
            var hostTrigger = this._getHostMenuTrigger();
            hostTrigger._menuDetached
                .pipe(operators.take(1))
                .subscribe(function () { return _this._ref.closeMenu(); });
            this._addOpenOnHover();
        };
        LyMenu.prototype.ngOnDestroy = function () {
            this._removeOpenOnHoverListeners();
        };
        LyMenu.prototype._checkBackdropAndOpenOnHover = function () {
            var _a;
            var hostTrigger = this._getHostMenuTrigger();
            if (this.hasBackdrop && ((_a = hostTrigger._menuOpenOnHoverRef) === null || _a === void 0 ? void 0 : _a.openOnHover)) {
                throw new Error(LyMenu.и + ": Can't use [hasBackdrop] with [openOnHover] at the same time, set [hasBackdrop] to false to use [openOnHover]");
            }
        };
        LyMenu.prototype._getHostMenuTrigger = function () {
            var _a;
            var menuTrigger = this.ref;
            while ((_a = menuTrigger._menu) === null || _a === void 0 ? void 0 : _a.ref) {
                menuTrigger = menuTrigger._menu.ref;
            }
            return menuTrigger;
        };
        LyMenu.prototype._addOpenOnHover = function () {
            var _a;
            var hostTrigger = this._getHostMenuTrigger();
            if (((_a = hostTrigger._menuOpenOnHoverRef) === null || _a === void 0 ? void 0 : _a.openOnHover) && !this._mouseenterListen && !this._mouseleaveListen) {
                hostTrigger._menuOpenOnHoverRef._handleMouseEnterOrLeave(true);
                this._mouseenterListen = this._renderer
                    .listen(this._el.nativeElement, 'mouseenter', function () { return hostTrigger._menuOpenOnHoverRef._handleMouseEnterOrLeave(true); });
                this._mouseleaveListen = this._renderer
                    .listen(this._el.nativeElement, 'mouseleave', function () { return hostTrigger._menuOpenOnHoverRef._handleMouseEnterOrLeave(false); });
            }
        };
        /** Remove listeners */
        LyMenu.prototype._removeOpenOnHoverListeners = function () {
            if (this._mouseenterListen) {
                this._mouseenterListen();
            }
            if (this._mouseleaveListen) {
                this._mouseleaveListen();
            }
        };
        /** Update Menu Position */
        LyMenu.prototype._updatePlacement = function () {
            var _a, _b;
            var el = (_a = this.ref._menuRef) === null || _a === void 0 ? void 0 : _a.containerElement;
            var container = (_b = this._container) === null || _b === void 0 ? void 0 : _b.nativeElement;
            // Do not update when not available
            if (!el || !container) {
                return;
            }
            // reset height & width
            this._renderer.setStyle(container, 'height', 'initial');
            this._renderer.setStyle(container, 'width', 'initial');
            var position = this.placement
                ? new ui.Positioning(this.placement, this.xPosition, this.yPosition, this.ref._getHostElement(), el, this._theme.variables)
                : !this.ref._isItemSubMenuTrigger()
                    ? new ui.LyOverlayPosition(this._theme, this._viewportRuler, this.ref._getHostElement(), el)
                        .setXAnchor(this.xAnchor)
                        .setYAnchor(this.yAnchor)
                        .setXAxis(this.xAxis)
                        .setYAxis(this.yAxis)
                        .setFlip(true)
                        .build()
                    : new ui.LyOverlayPosition(this._theme, this._viewportRuler, this.ref._getHostElement(), el)
                        .setXAnchor(ui.XPosition.after)
                        .setYAnchor(ui.YPosition.above)
                        .setFlip(true)
                        .build();
            if (position instanceof ui.Positioning) {
                // set position deprecated
                this._renderer.setStyle(el, 'transform', "translate3d(" + position.x + "px, " + position.y + "px, 0)");
                this._renderer.setStyle(this._el.nativeElement, 'transform-origin', position.ox + " " + position.oy + " 0");
                // set height & width deprecated
                this._renderer.setStyle(container, 'height', position.height === 'initial' ? '100%' : position.height);
                this._renderer.setStyle(container, 'width', position.width === 'initial' ? '100%' : position.width);
            }
            else {
                // set position
                this._renderer.setStyle(el, 'left', position.x + "px");
                this._renderer.setStyle(el, 'top', position.y + "px");
                this._renderer.setStyle(container, 'width', position.width ? position.width + "px" : '100%');
                this._renderer.setStyle(container, 'height', position.height ? position.height + "px" : '100%');
                this._renderer.setStyle(this._el.nativeElement, 'transform-origin', position.xo + "px " + position.yo + "px 0");
            }
        };
        LyMenu.prototype._onAnimationStart = function (event) {
            this._isAnimating = true;
            if (event.triggerName === 'transformMenuLeave' && event.toState === 'void') {
                this._isDestroying = true;
            }
        };
        LyMenu.prototype._onAnimationDone = function (event) {
            this._animationDone.next(event);
            this._isAnimating = false;
            if (event.toState === 'void' && event.triggerName === 'transformMenuLeave') {
                this.ref.destroy(this._menuRef);
            }
        };
LyMenu.ɵfac = function LyMenu_Factory(t) { return new (t || LyMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LyTheme2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleRenderer)); };
LyMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LyMenu, selectors: [["ly-menu"]], contentQueries: function LyMenu_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, LyMenuItem, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menuItems = _t);
    } }, viewQuery: function LyMenu_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._container = _t.first);
    } }, hostVars: 1, hostBindings: function LyMenu_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵcomponentHostSyntheticListener("@transformMenuLeave.start", function LyMenu_animation_transformMenuLeave_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })("@transformMenuLeave.done", function LyMenu_animation_transformMenuLeave_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵupdateSyntheticHostBinding("@transformMenuLeave", ctx.transformMenuLeave);
    } }, inputs: { ref: "ref", hasBackdrop: "hasBackdrop", xAnchor: "xAnchor", yAnchor: "yAnchor", xAxis: "xAxis", yAxis: "yAxis", placement: "placement", xPosition: "xPosition", yPosition: "yPosition" }, exportAs: ["lyMenu"], features: [ɵngcc0.ɵɵProvidersFeature([
            ui.StyleRenderer
        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 3, vars: 3, consts: [["container", ""]], template: function LyMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", null, 0);
        ɵngcc0.ɵɵlistener("@transformMenu.start", function LyMenu_Template_div_animation_transformMenu_start_0_listener($event) { return ctx._onAnimationStart($event); })("@transformMenu.done", function LyMenu_Template_div_animation_transformMenu_done_0_listener($event) { return ctx._onAnimationDone($event); });
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.classes.container);
        ɵngcc0.ɵɵproperty("@transformMenu", "enter");
    } }, encapsulation: 2, data: { animation: __spread(ANIMATIONS) } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyMenu, [{
        type: core.Component,
        args: [{
                selector: 'ly-menu',
                animations: __spread(ANIMATIONS),
                template: "<div #container\n  [class]=\"classes.container\"\n  [@transformMenu]=\"'enter'\"\n  (@transformMenu.start)=\"_onAnimationStart($event)\"\n  (@transformMenu.done)=\"_onAnimationDone($event)\"\n>\n  <ng-content></ng-content>\n</div>",
                exportAs: 'lyMenu',
                providers: [
                    ui.StyleRenderer
                ]
            }]
    }], function () { return [{ type: ɵngcc1.LyTheme2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc2.ViewportRuler }, { type: ɵngcc1.StyleRenderer }]; }, { ref: [{
            type: core.Input
        }], hasBackdrop: [{
            type: core.Input
        }], _onAnimationStart: [{
            type: core.HostListener,
            args: ['@transformMenuLeave.start', ['$event']]
        }], _onAnimationDone: [{
            type: core.HostListener,
            args: ['@transformMenuLeave.done', ['$event']]
        }], _container: [{
            type: core.ViewChild,
            args: ['container']
        }], menuItems: [{
            type: core.ContentChildren,
            args: [core.forwardRef(function () { return LyMenuItem; })]
        }], xAnchor: [{
            type: core.Input
        }], yAnchor: [{
            type: core.Input
        }], xAxis: [{
            type: core.Input
        }], yAxis: [{
            type: core.Input
        }], placement: [{
            type: core.Input
        }], xPosition: [{
            type: core.Input
        }], yPosition: [{
            type: core.Input
        }], transformMenuLeave: [{
            type: core.HostBinding,
            args: ['@transformMenuLeave']
        }] }); })();
        return LyMenu;
    }());
    /** @docs-private */
    LyMenu.и = 'LyMenu';
    LyMenu.ctorParameters = function () { return [
        { type: ui.LyTheme2 },
        { type: core.ElementRef },
        { type: core.Renderer2 },
        { type: scrolling.ViewportRuler },
        { type: ui.StyleRenderer }
    ]; };
    LyMenu.propDecorators = {
        ref: [{ type: core.Input }],
        hasBackdrop: [{ type: core.Input }],
        _container: [{ type: core.ViewChild, args: ['container',] }],
        menuItems: [{ type: core.ContentChildren, args: [core.forwardRef(function () { return LyMenuItem; }),] }],
        xAnchor: [{ type: core.Input }],
        yAnchor: [{ type: core.Input }],
        xAxis: [{ type: core.Input }],
        yAxis: [{ type: core.Input }],
        placement: [{ type: core.Input }],
        xPosition: [{ type: core.Input }],
        yPosition: [{ type: core.Input }],
        transformMenuLeave: [{ type: core.HostBinding, args: ['@transformMenuLeave',] }],
        _onAnimationStart: [{ type: core.HostListener, args: ['@transformMenuLeave.start', ['$event'],] }],
        _onAnimationDone: [{ type: core.HostListener, args: ['@transformMenuLeave.done', ['$event'],] }]
    };
    var LyMenuItem = /** @class */ (function () {
        function LyMenuItem(_menu, el, renderer) {
            this._menu = _menu;
            renderer.addClass(el.nativeElement, _menu.classes.item);
        }
        LyMenuItem.prototype._handleClick = function () {
            var _a;
            if (this._menu.ref && this._menu.ref._menuRef) {
                if (!this._getItemSubMenuTrigger()) {
                    var currentTrigger = this._menu.ref;
                    while (currentTrigger) {
                        currentTrigger.closeMenu();
                        currentTrigger = (_a = currentTrigger._menu) === null || _a === void 0 ? void 0 : _a.ref;
                    }
                }
            }
        };
        LyMenuItem.prototype._handleMouseEnter = function () {
            var _this = this;
            var itemSubMenuTrigger = this._getItemSubMenuTrigger();
            if (itemSubMenuTrigger && !this._menu._isDestroying) {
                if (this._menu._isAnimating) {
                    this._menu._animationDone
                        .pipe(operators.take(1), operators.delay(0, rxjs.asapScheduler))
                        .subscribe(function () {
                        itemSubMenuTrigger.openMenu();
                        _this._closeOtherMenus();
                    });
                }
                else {
                    itemSubMenuTrigger.openMenu();
                    this._closeOtherMenus();
                }
            }
            else {
                this._closeOtherMenus();
            }
        };
        /** Except for this, close all menus */
        LyMenuItem.prototype._closeOtherMenus = function () {
            var _this = this;
            this._menu.menuItems.forEach(function (menuItem) {
                var _a;
                if (menuItem !== _this) {
                    (_a = menuItem._getItemSubMenuTrigger()) === null || _a === void 0 ? void 0 : _a.closeMenu();
                }
            });
        };
        LyMenuItem.prototype._setItemSubMenuTrigger = function (menuTrigger) {
            this._itemSubMenuTrigger = menuTrigger;
        };
        LyMenuItem.prototype._getItemSubMenuTrigger = function () {
            return this._itemSubMenuTrigger;
        };
LyMenuItem.ɵfac = function LyMenuItem_Factory(t) { return new (t || LyMenuItem)(ɵngcc0.ɵɵdirectiveInject(LyMenu, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
LyMenuItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LyMenuItem, selectors: [["", "ly-menu-item", ""]], hostBindings: function LyMenuItem_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function LyMenuItem_click_HostBindingHandler() { return ctx._handleClick(); })("mouseenter", function LyMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });
    } } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyMenuItem, [{
        type: core.Directive,
        args: [{
                selector: '[ly-menu-item]',
                host: {
                    '(click)': '_handleClick()',
                    '(mouseenter)': '_handleMouseEnter()'
                }
            }]
    }], function () { return [{ type: LyMenu, decorators: [{
                type: core.Optional
            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, null); })();
        return LyMenuItem;
    }());
    LyMenuItem.ctorParameters = function () { return [
        { type: LyMenu, decorators: [{ type: core.Optional }] },
        { type: core.ElementRef },
        { type: core.Renderer2 }
    ]; };
    var LyMenuTriggerFor = /** @class */ (function () {
        function LyMenuTriggerFor(elementRef, overlay, _menuItem, sRenderer, _menu) {
            this.elementRef = elementRef;
            this.overlay = overlay;
            this._menuItem = _menuItem;
            this.sRenderer = sRenderer;
            this._menu = _menu;
            this.classes = this.sRenderer.renderSheet(STYLES);
            this._menuOpen = false;
            this._menuDetached = new rxjs.Subject();
            this.menuOpened = new core.EventEmitter();
            this.menuClosed = new core.EventEmitter();
            if (this._isItemSubMenuTrigger()) {
                _menuItem._setItemSubMenuTrigger(this);
                sRenderer.addClass(this.classes.itemSubMenuTrigger);
            }
        }
        Object.defineProperty(LyMenuTriggerFor.prototype, "menuOpen", {
            /** Whether the menu is open. */
            get: function () {
                return this._menuOpen;
            },
            enumerable: false,
            configurable: true
        });
        LyMenuTriggerFor.prototype.ngOnDestroy = function () {
            // Not force destruction if it is already being destroyed
            if (!this._destroying) {
                this.closeMenu();
            }
            this._menuDetached.complete();
        };
        LyMenuTriggerFor.prototype._handleClick = function () {
            if (!this._isItemSubMenuTrigger()) {
                this.toggleMenu();
            }
        };
        /** Opens the menu */
        LyMenuTriggerFor.prototype.openMenu = function () {
            if (!this._menuRef) {
                this._menuRef = this.overlay.create(this.lyMenuTriggerFor, {
                    $implicit: this,
                    data: this.menuData
                }, {
                    styles: {
                        top: 0,
                        left: 0,
                        pointerEvents: null
                    },
                    fnDestroy: this.detach.bind(this),
                    hasBackdrop: false
                });
            }
        };
        /** Closes the menu */
        LyMenuTriggerFor.prototype.closeMenu = function () {
            this.detach();
        };
        /** Toggle menu */
        LyMenuTriggerFor.prototype.toggleMenu = function () {
            if (this._menuRef) {
                this.closeMenu();
            }
            else {
                this.openMenu();
            }
        };
        /** @docs-private */
        LyMenuTriggerFor.prototype.detach = function () {
            if (this._menuRef) {
                this._menuRef.detach();
                this._menuRef = null;
                this._destroying = true;
                this._menuDetached.next();
            }
        };
        /** @docs-private */
        LyMenuTriggerFor.prototype.destroy = function (menuRef) {
            var _this = this;
            this.menuClosed.emit(null);
            menuRef.remove();
            this._destroying = false;
            Promise.resolve(null).then(function () { return _this._menuOpen = false; });
        };
        LyMenuTriggerFor.prototype._getHostElement = function () {
            return this.elementRef.nativeElement;
        };
        LyMenuTriggerFor.prototype._setMenuOpenToTrue = function () {
            this._menuOpen = true;
        };
        /**
         * @docs-private
         */
        LyMenuTriggerFor.prototype._isItemSubMenuTrigger = function () {
            return !!this._menuItem;
        };
LyMenuTriggerFor.ɵfac = function LyMenuTriggerFor_Factory(t) { return new (t || LyMenuTriggerFor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LyOverlay), ɵngcc0.ɵɵdirectiveInject(LyMenuItem, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleRenderer), ɵngcc0.ɵɵdirectiveInject(LyMenu, 8)); };
LyMenuTriggerFor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LyMenuTriggerFor, selectors: [["", "lyMenuTriggerFor", ""]], hostBindings: function LyMenuTriggerFor_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function LyMenuTriggerFor_click_HostBindingHandler() { return ctx._handleClick(); });
    } }, inputs: { lyMenuTriggerFor: "lyMenuTriggerFor", menuData: ["lyMenuTriggerData", "menuData"] }, outputs: { menuOpened: "menuOpened", menuClosed: "menuClosed" }, exportAs: ["lyMenuTriggerFor"], features: [ɵngcc0.ɵɵProvidersFeature([
            ui.StyleRenderer
        ])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyMenuTriggerFor, [{
        type: core.Directive,
        args: [{
                selector: '[lyMenuTriggerFor]',
                host: {
                    '(click)': '_handleClick()'
                },
                exportAs: 'lyMenuTriggerFor',
                providers: [
                    ui.StyleRenderer
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.LyOverlay }, { type: LyMenuItem, decorators: [{
                type: core.Optional
            }] }, { type: ɵngcc1.StyleRenderer }, { type: LyMenu, decorators: [{
                type: core.Optional
            }] }]; }, { menuOpened: [{
            type: core.Output
        }], menuClosed: [{
            type: core.Output
        }], lyMenuTriggerFor: [{
            type: core.Input
        }], menuData: [{
            type: core.Input,
            args: ['lyMenuTriggerData']
        }] }); })();
        return LyMenuTriggerFor;
    }());
    LyMenuTriggerFor.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: ui.LyOverlay },
        { type: LyMenuItem, decorators: [{ type: core.Optional }] },
        { type: ui.StyleRenderer },
        { type: LyMenu, decorators: [{ type: core.Optional }] }
    ]; };
    LyMenuTriggerFor.propDecorators = {
        lyMenuTriggerFor: [{ type: core.Input }],
        menuData: [{ type: core.Input, args: ['lyMenuTriggerData',] }],
        menuOpened: [{ type: core.Output }],
        menuClosed: [{ type: core.Output }]
    };
    var LyMenuOpenOnHover = /** @class */ (function () {
        function LyMenuOpenOnHover(_trigger) {
            var _this = this;
            this._trigger = _trigger;
            this._events = new rxjs.Subject();
            this._openOnHover = true;
            _trigger._menuOpenOnHoverRef = this;
            this._events
                .pipe(operators.debounceTime(200))
                .subscribe(function (enterOrLeave) {
                if (_this.openOnHover) {
                    if (enterOrLeave) {
                        _trigger.openMenu();
                    }
                    else {
                        _trigger.closeMenu();
                    }
                }
            });
        }
        Object.defineProperty(LyMenuOpenOnHover.prototype, "openOnHover", {
            /** Whether menu should open on hover. */
            get: function () {
                return this._openOnHover;
            },
            set: function (value) {
                var _this = this;
                this._openOnHover = coercion.coerceBooleanProperty(value);
                Promise.resolve(null)
                    .then(function () { return _this._openOnHover
                    ? _this._trigger._menuOpenOnHoverRef = _this
                    : delete _this._trigger._menuOpenOnHoverRef; });
            },
            enumerable: false,
            configurable: true
        });
        LyMenuOpenOnHover.prototype.ngOnDestroy = function () {
            this._events.complete();
        };
        /** Handle mouseenter or mouseleave */
        LyMenuOpenOnHover.prototype._handleMouseEnterOrLeave = function (leaveOrEnter) {
            if (this.openOnHover) {
                if (leaveOrEnter) {
                    this._trigger.openMenu();
                }
                this._events.next(leaveOrEnter);
            }
        };
LyMenuOpenOnHover.ɵfac = function LyMenuOpenOnHover_Factory(t) { return new (t || LyMenuOpenOnHover)(ɵngcc0.ɵɵdirectiveInject(LyMenuTriggerFor)); };
LyMenuOpenOnHover.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LyMenuOpenOnHover, selectors: [["", "lyMenuTriggerFor", "", "openOnHover", ""]], hostBindings: function LyMenuOpenOnHover_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mouseenter", function LyMenuOpenOnHover_mouseenter_HostBindingHandler() { return ctx._handleMouseEnterOrLeave(true); })("mouseleave", function LyMenuOpenOnHover_mouseleave_HostBindingHandler() { return ctx._handleMouseEnterOrLeave(false); });
    } }, inputs: { openOnHover: "openOnHover" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyMenuOpenOnHover, [{
        type: core.Directive,
        args: [{
                selector: '[lyMenuTriggerFor][openOnHover]',
                host: {
                    '(mouseenter)': '_handleMouseEnterOrLeave(true)',
                    '(mouseleave)': '_handleMouseEnterOrLeave(false)'
                }
            }]
    }], function () { return [{ type: LyMenuTriggerFor }]; }, { openOnHover: [{
            type: core.Input
        }] }); })();
        return LyMenuOpenOnHover;
    }());
    LyMenuOpenOnHover.ctorParameters = function () { return [
        { type: LyMenuTriggerFor }
    ]; };
    LyMenuOpenOnHover.propDecorators = {
        openOnHover: [{ type: core.Input }]
    };

    var LyMenuModule = /** @class */ (function () {
        function LyMenuModule() {
        }
LyMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LyMenuModule });
LyMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LyMenuModule_Factory(t) { return new (t || LyMenuModule)(); }, imports: [[common.CommonModule, forms.FormsModule, ui.LyCommonModule, ui.LyOverlayModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LyMenuModule, { declarations: [LyMenu,
        LyMenuItem,
        LyMenuTriggerFor,
        LyMenuOpenOnHover], imports: [ɵngcc3.CommonModule, ɵngcc4.FormsModule, ɵngcc1.LyCommonModule, ɵngcc1.LyOverlayModule], exports: [LyMenu,
        LyMenuItem,
        LyMenuTriggerFor,
        LyMenuOpenOnHover] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyMenuModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule, forms.FormsModule, ui.LyCommonModule, ui.LyOverlayModule],
                exports: [LyMenu, LyMenuItem, LyMenuTriggerFor, LyMenuOpenOnHover],
                declarations: [LyMenu, LyMenuItem, LyMenuTriggerFor, LyMenuOpenOnHover]
            }]
    }], function () { return []; }, null); })();
        return LyMenuModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.LyMenu = LyMenu;
    exports.LyMenuItem = LyMenuItem;
    exports.LyMenuModule = LyMenuModule;
    exports.LyMenuOpenOnHover = LyMenuOpenOnHover;
    exports.LyMenuTriggerFor = LyMenuTriggerFor;
    exports.STYLES = STYLES;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=alyle-ui-menu.umd.js.map