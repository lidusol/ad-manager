{"version":3,"file":"alyle-ui-responsive.umd.js","sources":["../../../lib/responsive/media.directive.ts","../../../lib/responsive/responsive.module.ts","../../../lib/responsive/media-queries.ts","../../../lib/responsive/alyle-ui-responsive.ts"],"names":["Directive","Renderer2","ElementRef","LyTheme2","Input","NgModule","LyCommonModule"],"mappings":"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","sourcesContent":["import {\n  Directive,\n  Input,\n  OnInit,\n  OnChanges,\n  Renderer2,\n  ElementRef\n} from '@angular/core';\n\nimport { LyTheme2, ThemeVariables } from '@alyle/ui';\n\nconst MEDIA_PRIORITY = 999;\n\nconst styles = {\n  hide: {\n    display: 'none'\n  }\n};\n\n/**\n * @deprecated use `[lyDisplay]` instead.\n */\n@Directive({\n  selector: '[lyShow], [lyHide]'\n})\nexport class MediaDirective implements OnInit, OnChanges {\n  private _show: string;\n  private _showClass: string;\n  private _hide: string;\n  private _hideClass: string;\n\n  /**\n   * Styles\n   * @ignore\n   */\n  classes = this.theme.addStyleSheet(styles);\n\n  /**\n   * Shows the item when the value is resolved as true\n   */\n  @Input()\n  get lyShow(): string {\n    return this._show;\n  }\n  set lyShow(val: string) {\n    this._show = val;\n    this._showClass = this.theme.addStyle(`lyMedia-show:${val}`, (theme: ThemeVariables) =>\n    ({\n      [theme.getBreakpoint(val)]: {\n        display: 'block'\n      }\n    }),\n    this._elementRef.nativeElement,\n    this._showClass,\n    MEDIA_PRIORITY\n    );\n  }\n\n  /**\n   * Hides the item when the value is resolved as true\n   */\n  @Input()\n  set lyHide(val: string) {\n    this._hide = val;\n    this._hideClass = this.theme.addStyle(`lyMedia-hide:${val}`, (theme: ThemeVariables) =>\n    ({\n      [theme.getBreakpoint(val)]: {\n        display: 'none'\n      }\n    }),\n    this._elementRef.nativeElement,\n    this._hideClass,\n    MEDIA_PRIORITY\n    );\n  }\n\n  get lyHide(): string {\n    return this._hide;\n  }\n\n  constructor(\n    private _renderer: Renderer2,\n    private _elementRef: ElementRef,\n    private theme: LyTheme2\n  ) { }\n\n  ngOnInit() {\n    if (!this.lyHide) {\n      this._renderer.addClass(this._elementRef.nativeElement, this.classes.hide);\n    }\n  }\n\n  ngOnChanges() {\n    if (this.lyHide && this.lyShow) {\n      throw new Error(`use only \\`lyHide\\` or \\`lyShow\\` per element`);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MediaDirective } from './media.directive';\nimport { LyCommonModule } from '@alyle/ui';\n\n/**\n * @deprecated use instead `[lyDisplay]` or `[lyStyle]`\n */\n@NgModule({\n  declarations: [MediaDirective],\n  exports: [MediaDirective, LyCommonModule],\n})\nexport class ResponsiveModule { }\n","export const Breakpoints = {\n  XSmall: '(max-width: 599px)',\n  Small: '(min-width: 600px) and (max-width: 959px)',\n  Medium: '(min-width: 960px) and (max-width: 1279px)',\n  Large: '(min-width: 1280px) and (max-width: 1919px)',\n  XLarge: '(min-width: 1920px)',\n\n  Handset: '(max-width: 599px) and (orientation: portrait), ' +\n           '(max-width: 959px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n          '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' +\n       '(min-width: 1280px) and (orientation: landscape)',\n\n  HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n\n  HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}