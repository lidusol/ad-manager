{"version":3,"sources":["../../../lib/snack-bar/snack-bar.service.ts","../../../lib/snack-bar/snack-bar-ref.ts","../../../lib/snack-bar/snack-bar.ts","../../../lib/snack-bar/snack-bar.module.ts"],"names":["Injectable","args","providedIn","LySnackBarRef","_snackBarService","_overlay","_afterDismissedEventEmitter","duration","_theme","_this","this","_dismissedByAction","_afterDismissed","Subject","_timer","setTimeout","dismiss","prototype","afterDismissed","asObservable","snackBar","timer","emit","dismissedByAction","next","complete","clearTimeout","containerElement","classList","remove","selectorOf","destroy","_currentSnackBar","dismissWithAction","DEFAULT_HORIZONTAL_POSITION","XPosition","after","DEFAULT_VERTICAL_POSITION","YPosition","below","STYLES","theme","$priority","root","className","animations","curves","standard","deceleration","pxToRem","typography","fontSize","st2c","breakpoints","LySnackBar","_templateRef","classes","renderStyleSheet","EventEmitter","ngOnDestroy","open","snackBarData","sbrPrev","horizontalPosition","verticalPosition","create","styles","justifyContent","hasBackdrop","renderStyle","marginLeft","left","marginRight","right","transform","top","bottom","hp","above","getDirection","requestAnimationFrame","newClass","add","window","getComputedStyle","getPropertyValue","sbr","Directive","selector","exportAs","TemplateRef","LyTheme2","LyOverlay","LySnackBarService","Input","Output","NgModule","imports","LyOverlayModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { LySnackBarRef } from './snack-bar-ref';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LySnackBarService {\n  /** @docs-private */\n  _currentSnackBar: LySnackBarRef | null;\n}\n","import { EventEmitter } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { OverlayFactory, LyTheme2 } from '@alyle/ui';\nimport { LySnackBarService } from './snack-bar.service';\nimport { LySnackBarDismiss } from './snack-bar';\n\nconst DEFAULT_DURATION = 6e3;\n\nexport class LySnackBarRef {\n  private _timer: any;\n  private _dismissedByAction = false;\n\n  /** Subject for notifying the user that the snack bar has been dismissed. */\n  private readonly _afterDismissed = new Subject<void>();\n\n  /** Gets an observable that is notified when the snack bar is finished closing. */\n  afterDismissed(): Observable<void> {\n    return this._afterDismissed.asObservable();\n  }\n  constructor(\n    private _snackBarService: LySnackBarService,\n    private _overlay: OverlayFactory | null,\n    private _afterDismissedEventEmitter: EventEmitter<LySnackBarDismiss>,\n    duration: number | 'Infinity',\n    private _theme: LyTheme2\n  ) {\n    if (duration !== 'Infinity') {\n      this._timer = setTimeout(() => {\n        this.dismiss();\n      }, duration || DEFAULT_DURATION);\n    }\n  }\n\n  dismiss() {\n    const snackBar = this._overlay;\n    const timer = this._timer;\n    this._afterDismissedEventEmitter.emit({dismissedByAction: this._dismissedByAction});\n    this._afterDismissed.next();\n    this._afterDismissed.complete();\n    if (snackBar) {\n      if (timer) {\n        // clear previous timer\n        clearTimeout(timer);\n      }\n\n      snackBar.containerElement.classList.remove(this._theme.selectorOf('SnackBar:open'));\n      setTimeout(() => {\n        snackBar.destroy();\n      }, 350);\n      this._snackBarService._currentSnackBar = null;\n      this._overlay = null;\n    }\n  }\n  dismissWithAction() {\n    const snackBar = this._overlay;\n    if (snackBar) {\n      this._dismissedByAction = true;\n      this.dismiss();\n    }\n  }\n}\n","import { Directive, Input, TemplateRef, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport {\n  LyTheme2,\n  LyOverlay,\n  ThemeVariables,\n  XPosition,\n  YPosition,\n  st2c,\n  StyleTemplate,\n  StyleCollection } from '@alyle/ui';\nimport { LySnackBarService } from './snack-bar.service';\nimport { LySnackBarRef } from './snack-bar-ref';\n\nexport interface LySnackBarTheme {\n  /** Styles for SnackBar Component */\n  root?: StyleTemplate | StyleCollection;\n}\n\n\nexport interface LySnackBarVariables {\n  snackBar?: LySnackBarTheme;\n}\n\nconst STYLE_PRIORITY = -2;\nconst DEFAULT_HORIZONTAL_POSITION = XPosition.after;\nconst DEFAULT_VERTICAL_POSITION = YPosition.below;\nexport const STYLES = (theme: ThemeVariables & LySnackBarVariables) => ({\n  $priority: STYLE_PRIORITY,\n  root: (className: string) => `${className}{border-radius:4px;display:flex;justify-content:space-between;align-items:center;margin:8px;padding:0 16px;min-height:48px;min-width:320px;max-width:320px;opacity:0;transition:opacity ${theme.animations.curves.standard} 350ms, transform ${theme.animations.curves.deceleration} 350ms;font-size:${theme.pxToRem(theme.typography.fontSize)};box-sizing:border-box;}${st2c((\n        (theme.snackBar\n          && theme.snackBar.root) || null), `${className}`)}@media ${theme.breakpoints['XSmall']}{${className}{width:calc(100% - 16px);min-width:calc(100% - 16px);}}`\n});\n\n/** Event that is emitted when a snack bar is dismissed. */\nexport interface LySnackBarDismiss {\n  /** Whether the snack bar was dismissed using the action fn. */\n  dismissedByAction: boolean;\n}\n\n@Directive({\n  selector: 'ng-template[ly-snack-bar]',\n  exportAs: 'lySnackBar'\n})\nexport class LySnackBar implements OnDestroy {\n\n  readonly classes = this._theme.renderStyleSheet(STYLES);\n  @Input() duration: number | 'Infinity';\n  @Input() horizontalPosition: 'center' | XPosition;\n  @Input() verticalPosition: YPosition;\n  @Output() afterDismissed = new EventEmitter<LySnackBarDismiss>();\n\n  constructor(\n    private _templateRef: TemplateRef<any>,\n    private _theme: LyTheme2,\n    private _overlay: LyOverlay,\n    private _snackBarService: LySnackBarService\n  ) { }\n\n  ngOnDestroy() {\n    this.dismiss();\n  }\n  /**\n   * Open a LySnackBar template\n   * @param snackBarData Data to be passed to the snack-bark.\n   */\n  open(snackBarData?: any) {\n    // close previous snackBar if exist\n    const sbrPrev = this._snackBarService._currentSnackBar;\n    if (sbrPrev) {\n      sbrPrev.dismiss();\n    }\n\n    const duration = this.duration;\n    const horizontalPosition = this.horizontalPosition || DEFAULT_HORIZONTAL_POSITION;\n    const verticalPosition = this.verticalPosition || DEFAULT_VERTICAL_POSITION;\n\n    const snackBar = this._overlay.create(this._templateRef, snackBarData, {\n      styles: {\n        // this remove previous style\n        justifyContent: null\n      },\n      hasBackdrop: false,\n      classes: [\n        this.classes.root,\n        this._theme.renderStyle(`SnackBar.hp:${horizontalPosition}.vp:${verticalPosition}`, (theme: ThemeVariables) => {\n          let marginLeft: 'auto' | undefined;\n          let left: 0 | undefined;\n          let marginRight: 'auto' | undefined;\n          let right: 0 | undefined;\n          let transform: string | undefined;\n          let top: number | undefined;\n          let bottom: number | undefined;\n          let hp: string | undefined;\n\n          if (verticalPosition === YPosition.above) {\n            transform = 'translateY(-180%)';\n            top = 0;\n          } if (verticalPosition === YPosition.below) {\n            transform = 'translateY(180%)';\n            bottom = 0;\n          }\n          if (horizontalPosition === 'center') {\n            marginRight = marginLeft = 'auto';\n            left = right = 0;\n          } else {\n            hp = theme.getDirection(horizontalPosition as any);\n          }\n\n          return (className: string) => `${className}{margin-left:${marginLeft};left:${left};margin-right:${marginRight};right:${right};transform:${transform};top:${top};bottom:${bottom};${hp}:0;}`;\n        }, STYLE_PRIORITY)\n      ]\n    });\n\n    this._theme.requestAnimationFrame(() => {\n      const newClass = this._theme.renderStyle('SnackBar:open', () => (\n        (className: string) => `${className}{opacity:1;transform:translateY(0);}`\n      ), STYLE_PRIORITY);\n      snackBar.containerElement.classList.add(newClass);\n    });\n\n    window.getComputedStyle(snackBar.containerElement).getPropertyValue('opacity');\n\n    const sbr = new LySnackBarRef(this._snackBarService, snackBar, this.afterDismissed, duration, this._theme);\n    this._snackBarService._currentSnackBar = sbr;\n    return sbr;\n  }\n\n  /** Dismiss snackBar */\n  dismiss() {\n    const sbr = this._snackBarService._currentSnackBar;\n    if (sbr) {\n      sbr.dismissWithAction();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LyOverlayModule } from '@alyle/ui';\nimport { LySnackBar } from './snack-bar';\n\n@NgModule({\n  imports: [LyOverlayModule],\n  declarations: [LySnackBar],\n  exports: [LySnackBar]\n})\nexport class LySnackBarModule {}\n"]}