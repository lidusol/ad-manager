(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@alyle/ui'),require('@angular/cdk/scrolling'),require('@angular/cdk/platform'),require('@angular/common'),require('@angular/cdk/portal'),exports, require('@angular/core'), require('@alyle/ui'), require('@alyle/ui/button'), require('rxjs'), require('@angular/cdk/scrolling'), require('@angular/cdk/platform'), require('@angular/cdk/portal'), require('rxjs/operators'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@alyle/ui/tabs', ['@angular/core','@alyle/ui','@angular/cdk/scrolling','@angular/cdk/platform','@angular/common','@angular/cdk/portal','exports', '@angular/core', '@alyle/ui', '@alyle/ui/button', 'rxjs', '@angular/cdk/scrolling', '@angular/cdk/platform', '@angular/cdk/portal', 'rxjs/operators', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.alyle.ui,global.ng.cdk.scrolling,global.ng.cdk.platform,global.ng.common,global.ng.cdk.portal,(global.ly = global.ly || {}, global.ly.tabs = {}), global.ng.core, global.ly.core, global.ly.button, global.rxjs, global.ng.cdk.scrolling, global.ng.cdk.platform, global.ng.cdk.portal, global.rxjs.operators, global.ng.common));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,exports, core, ui, button, rxjs, scrolling, platform, portal, operators, common) { 
var _c0 = ["tabs"];
var _c1 = ["tabContents"];
var _c2 = ["tabsIndicator"];
var _c3 = ["tabContent"];
function LyTabs_div_9_ng_template_3_Template(rf, ctx) { }
function LyTabs_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 0, 5);
    ɵngcc0.ɵɵelementStart(2, "div", 0);
    ɵngcc0.ɵɵtemplate(3, LyTabs_div_9_ng_template_3_Template, 0, 0, "ng-template", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r4 = ctx.$implicit;
    var x_r5 = ctx.index;
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("className", ctx_r3.classes.content);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("className", ctx_r3.classes.contentInner);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkPortalOutlet", ctx_r3.loadTemplate(item_r4, x_r5));
} }
var _c4 = ["*"];
var _c5 = ["_templateNgContent"];
var _c6 = ["tabIndicator"];
function LyTab_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", null, 2);
} }
function LyTab_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 3);
} }
var _c7 = [[["ly-tab-label"]], [["", "ly-tab-label", ""]], [["", "ly-tab-label-native", ""]], "*"];
var _c8 = ["ly-tab-label", "[ly-tab-label]", "[ly-tab-label-native]", "*"];
var _c9 = ["rippleContainer"];
var _c10 = ["ly-tab-label", ""];
function LyTabLabel_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 0, 2);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("className", ctx_r0._rippleService.classes.container);
} }
'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var LyTabContent = /** @class */ (function () {
        function LyTabContent(template) {
            this.template = template;
        }
LyTabContent.ɵfac = function LyTabContent_Factory(t) { return new (t || LyTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
LyTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: LyTabContent, selectors: [["", "ly-tab-content", ""]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyTabContent, [{
        type: core.Directive,
        args: [{ selector: '[ly-tab-content]' }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();
        return LyTabContent;
    }());
    LyTabContent.ctorParameters = function () { return [
        { type: core.TemplateRef }
    ]; };

    var DEFAULT_DISABLE_RIPPLE = false;
    var STYLE_PRIORITY = -2;
    var DEFAULT_BG = 'primary';
    var DEFAULT_INDICATOR_COLOR = 'accent';
    var DEFAULT_ELEVATION = 4;
    var DEFAULT_HEADER_PLACEMENT = 'above';
    var STYLES = function (theme, ref) {
        var __ = ref.selectorsOf(STYLES);
        return {
            $name: LyTabs.и,
            $priority: STYLE_PRIORITY,
            root: function () { return function (className) { return className + "{display:flex;}" + ui.st2c(((theme.tab
                && theme.tab.root
                && (theme.tab.root instanceof ui.StyleCollection
                    ? theme.tab.root.setTransformer(function (fn) { return fn(__); }).css
                    : theme.tab.root(__)))), "" + className); }; },
            tab: function (className) { return className + "{position:relative;display:inline-flex;}"; },
            /** Tab container */
            contentContainer: function (className) { return className + "{display:flex;overflow:hidden;flex-grow:1;width:100%;position:relative;}"; },
            /** Tab header */
            labels: function (className) { return className + "{display:flex;position:relative;height:100%;}"; },
            labelsContainer: function () { return function (className) { return className + "{overflow:hidden;flex-shrink:0;}@media (hover: none){" + __.scrollable + " " + className + "{overflow:auto;}}"; }; },
            label: function (className) { return className + "{-webkit-tap-highlight-color:transparent;-webkit-appearance:none;background-color:transparent;user-select:none;border:0;min-width:72px;padding:0 24px;cursor:pointer;height:48px;display:inline-flex;justify-content:center;align-items:center;position:relative;overflow:hidden;font-family:" + theme.typography.fontFamily + ";font-size:" + theme.pxToRem(theme.typography.fontSize) + ";letter-spacing:0.02857em;color:currentColor;outline:none;width:100%;font-weight:500;opacity:.7;}@media " + theme.breakpoints['XSmall'] + "{" + className + "{padding:0 12px;}}"; },
            labelActive: function (className) { return className + "{opacity:1;}"; },
            contents: function (className) { return className + "{display:flex;width:100%;}"; },
            content: function (className) { return "" + ui.st2c((ui.LY_COMMON_STYLES.fill), "" + className) + className + "{width:100%;height:100%;position:absolute;overflow:auto;}"; },
            contentActive: function (className) { return className + "{position:relative;z-index:1;}"; },
            contentInner: null,
            indicator: function (className) { return className + "{position:absolute;height:2px;transition:450ms cubic-bezier(.1, 1, 0.5, 1);background:currentColor;}"; },
            indicatorForServer: function (className) { return className + "{position:absolute;background:currentColor;}"; },
            rippleContainer: function (className) { return "" + ui.st2c((ui.LY_COMMON_STYLES.fill), "" + className) + className + "{overflow:hidden;}"; },
            scrollable: null,
            hiddenContent: function () { return function (className) { return className + "{visibility:hidden;}"; }; },
            column: null,
            row: null
        };
    };
    /** @docs-private */
    var LyTabsBase = /** @class */ (function () {
        function LyTabsBase(_theme) {
            this._theme = _theme;
        }
        return LyTabsBase;
    }());
    /** @docs-private */
    var LyTabsMixinBase = ui.mixinStyleUpdater(ui.mixinBg(ui.mixinElevation(ui.mixinShadowColor(LyTabsBase))));
    /** @docs-private */
    var LyTabLabelBase = /** @class */ (function () {
        function LyTabLabelBase(_theme, _ngZone, _platform) {
            this._theme = _theme;
            this._ngZone = _ngZone;
            this._platform = _platform;
        }
        return LyTabLabelBase;
    }());
    /** @docs-private */
    var LyTabLabelMixinBase = ui.mixinStyleUpdater(ui.mixinBg(ui.mixinColor(ui.mixinRaised(ui.mixinDisabled(ui.mixinOutlined(ui.mixinElevation(ui.mixinShadowColor(ui.mixinDisableRipple(LyTabLabelBase)))))))));
    var ɵ0 = function (val) { return function (theme, ref) {
        var __ = ref.selectorsOf(STYLES);
        return function (className) { return className + " " + __.indicator + "{color:" + theme.colorOf(val) + ";}"; };
    }; };
    /**
     * @dynamic
     */
    var LyTabs = /** @class */ (function (_super) {
        __extends(LyTabs, _super);
        function LyTabs(theme, renderer, el, cd, _viewportRuler, sRenderer, _platform, _ngZone) {
            var _this = _super.call(this, theme) || this;
            _this.theme = theme;
            _this.renderer = renderer;
            _this.el = el;
            _this.cd = cd;
            _this._viewportRuler = _viewportRuler;
            _this.sRenderer = sRenderer;
            _this._platform = _platform;
            _this._ngZone = _ngZone;
            /** @docs-private */
            _this.$priority = STYLE_PRIORITY;
            /** @docs-private */
            _this.classes = _this.sRenderer.renderSheet(STYLES, true);
            _this._tabsSubscription = rxjs.Subscription.EMPTY;
            _this._timeoutIds = {};
            /** Emits whenever the component is destroyed. */
            _this._destroy = new rxjs.Subject();
            _this.selectedIndexOnChange = 'auto';
            _this.selectedIndexChange = new core.EventEmitter();
            _this.setAutoContrast();
            _this.animationDuration = 500;
            return _this;
        }
        Object.defineProperty(LyTabs.prototype, "keepContent", {
            get: function () {
                return this._keepContent;
            },
            /**
             * Keep the content.
             * By default, when changing a tab, the previous one is created and deleted.
             * With this, the content will only be hidden instead of deleting it.
             */
            set: function (val) {
                var newVal = ui.toBoolean(val);
                this._keepContent = newVal;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyTabs.prototype, "animationDuration", {
            get: function () {
                return this._animationDuration;
            },
            /** Animation duration in milliseconds */
            set: function (val) {
                var _this = this;
                this._animationDuration = val;
                Promise.resolve().then(function () {
                    _this.tabContents.nativeElement.style.transitionDuration = val + "ms";
                });
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyTabs.prototype, "dynamicHeight", {
            get: function () {
                return this._dynamicHeight;
            },
            /**
             * Whether the tab group should grow to the size of the active tab.
             */
            set: function (val) {
                var newVal = ui.toBoolean(val);
                this._dynamicHeight = newVal;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyTabs.prototype, "scrollable", {
            get: function () {
                return this._scrollable;
            },
            set: function (val) {
                var newVal = ui.toBoolean(val);
                if (newVal) {
                    this.renderer.addClass(this.el.nativeElement, this.classes.scrollable);
                }
                else if (this._scrollable != null) {
                    this.renderer.removeClass(this.el.nativeElement, this.classes.scrollable);
                }
                this._scrollable = newVal;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyTabs.prototype, "headerPlacement", {
            get: function () {
                return this._headerPlacement;
            },
            set: function (val) {
                var _this = this;
                if (val !== this.headerPlacement) {
                    this._headerPlacement = val;
                    this.sRenderer.toggleClass(this.classes.column, val === 'above' || val === 'below');
                    this.sRenderer.toggleClass(this.classes.row, val === 'before' || val === 'after');
                    this._headerPlacementClass = this.theme.addStyle("lyTabs.headerPlacement:" + val, function () {
                        var _a, _b;
                        var flexDirectionContainer;
                        var flexDirection = _this._getFlexDirection(val);
                        var position;
                        var height = null;
                        var width = null;
                        var heightServer = null;
                        var widthServer = null;
                        switch (val) {
                            case ui.YPosition.above:
                                flexDirectionContainer = 'column';
                                position = ui.YPosition.below;
                                height = '2px';
                                widthServer = '100%';
                                break;
                            case ui.YPosition.below:
                                flexDirectionContainer = 'column-reverse';
                                position = ui.YPosition.above;
                                height = '2px';
                                widthServer = '100%';
                                break;
                            case ui.XPosition.before:
                                flexDirectionContainer = 'row';
                                position = ui.XPosition.after;
                                width = '2px';
                                heightServer = '100%';
                                break;
                            case ui.XPosition.after:
                                flexDirectionContainer = 'row-reverse';
                                position = ui.XPosition.before;
                                width = '2px';
                                heightServer = '100%';
                                break;
                            default:
                                throw new Error("LyTabs: value:" + val + " do not is valid for `headerPlacement`");
                        }
                        if (val === ui.YPosition.above || val === ui.YPosition.below) {
                            flexDirection = 'row';
                        }
                        else {
                            flexDirection = 'column';
                        }
                        return _a = {},
                            _a["&"] = {
                                flexDirection: flexDirectionContainer
                            },
                            _a["& ." + _this.classes.indicator + ",& ." + _this.classes.indicatorForServer] = (_b = {},
                                _b[position] = 0,
                                _b.height = height,
                                _b.width = width,
                                _b),
                            _a["." + _this.classes.indicatorForServer] = {
                                width: widthServer,
                                height: heightServer
                            },
                            _a["& ." + _this.classes.labels + ",& ." + _this.classes.contents] = { flexDirection: flexDirection },
                            _a["." + _this.classes.contents] = { flexDirection: flexDirection },
                            _a;
                    }, this.el.nativeElement, this._headerPlacementClass, STYLE_PRIORITY);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyTabs.prototype, "alignTabs", {
            get: function () {
                return this._alignTabs;
            },
            set: function (val) {
                var _a, _b;
                this._alignTabs = val;
                this._alignTabsClass = this.theme.addStyle("lyAlignTabs: " + val, (val === 'stretch' ? (_a = {},
                    _a["& ." + this.classes.labels + " ." + this.classes.tab] = {
                        flexBasis: 0,
                        flexGrow: 1
                    },
                    _a) : (_b = {},
                    _b["& ." + this.classes.labels] = {
                        justifyContent: val in ui.AlignAlias ? ui.AlignAlias[val] : val
                    },
                    _b)), this.el.nativeElement, this._alignTabsClass, STYLE_PRIORITY);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyTabs.prototype, "textColor", {
            get: function () {
                return this._textColor;
            },
            set: function (val) {
                var _this = this;
                this._textColor = val;
                this._textColorClass = this.theme.addStyle("lyTabs.textColor:" + val, function (theme) {
                    var _a;
                    return (_a = {},
                        _a["& ." + _this.classes.labelActive] = {
                            color: theme.colorOf(val)
                        },
                        _a);
                }, this.el.nativeElement, this._textColorClass, STYLE_PRIORITY);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(LyTabs.prototype, "selectedIndex", {
            get: function () {
                return this._selectedIndex;
            },
            set: function (val) {
                var _this = this;
                if (val !== this.selectedIndex) {
                    this._selectedBeforeIndex = this._selectedIndex;
                    this._selectedIndex = this._findIndex(val, 'auto');
                    this._selectedBeforeTab = this._selectedTab;
                    if (this._isViewInitLoaded) {
                        this._updateTabs();
                    }
                    else {
                        Promise.resolve(null).then(function () { return _this._updateTabs(); });
                    }
                    this.selectedIndexChange.emit(this._selectedIndex);
                    this._markForCheck();
                }
            },
            enumerable: false,
            configurable: true
        });
        LyTabs.prototype.ngOnChanges = function () {
            if (this._isViewInitLoaded) {
                this.updateStyle(this.tabsRef.nativeElement);
            }
        };
        LyTabs.prototype.ngOnInit = function () {
            if (this.selectedIndex == null) {
                this.selectedIndex = 0;
            }
            this.renderer.addClass(this.el.nativeElement, this.classes.root);
            var tabsIndicatorEl = this.tabsIndicator.nativeElement;
            this.renderer.addClass(tabsIndicatorEl, this.classes.indicator);
            /** Set default Color */
            if (!this.indicatorColor && !this.bg && !this.textColor && !this.elevation) {
                this.indicatorColor = DEFAULT_INDICATOR_COLOR;
                this.bg = DEFAULT_BG;
                this.elevation = DEFAULT_ELEVATION;
            }
            if (!this.headerPlacement) {
                this.headerPlacement = DEFAULT_HEADER_PLACEMENT;
            }
        };
        LyTabs.prototype.ngAfterContentInit = function () {
            var _this = this;
            this._tabsSubscription = this.tabsList.changes.subscribe(function () {
                if (_this._selectedIndex !== _this.selectedIndexOnChange) {
                    _this.selectedIndex = _this._findIndex(_this.selectedIndex, _this.selectedIndexOnChange);
                }
                _this.cd.markForCheck();
            });
        };
        LyTabs.prototype.ngAfterViewInit = function () {
            var _this = this;
            this._isViewInitLoaded = true;
            this.tabsList.changes
                .pipe(operators.switchMapTo(this._ngZone.onStable.asObservable().pipe(operators.take(1))), operators.takeUntil(this._destroy))
                .subscribe(function () {
                _this._updateTabs();
            });
            this._updateTabs();
            this.updateStyle(this.tabsRef.nativeElement);
            if (this._platform.isBrowser) {
                this._tabResizeSub = this._viewportRuler.change().subscribe(function () {
                    if (_this._selectedTab) {
                        _this._updateIndicator(_this._selectedTab);
                        _this._selectedTab._tabLabel._updateTabScroll();
                    }
                });
            }
        };
        LyTabs.prototype.ngOnDestroy = function () {
            this._destroy.next();
            this._destroy.complete();
            this._tabsSubscription.unsubscribe();
            if (this._tabResizeSub) {
                this._tabResizeSub.unsubscribe();
            }
            this._clearTimeouts();
        };
        LyTabs.prototype._findIndex = function (selectedIndex, index) {
            if (!this.tabsList) {
                return selectedIndex;
            }
            var indexOfLastTab = this.tabsList.length - 1;
            var currentIndex = typeof index === 'number' ? index : selectedIndex;
            return currentIndex < 0 ? 0 : currentIndex > indexOfLastTab ? indexOfLastTab : currentIndex;
        };
        LyTabs.prototype._updateIndicator = function (currentTab, beforeTab) {
            if (currentTab) {
                if (beforeTab) {
                    beforeTab._renderer.removeAttribute(beforeTab._tabIndicator.nativeElement, 'class');
                }
                var el = currentTab._el.nativeElement;
                var rects = el.getBoundingClientRect();
                if (this.headerPlacement === ui.XPosition.after || this.headerPlacement === ui.XPosition.before) {
                    this.renderer.setStyle(this.tabsIndicator.nativeElement, 'height', rects.height + "px");
                    this.renderer.setStyle(this.tabsIndicator.nativeElement, 'top', el.offsetTop + "px");
                    this.renderer.removeStyle(this.tabsIndicator.nativeElement, 'width');
                    this.renderer.removeStyle(this.tabsIndicator.nativeElement, 'left');
                }
                else {
                    this.renderer.setStyle(this.tabsIndicator.nativeElement, 'width', rects.width + "px");
                    this.renderer.setStyle(this.tabsIndicator.nativeElement, 'left', el.offsetLeft + "px");
                    this.renderer.removeStyle(this.tabsIndicator.nativeElement, 'height');
                    this.renderer.removeStyle(this.tabsIndicator.nativeElement, 'top');
                }
            }
        };
        LyTabs.prototype._markForCheck = function () {
            this.cd.markForCheck();
        };
        LyTabs.prototype._updateTabs = function () {
            var _this = this;
            if (!this._isViewInitLoaded) {
                return;
            }
            var tabsContents = this.tabContentList.toArray();
            var tabsForUpdate = [];
            this.tabsList.forEach(function (tab, index) {
                var tabContent = tabsContents[index].nativeElement;
                if (_this.selectedIndex === index || _this._selectedBeforeIndex === index) {
                    tab._activeContent = true;
                    tabsForUpdate.push([tab, tabContent, index]);
                }
                else {
                    if (_this.keepContent) {
                        _this.renderer.addClass(tabContent, _this.classes.hiddenContent);
                    }
                }
            });
            this._ngZone.run(function () {
                _this._markForCheck();
            });
            this._ngZone.onStable.asObservable()
                .pipe(operators.take(1), operators.takeUntil(this._destroy))
                .subscribe(function () { return tabsForUpdate.forEach(function (parms) { return _this._updateContentStyle.apply(_this, __spread(parms)); }); });
        };
        LyTabs.prototype.loadTemplate = function (tab, index) {
            var _this = this;
            tab.index = index;
            if (this.selectedIndex === tab.index) {
                // set 0 if is null
                this._selectedTab = tab;
                Promise.resolve(null).then(function () {
                    // this._updateDynamicHeight(tabContent, index);
                    if (_this._platform.isBrowser) {
                        _this._updateIndicator(tab);
                    }
                    else {
                        // for server
                        var selectedBeforeTab = _this._selectedBeforeTab;
                        if (selectedBeforeTab) {
                            _this.renderer.removeClass(selectedBeforeTab._tabIndicator.nativeElement, _this.classes.indicatorForServer);
                        }
                        _this.renderer.addClass(_this._selectedTab._tabIndicator.nativeElement, _this.classes.indicatorForServer);
                    }
                });
            }
            else if (this._selectedBeforeIndex === index) {
                // Promise.resolve(null).then(() => this._updateDynamicHeight(tabContent, index));
            }
            tab._tabLabel._updateTabState();
            if (this.keepContent) {
                return tab.content;
            }
            if (tab._activeContent) {
                return tab.content;
            }
            return null;
        };
        LyTabs.prototype._getFlexDirection = function (val) {
            var flexDirection;
            if (val === ui.YPosition.above || val === ui.YPosition.below) {
                flexDirection = 'row';
            }
            else {
                flexDirection = 'column';
            }
            return flexDirection;
        };
        LyTabs.prototype._updateContentStyle = function (tab, tabContent, index) {
            var _this = this;
            if (this.selectedIndex === index || this._selectedBeforeIndex === index) {
                var prevIndex = this._selectedBeforeIndex;
                var currentIndex_1 = this.selectedIndex;
                var dynamicHeight_1 = this.dynamicHeight && this._platform.isBrowser && prevIndex != null;
                var contentInner = tabContent.firstElementChild;
                var contentHeight = dynamicHeight_1 ? contentInner.getBoundingClientRect().height : null;
                var contentHeightPrev = dynamicHeight_1
                    ? this.tabContentList.toArray()[prevIndex].nativeElement.firstElementChild.getBoundingClientRect().height
                    : null;
                if (currentIndex_1 === index) {
                    this.renderer.addClass(tabContent, this.classes.contentActive);
                    if (this.keepContent) {
                        this.renderer.removeClass(tabContent, this.classes.hiddenContent);
                    }
                }
                else {
                    this.renderer.removeClass(tabContent, this.classes.contentActive);
                }
                if (prevIndex == null || !this._platform.isBrowser || prevIndex === currentIndex_1) {
                    return;
                }
                this._clearTimeouts(index);
                var before = this._theme.variables.before;
                var isDirRow = this.headerPlacement === ui.XPosition.after
                    || this.headerPlacement === ui.XPosition.before;
                var x = before === 'left'
                    ? 100
                    : isDirRow
                        ? 100
                        : -100;
                if (currentIndex_1 === index) {
                    var sign = prevIndex < index ? 1 : -1;
                    var pos = isDirRow ? "0," + x * sign + "%" : x * sign + "%, 0";
                    tabContent.style.overflow = 'hidden';
                    if (dynamicHeight_1) {
                        tabContent.style.height = contentHeightPrev + "px";
                    }
                    tabContent.style.transform = "translate3d(" + pos + ", 0)";
                    enforceStyleRecalculation(tabContent);
                    tabContent.style.transition = this.animationDuration + "ms cubic-bezier(0.35, 0, 0.25, 1)";
                    tabContent.style.transform = "translate3d(0%, 0, 0)";
                    if (dynamicHeight_1) {
                        tabContent.style.height = contentHeight + "px";
                    }
                }
                else {
                    var sign = currentIndex_1 < index ? 1 : -1;
                    var pos = isDirRow ? "0," + x * sign + "%" : x * sign + "%, 0";
                    tabContent.style.overflow = 'hidden';
                    tabContent.style.transform = "translate3d(0%, 0, 0)";
                    enforceStyleRecalculation(tabContent);
                    tabContent.style.transition = this.animationDuration + "ms cubic-bezier(0.35, 0, 0.25, 1)";
                    tabContent.style.transform = "translate3d(" + pos + ", 0)";
                }
                this._runTimeoutOutsideZone(index, function () {
                    tabContent.style.transform = "";
                    tabContent.style.transition = "";
                    tabContent.style.overflow = "";
                    if (dynamicHeight_1) {
                        tabContent.style.height = "";
                    }
                    if (currentIndex_1 !== index) {
                        if (_this.keepContent) {
                            _this.renderer.addClass(tabContent, _this.classes.hiddenContent);
                        }
                        tab._activeContent = false;
                        _this._ngZone.run(function () { return _this._markForCheck(); });
                    }
                }, this.animationDuration);
            }
        };
        /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */
        LyTabs.prototype._runTimeoutOutsideZone = function (index, fn, delay) {
            var _this = this;
            if (delay === void 0) { delay = 0; }
            this._ngZone.runOutsideAngular(function () { return _this._timeoutIds["_" + index] = window.setTimeout(fn, delay); });
        };
        LyTabs.prototype._clearTimeouts = function (tabIndex) {
            var _this = this;
            if (tabIndex != null) {
                var key = "_" + tabIndex;
                if (this._timeoutIds[key] != null) {
                    window.clearTimeout(this._timeoutIds[key]);
                    delete this._timeoutIds[key];
                }
            }
            else {
                Object.keys(this._timeoutIds)
                    .forEach(function (key) { return window.clearTimeout(_this._timeoutIds["_" + key]); });
            }
        };
LyTabs.ɵfac = function LyTabs_Factory(t) { return new (t || LyTabs)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LyTheme2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleRenderer), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
LyTabs.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LyTabs, selectors: [["ly-tabs"]], contentQueries: function LyTabs_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, LyTab, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabsList = _t);
    } }, viewQuery: function LyTabs_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
        ɵngcc0.ɵɵstaticViewQuery(_c1, true);
        ɵngcc0.ɵɵstaticViewQuery(_c2, true, core.ElementRef);
        ɵngcc0.ɵɵviewQuery(_c3, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabsRef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabContents = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabsIndicator = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabContentList = _t);
    } }, inputs: { bg: "bg", elevation: "elevation", shadowColor: "shadowColor", keepContent: "keepContent", animationDuration: "animationDuration", dynamicHeight: "dynamicHeight", scrollable: "scrollable", headerPlacement: "headerPlacement", alignTabs: "alignTabs", textColor: "textColor", selectedIndex: "selectedIndex", indicatorColor: "indicatorColor", selectedIndexOnChange: "selectedIndexOnChange" }, outputs: { selectedIndexChange: "selectedIndexChange" }, exportAs: ["lyTabs"], features: [ɵngcc0.ɵɵProvidersFeature([
            ui.StyleRenderer
        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 10, vars: 5, consts: [[3, "className"], ["tabs", ""], ["tabsIndicator", ""], ["tabContents", ""], [3, "className", 4, "ngFor", "ngForOf"], ["tabContent", ""], [3, "cdkPortalOutlet"]], template: function LyTabs_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "div", 0);
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵelement(4, "span", null, 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 0);
        ɵngcc0.ɵɵelementStart(7, "div", 0, 3);
        ɵngcc0.ɵɵtemplate(9, LyTabs_div_9_Template, 4, 3, "div", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("className", ctx.classes.labelsContainer);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("className", ctx.classes.labels);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("className", ctx.classes.contentContainer);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("className", ctx.classes.contents);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tabsList);
    } }, directives: [ɵngcc4.NgForOf, ɵngcc5.CdkPortalOutlet], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyTabs, [{
        type: core.Component,
        args: [{
                selector: 'ly-tabs',
                template: "<div #tabs [className]=\"classes.labelsContainer\">\n  <div [className]=\"classes.labels\">\n    <ng-content></ng-content>\n    <span #tabsIndicator></span>\n  </div>\n</div>\n<div [className]=\"classes.contentContainer\">\n  <div [className]=\"classes.contents\" #tabContents>\n    <div #tabContent *ngFor=\"let item of tabsList; index as x\" [className]=\"classes.content\">\n      <div [className]=\"classes.contentInner\">\n        <ng-template\n          [cdkPortalOutlet]=\"loadTemplate(item, x)\"\n        ></ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                encapsulation: core.ViewEncapsulation.None,
                exportAs: 'lyTabs',
                inputs: [
                    'bg', 'elevation', 'shadowColor'
                ],
                providers: [
                    ui.StyleRenderer
                ]
            }]
    }], function () { return [{ type: ɵngcc1.LyTheme2 }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.ViewportRuler }, { type: ɵngcc1.StyleRenderer }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }]; }, { keepContent: [{
            type: core.Input
        }], animationDuration: [{
            type: core.Input
        }], dynamicHeight: [{
            type: core.Input
        }], scrollable: [{
            type: core.Input
        }], headerPlacement: [{
            type: core.Input
        }], alignTabs: [{
            type: core.Input
        }], textColor: [{
            type: core.Input
        }], selectedIndex: [{
            type: core.Input
        }], indicatorColor: [{
            type: core.Input
        }], tabsRef: [{
            type: core.ViewChild,
            args: ['tabs', { static: true }]
        }], tabContents: [{
            type: core.ViewChild,
            args: ['tabContents', { static: true }]
        }], tabsIndicator: [{
            type: core.ViewChild,
            args: ['tabsIndicator', { static: true, read: core.ElementRef }]
        }], selectedIndexOnChange: [{
            type: core.Input
        }], selectedIndexChange: [{
            type: core.Output
        }], tabsList: [{
            type: core.ContentChildren,
            args: [core.forwardRef(function () { return LyTab; })]
        }], tabContentList: [{
            type: core.ViewChildren,
            args: ['tabContent']
        }] }); })();
        return LyTabs;
    }(LyTabsMixinBase));
    /** @docs-private */
    LyTabs.и = 'LyTabs';
    LyTabs.ctorParameters = function () { return [
        { type: ui.LyTheme2 },
        { type: core.Renderer2 },
        { type: core.ElementRef },
        { type: core.ChangeDetectorRef },
        { type: scrolling.ViewportRuler },
        { type: ui.StyleRenderer },
        { type: platform.Platform },
        { type: core.NgZone }
    ]; };
    LyTabs.propDecorators = {
        tabsRef: [{ type: core.ViewChild, args: ['tabs', { static: true },] }],
        tabContents: [{ type: core.ViewChild, args: ['tabContents', { static: true },] }],
        tabsIndicator: [{ type: core.ViewChild, args: ['tabsIndicator', { static: true, read: core.ElementRef },] }],
        selectedIndexOnChange: [{ type: core.Input }],
        keepContent: [{ type: core.Input }],
        animationDuration: [{ type: core.Input }],
        dynamicHeight: [{ type: core.Input }],
        scrollable: [{ type: core.Input }],
        indicatorColor: [{ type: core.Input }],
        headerPlacement: [{ type: core.Input }],
        alignTabs: [{ type: core.Input }],
        textColor: [{ type: core.Input }],
        selectedIndex: [{ type: core.Input }],
        selectedIndexChange: [{ type: core.Output }],
        tabsList: [{ type: core.ContentChildren, args: [core.forwardRef(function () { return LyTab; }),] }],
        tabContentList: [{ type: core.ViewChildren, args: ['tabContent',] }]
    };
    __decorate([
        ui.Style(ɵ0)
    ], LyTabs.prototype, "indicatorColor", void 0);
    var LyTab = /** @class */ (function () {
        function LyTab(_tabs, _renderer, _el, sRenderer, _platform, _viewContainerRef) {
            this._tabs = _tabs;
            this._renderer = _renderer;
            this._el = _el;
            this.sRenderer = sRenderer;
            this._platform = _platform;
            this._viewContainerRef = _viewContainerRef;
            this._isBrowser = this._platform.isBrowser;
            /** Portal that will be the hosted content of the tab */
            this._contentPortal = null;
        }
        Object.defineProperty(LyTab.prototype, "content", {
            /** @docs-private */
            get: function () {
                return this._contentPortal;
            },
            enumerable: false,
            configurable: true
        });
        LyTab.prototype.ngOnInit = function () {
            this._renderer.addClass(this._el.nativeElement, this._tabs.classes.tab);
            this._contentPortal = new portal.TemplatePortal(this._templateRefLazy || this._templateRef, this._viewContainerRef);
        };
LyTab.ɵfac = function LyTab_Factory(t) { return new (t || LyTab)(ɵngcc0.ɵɵdirectiveInject(LyTabs), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleRenderer), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
LyTab.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LyTab, selectors: [["ly-tab"]], contentQueries: function LyTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, LyTabContent, true, core.TemplateRef);
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, LyTabLabel, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._templateRefLazy = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabLabel = _t.first);
    } }, viewQuery: function LyTab_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c5, true);
        ɵngcc0.ɵɵviewQuery(_c6, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._templateRef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabIndicator = _t.first);
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            ui.StyleRenderer
        ])], ngContentSelectors: _c8, decls: 7, vars: 1, consts: [[4, "ngIf"], ["_templateNgContent", ""], ["tabIndicator", ""]], template: function LyTab_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c7);
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵprojection(1, 1);
        ɵngcc0.ɵɵprojection(2, 2);
        ɵngcc0.ɵɵelement(3, "div");
        ɵngcc0.ɵɵtemplate(4, LyTab_span_4_Template, 2, 0, "span", 0);
        ɵngcc0.ɵɵtemplate(5, LyTab_ng_template_5_Template, 1, 0, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx._isBrowser);
    } }, directives: [ɵngcc4.NgIf], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyTab, [{
        type: core.Component,
        args: [{
                selector: 'ly-tab',
                template: "<ng-content select=\"ly-tab-label\"></ng-content>\n<ng-content select=\"[ly-tab-label]\"></ng-content>\n<ng-content select=\"[ly-tab-label-native]\"></ng-content>\n<div></div>\n<span *ngIf=\"!_isBrowser\" #tabIndicator></span>\n<ng-template #_templateNgContent>\n  <ng-content></ng-content>\n</ng-template>",
                changeDetection: core.ChangeDetectionStrategy.OnPush,
                encapsulation: core.ViewEncapsulation.None,
                providers: [
                    ui.StyleRenderer
                ]
            }]
    }], function () { return [{ type: LyTabs }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.StyleRenderer }, { type: ɵngcc3.Platform }, { type: ɵngcc0.ViewContainerRef }]; }, { _templateRefLazy: [{
            type: core.ContentChild,
            args: [LyTabContent, { read: core.TemplateRef, static: true }]
        }], _templateRef: [{
            type: core.ViewChild,
            args: ['_templateNgContent', { static: true }]
        }], _tabIndicator: [{
            type: core.ViewChild,
            args: ['tabIndicator']
        }], _tabLabel: [{
            type: core.ContentChild,
            args: [core.forwardRef(function () { return LyTabLabel; }), { static: true }]
        }] }); })();
        return LyTab;
    }());
    LyTab.ctorParameters = function () { return [
        { type: LyTabs },
        { type: core.Renderer2 },
        { type: core.ElementRef },
        { type: ui.StyleRenderer },
        { type: platform.Platform },
        { type: core.ViewContainerRef }
    ]; };
    LyTab.propDecorators = {
        _templateRefLazy: [{ type: core.ContentChild, args: [LyTabContent, { read: core.TemplateRef, static: true },] }],
        _templateRef: [{ type: core.ViewChild, args: ['_templateNgContent', { static: true },] }],
        _tabIndicator: [{ type: core.ViewChild, args: ['tabIndicator',] }],
        _tabLabel: [{ type: core.ContentChild, args: [core.forwardRef(function () { return LyTabLabel; }), { static: true },] }]
    };
    var LyTabLabel = /** @class */ (function (_super) {
        __extends(LyTabLabel, _super);
        function LyTabLabel(_el, _renderer, _theme, _ngZone, _rippleService, _focusState, sRenderer, _tab, _tabs, platform) {
            var _this = _super.call(this, _el, _renderer, _theme, _ngZone, _rippleService, _focusState, sRenderer, platform, null) || this;
            _this.sRenderer = sRenderer;
            _this._tab = _tab;
            _this._tabs = _tabs;
            _this._isBrowser = _this._platform.isBrowser;
            return _this;
        }
        Object.defineProperty(LyTabLabel.prototype, "active", {
            get: function () {
                return this._active;
            },
            set: function (val) {
                var _this = this;
                var newVal = ui.toBoolean(val);
                if (newVal && val !== this.active) {
                    Promise.resolve(null).then(function () { return _this._tabs.selectedIndex = _this._tab.index; });
                }
            },
            enumerable: false,
            configurable: true
        });
        LyTabLabel.prototype._onClickTab = function () {
            if (!this.disabled) {
                this._tabs.selectedIndex = this._tab.index;
            }
        };
        LyTabLabel.prototype.ngOnInit = function () {
            this._renderer.addClass(this._el.nativeElement, this._tabs.classes.label);
            // set default disable ripple
            if (this.disableRipple == null) {
                this.disableRipple = DEFAULT_DISABLE_RIPPLE;
            }
        };
        LyTabLabel.prototype._updateTabState = function () {
            // update styles for active tab
            if (this._tabs._selectedIndex === this._tab.index) {
                if (!this._activeTabStyle) {
                    this._activeTabStyle = true;
                    this._renderer.addClass(this._el.nativeElement, this._tabs.classes.labelActive);
                    this._updateTabScroll();
                }
            }
            else if (this._activeTabStyle) {
                this._activeTabStyle = false;
                this._renderer.removeClass(this._el.nativeElement, this._tabs.classes.labelActive);
            }
        };
        LyTabLabel.prototype._updateTabScroll = function () {
            if (this._platform.isBrowser && this._tabs.scrollable) {
                var tab = this._tab._el.nativeElement;
                var tabContainer = this._tabs.tabsRef.nativeElement;
                if (tabContainer.scrollWidth !== tabContainer.offsetWidth) {
                    var dir = this._theme.variables.direction;
                    var max = tabContainer.scrollWidth - tabContainer.offsetWidth;
                    var offsetBefore = dir === ui.Dir.rtl
                        ? max + tab.offsetLeft
                        : tab.offsetLeft;
                    var l = offsetBefore + tab.offsetWidth / 2 - tabContainer.offsetWidth / 2;
                    var newVal = l >= max ? max : l <= 0 ? 0 : l;
                    ui.scrollWithAnimation(this._tabs.tabsRef.nativeElement, newVal, 350, 'x');
                }
            }
        };
        LyTabLabel.prototype.ngAfterViewInit = function () { };
LyTabLabel.ɵfac = function LyTabLabel_Factory(t) { return new (t || LyTabLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LyTheme2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LyRippleService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LyFocusState), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.StyleRenderer), ɵngcc0.ɵɵdirectiveInject(LyTab, 8), ɵngcc0.ɵɵdirectiveInject(LyTabs, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform)); };
LyTabLabel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LyTabLabel, selectors: [["button", "ly-tab-label", ""], ["a", "ly-tab-label", ""]], viewQuery: function LyTabLabel_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c9, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rippleContainer = _t.first);
    } }, hostBindings: function LyTabLabel_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function LyTabLabel_click_HostBindingHandler() { return ctx._onClickTab(); });
    } }, inputs: { bg: "bg", color: "color", raised: "raised", disabled: "disabled", outlined: "outlined", elevation: "elevation", shadowColor: "shadowColor", disableRipple: "disableRipple", active: "active" }, features: [ɵngcc0.ɵɵProvidersFeature([
            ui.StyleRenderer
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c10, ngContentSelectors: _c4, decls: 3, vars: 2, consts: [[3, "className"], [3, "className", 4, "ngIf"], ["rippleContainer", ""]], template: function LyTabLabel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, LyTabLabel_div_2_Template, 2, 1, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("className", ctx.classes.content);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx._isBrowser);
    } }, directives: [ɵngcc4.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyTabLabel, [{
        type: core.Component,
        args: [{
                selector: 'button[ly-tab-label], a[ly-tab-label]',
                template: "<span [className]=\"classes.content\">\n  <ng-content></ng-content>\n</span>\n<div *ngIf=\"_isBrowser\" #rippleContainer [className]=\"_rippleService.classes.container\"></div>\n",
                inputs: [
                    'bg',
                    'color',
                    'raised',
                    'disabled',
                    'outlined',
                    'elevation',
                    'shadowColor',
                    'disableRipple'
                ],
                providers: [
                    ui.StyleRenderer
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.LyTheme2 }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.LyRippleService }, { type: ɵngcc1.LyFocusState }, { type: ɵngcc1.StyleRenderer }, { type: LyTab, decorators: [{
                type: core.Optional
            }] }, { type: LyTabs, decorators: [{
                type: core.Optional
            }] }, { type: ɵngcc3.Platform }]; }, { active: [{
            type: core.Input
        }], _onClickTab: [{
            type: core.HostListener,
            args: ['click']
        }], _rippleContainer: [{
            type: core.ViewChild,
            args: ['rippleContainer']
        }] }); })();
        return LyTabLabel;
    }(button.LyButton));
    LyTabLabel.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.Renderer2 },
        { type: ui.LyTheme2 },
        { type: core.NgZone },
        { type: ui.LyRippleService },
        { type: ui.LyFocusState },
        { type: ui.StyleRenderer },
        { type: LyTab, decorators: [{ type: core.Optional }] },
        { type: LyTabs, decorators: [{ type: core.Optional }] },
        { type: platform.Platform }
    ]; };
    LyTabLabel.propDecorators = {
        active: [{ type: core.Input }],
        _rippleContainer: [{ type: core.ViewChild, args: ['rippleContainer',] }],
        _onClickTab: [{ type: core.HostListener, args: ['click',] }]
    };
    /** Enforces a style recalculation of a DOM element by computing its styles. */
    function enforceStyleRecalculation(element) {
        window.getComputedStyle(element).getPropertyValue('opacity');
    }

    var LyTabsModule = /** @class */ (function () {
        function LyTabsModule() {
        }
LyTabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LyTabsModule });
LyTabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LyTabsModule_Factory(t) { return new (t || LyTabsModule)(); }, imports: [[
            ui.LyThemeModule,
            common.CommonModule,
            ui.LyCommonModule,
            ui.NgTranscludeModule,
            portal.PortalModule
        ], ɵngcc1.LyCommonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LyTabsModule, { declarations: [LyTabs,
        LyTab,
        LyTabLabel,
        LyTabContent], imports: [ɵngcc1.LyThemeModule, ɵngcc4.CommonModule, ɵngcc1.LyCommonModule, ɵngcc1.NgTranscludeModule, ɵngcc5.PortalModule], exports: [ɵngcc1.LyCommonModule, LyTabs,
        LyTab,
        LyTabLabel,
        LyTabContent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyTabsModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    ui.LyThemeModule,
                    common.CommonModule,
                    ui.LyCommonModule,
                    ui.NgTranscludeModule,
                    portal.PortalModule
                ],
                exports: [ui.LyCommonModule, LyTabs, LyTab, LyTabLabel, LyTabContent],
                declarations: [LyTabs, LyTab, LyTabLabel, LyTabContent]
            }]
    }], function () { return []; }, null); })();
        return LyTabsModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.LyTab = LyTab;
    exports.LyTabLabel = LyTabLabel;
    exports.LyTabLabelBase = LyTabLabelBase;
    exports.LyTabLabelMixinBase = LyTabLabelMixinBase;
    exports.LyTabs = LyTabs;
    exports.LyTabsBase = LyTabsBase;
    exports.LyTabsMixinBase = LyTabsMixinBase;
    exports.LyTabsModule = LyTabsModule;
    exports.STYLES = STYLES;
    exports.ɵ0 = ɵ0;
    exports.ɵa = LyTabContent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=alyle-ui-tabs.umd.js.map