{"version":3,"sources":["../../../lib/tooltip/tooltip.ts","../../../lib/tooltip/tooltip.module.ts"],"names":["DEFAULT_PLACEMENT","YPosition","below","STYLES","theme","ref","__","selectorsOf","$priority","root","tooltip","StyleCollection","setTransformer","fn","css","LyTooltip","_theme","_overlay","_el","_renderer","_cd","_focusState","ngZone","scroll","platform","_this","this","classes","renderStyleSheet","_listeners","Map","_scrollVal","lyTooltipShowDelay","lyTooltipHideDelay","isBrowser","element_1","nativeElement","IOS","ANDROID","set","show","hide","forEach","listener","event","addEventListener","_scrollSub","scrolled","subscribe","_tooltipOverlay","run","listen","ev","Object","defineProperty","prototype","_tooltip","val","ngOnInit","placement","xPosition","yPosition","ngOnDestroy","removeEventListener","unsubscribe","unlisten","delay","_hideTimeoutId","clearTimeout","_showTimeoutId","tooltipRef_1","setTimeout","create","undefined","styles","onResizeScroll","_updatePosition","bind","addStyle","_a","borderRadius","fontSize","padding","opacity","transition","animations","curves","standard","left","getBreakpoint","hasBackdrop","requestAnimationFrame","containerElement","_markForCheck","tooltipOverlay","removeClass","destroy","toggle","markForCheck","position","Positioning","variables","style","transform","x","y","Directive","args","selector","exportAs","LyTheme2","LyOverlay","ElementRef","Renderer2","ChangeDetectorRef","LyFocusState","NgZone","ScrollDispatcher","Platform","Input","NgModule","imports","LyOverlayModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  TemplateRef,\n  OnInit,\n  Renderer2\n  } from '@angular/core';\nimport {\n  LyFocusState,\n  LyOverlay,\n  LyTheme2,\n  OverlayFactory,\n  Placement,\n  ThemeVariables,\n  XPosition,\n  YPosition,\n  Positioning,\n  StyleCollection,\n  LyClasses,\n  StyleTemplate,\n  ThemeRef\n  } from '@alyle/ui';\nimport { Subscription } from 'rxjs';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Platform } from '@angular/cdk/platform';\n\nexport interface LyTooltipTheme {\n  /** Styles for Tooltip Component */\n  root?: StyleCollection<((classes: LyClasses<typeof STYLES>) => StyleTemplate)>\n    | ((classes: LyClasses<typeof STYLES>) => StyleTemplate);\n  appearance?: {\n    icon?: (classes: LyClasses<typeof STYLES>) => StyleTemplate\n    fab?: (classes: LyClasses<typeof STYLES>) => StyleTemplate\n    miniFab?: (classes: LyClasses<typeof STYLES>) => StyleTemplate\n    [name: string]: ((classes: LyClasses<typeof STYLES>) => StyleTemplate) | undefined\n  };\n  size?: {\n    small?: (classes: LyClasses<typeof STYLES>) => StyleTemplate\n    medium?: (classes: LyClasses<typeof STYLES>) => StyleTemplate\n    large?: (classes: LyClasses<typeof STYLES>) => StyleTemplate\n    [name: string]: ((classes: LyClasses<typeof STYLES>) => StyleTemplate) | undefined\n  };\n}\n\nexport interface LyTooltipVariables {\n  tooltip?: LyTooltipTheme;\n}\n\nconst DEFAULT_PLACEMENT = YPosition.below;\nconst STYLE_PRIORITY = -2;\nexport const STYLES = (theme: ThemeVariables & LyTooltipVariables, ref: ThemeRef) => {\n  const __ = ref.selectorsOf(STYLES);\n  return {\n    $priority: STYLE_PRIORITY,\n    root: () => (theme.tooltip\n      && theme.tooltip.root\n      && (theme.tooltip.root instanceof StyleCollection\n        ? theme.tooltip.root.setTransformer(fn => fn(__)).css\n        : theme.tooltip.root(__))\n    )\n  };\n};\n\n@Directive({\n  selector: '[lyTooltip]',\n  exportAs: 'lyTooltip'\n})\nexport class LyTooltip implements OnInit, OnDestroy {\n  /** @docs-private */\n  readonly classes = this._theme.renderStyleSheet(STYLES);\n  private _tooltip: string | TemplateRef<any> | null;\n  private _tooltipOverlay: OverlayFactory | null;\n  private _listeners = new Map<string, EventListenerOrEventListenerObject>();\n  private _scrollSub: Subscription;\n  private _scrollVal = 0;\n  private _showTimeoutId: number | null;\n  private _hideTimeoutId: number | null;\n  @Input('lyTooltip')\n  set tooltip(val: string | TemplateRef<any> | null) {\n    this._tooltip = val;\n  }\n  get tooltip() {\n    return this._tooltip;\n  }\n  @Input() lyTooltipShowDelay: number = 0;\n  @Input() lyTooltipHideDelay: number = 0;\n  @Input('lyTooltipPlacement') placement: Placement;\n  @Input('lyTooltipXPosition') xPosition: XPosition;\n  @Input('lyTooltipYPosition') yPosition: YPosition;\n  constructor(\n    private _theme: LyTheme2,\n    private _overlay: LyOverlay,\n    private _el: ElementRef,\n    private _renderer: Renderer2,\n    private _cd: ChangeDetectorRef,\n    private _focusState: LyFocusState,\n    ngZone: NgZone,\n    scroll: ScrollDispatcher,\n    platform: Platform\n  ) {\n    if (platform.isBrowser) {\n      const element: HTMLElement = _el.nativeElement;\n      if (!platform.IOS && !platform.ANDROID) {\n        this._listeners\n          .set('mouseenter', () => this.show())\n          .set('mouseleave', () => this.hide());\n      } else {\n        this._listeners.set('touchstart', () => this.show());\n      }\n\n      this._listeners.forEach((listener, event) => element.addEventListener(event, listener));\n\n      this._scrollSub = scroll.scrolled().subscribe(() => {\n        if (this._tooltipOverlay) {\n          this._scrollVal++;\n          if (this._scrollVal > 10) {\n            ngZone.run(() => this.hide(0));\n            this._scrollVal = 0;\n          }\n        }\n      });\n\n      _focusState.listen(element)!.subscribe(ev => {\n        if (ev === 'keyboard') {\n          ngZone.run(() => this.show());\n        } else if (ev == null) {\n          ngZone.run(() => this.hide());\n        }\n      });\n    }\n  }\n\n  ngOnInit() {\n    if (!this.placement && !this.xPosition && !this.yPosition) {\n      this.placement = DEFAULT_PLACEMENT;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hide(0);\n\n    // Clean up the event listeners set in the constructor\n    this._listeners.forEach((listener, event) => {\n      this._el.nativeElement.removeEventListener(event, listener);\n    });\n\n    if (this._scrollSub) {\n      this._scrollSub.unsubscribe();\n    }\n\n    this._focusState.unlisten(this._el);\n  }\n\n  show(delay?: number) {\n    delay = typeof delay === 'number' ? delay : this.lyTooltipShowDelay;\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n      this._hideTimeoutId = null;\n    }\n    if (!this._tooltipOverlay && this.tooltip && !this._showTimeoutId) {\n      const tooltipRef = this.tooltip;\n\n      this._showTimeoutId = setTimeout(() => {\n        // const rect = this._el.nativeElement.getBoundingClientRect();\n        const tooltip = this._tooltipOverlay = this._overlay.create(tooltipRef, undefined, {\n          styles: {\n            // top: rect.y,\n            // left: rect.x\n          },\n          onResizeScroll: this._updatePosition.bind(this),\n          classes: [\n            this.classes.root,\n            this._theme.addStyle('LyTooltip', (theme: ThemeVariables) => ({\n              borderRadius: '4px',\n              fontSize: '10px',\n              padding: '6px 8px',\n              opacity: 0,\n              transition: `opacity ${theme.animations.curves.standard} 300ms`,\n              left: 0,\n              [theme.getBreakpoint('XSmall')]: {\n                padding: '8px 16px',\n                fontSize: '14px',\n              }\n            }), undefined, undefined, STYLE_PRIORITY)\n          ],\n          hasBackdrop: false\n        });\n        this._updatePosition();\n\n        this._theme.requestAnimationFrame(() => {\n          this._theme.addStyle('lyTooltip:open', ({\n            opacity: 1,\n          }), tooltip.containerElement, undefined, STYLE_PRIORITY);\n        });\n\n        this._showTimeoutId = null;\n        this._markForCheck();\n      }, delay) as any;\n    }\n  }\n\n  hide(delay?: number) {\n    // return;\n    const tooltipOverlay = this._tooltipOverlay;\n    delay = typeof delay === 'number' ? delay : this.lyTooltipHideDelay;\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n      this._showTimeoutId = null;\n    }\n    if (tooltipOverlay && !this._hideTimeoutId) {\n\n      this._hideTimeoutId = setTimeout(() => {\n        this._renderer.removeClass(tooltipOverlay.containerElement, this._theme.addStyle('lyTooltip:open', null));\n        setTimeout(() => tooltipOverlay.destroy(), 300);\n        this._tooltipOverlay = null;\n\n        this._hideTimeoutId = null;\n        this._markForCheck();\n      }, delay) as any;\n    }\n  }\n\n  toggle() {\n    if (this._tooltipOverlay) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  private _markForCheck() {\n    this._cd.markForCheck();\n  }\n\n  private _updatePosition() {\n    const tooltip = this._tooltipOverlay;\n    if (tooltip) {\n      const position = new Positioning(\n        this.placement, this.xPosition,\n        this.yPosition,\n        this._el.nativeElement,\n        tooltip.containerElement,\n        this._theme.variables,\n        13\n      );\n      tooltip.containerElement.style.transform = `translate3d(${position.x}px,${position.y}px,0)`;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LyTooltip } from './tooltip';\nimport { LyOverlayModule } from '@alyle/ui';\n\n@NgModule({\n  imports: [LyOverlayModule],\n  declarations: [LyTooltip],\n  exports: [LyTooltip]\n})\nexport class LyTooltipModule { }\n"]}