import { ElementRef, NgZone, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { LyTheme2, ThemeVariables, StyleCollection, LyClasses, StyleTemplate, ThemeRef, StyleRenderer, WithStyles } from '@alyle/ui';
import { Platform } from '@angular/cdk/platform';
import * as ɵngcc0 from '@angular/core';
export interface LyCardTheme {
    /** Styles for Card Component */
    root?: StyleCollection<((classes: LyClasses<typeof STYLES>) => StyleTemplate)> | ((classes: LyClasses<typeof STYLES>) => StyleTemplate);
}
export interface LyCardVariables {
    card?: LyCardTheme;
}
export declare const STYLES: (theme: ThemeVariables & LyCardVariables, ref: ThemeRef) => {
    $priority: number;
    $name: string;
    root: () => (className: string) => string;
    bgImg: (className: string) => string;
    content: (className: string) => string;
    actions: (className: string) => string;
    actionsItem: (className: string) => string;
};
/** @docs-private */
export declare class LyCardBase {
    _theme: LyTheme2;
    _ngZone: NgZone;
    _platform: Platform;
    constructor(_theme: LyTheme2, _ngZone: NgZone, _platform: Platform);
}
/** @docs-private */
export declare const LyCardMixinBase: import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/build-common-behaviors").CanStyleUpdater> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/bg").CanBg> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/color").CanColor> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/raised").CanRaised> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/alyle-ui").CanDisable> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/outlined").CanOutlined> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/elevation").CanElevation> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/shadow-color").CanShadowColor> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/disable-ripple").CanDisableRipple> & typeof LyCardBase;
export declare class LyCard extends LyCardMixinBase implements OnChanges, OnInit, OnDestroy {
    private theme;
    private _el;
    private renderer;
    static readonly и = "LyCard";
    /**
     * styles
     * @docs-private
     */
    readonly classes: Pick<{
        $priority: string;
        $name: string;
        root: string;
        bgImg: string;
        content: string;
        actions: string;
        actionsItem: string;
    }, "root" | "bgImg" | "content" | "actions" | "actionsItem">;
    constructor(theme: LyTheme2, _el: ElementRef, renderer: Renderer2, ngZone: NgZone, platform: Platform);
    ngOnChanges(): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LyCard, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LyCard, "ly-card", never, { "bg": "bg"; "color": "color"; "raised": "raised"; "outlined": "outlined"; "elevation": "elevation"; "shadowColor": "shadowColor"; "disableRipple": "disableRipple"; }, {}, never>;
}
export declare class LyCardContent implements OnInit {
    private el;
    private renderer;
    private card;
    constructor(el: ElementRef, renderer: Renderer2, card: LyCard);
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LyCardContent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LyCardContent, "ly-card-content", never, {}, {}, never>;
}
export declare class LyCardActions implements OnInit {
    private el;
    private renderer;
    private card;
    disableActionSpacing: boolean;
    constructor(el: ElementRef, renderer: Renderer2, card: LyCard);
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LyCardActions, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LyCardActions, "ly-card-actions", never, { "disableActionSpacing": "disableActionSpacing"; }, {}, never>;
}
/**
 * @dynamic
 */
export declare class LyCardMedia implements WithStyles, OnInit {
    readonly sRenderer: StyleRenderer;
    /**
     * Aspect ratio
     *
     * e.g:
     * 4:3
     * 1:1
     */
    set ratio(val: string);
    get ratio(): string;
    constructor(sRenderer: StyleRenderer, card: LyCard);
    static readonly и = "LyCardMedia";
    static readonly $priority = -1;
    static ngAcceptInputType_bgImg: string;
    private _ratio;
    bgImg: string;
    [0x2]: string;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LyCardMedia, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LyCardMedia, "ly-card-media", never, { "ratio": "ratio"; "bgImg": "bgImg"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiY2FyZC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgTmdab25lLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEx5VGhlbWUyLCBUaGVtZVZhcmlhYmxlcywgU3R5bGVDb2xsZWN0aW9uLCBMeUNsYXNzZXMsIFN0eWxlVGVtcGxhdGUsIFRoZW1lUmVmLCBTdHlsZVJlbmRlcmVyLCBXaXRoU3R5bGVzIH0gZnJvbSAnQGFseWxlL3VpJztcbmltcG9ydCB7IFBsYXRmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BsYXRmb3JtJztcbmV4cG9ydCBpbnRlcmZhY2UgTHlDYXJkVGhlbWUge1xuICAgIC8qKiBTdHlsZXMgZm9yIENhcmQgQ29tcG9uZW50ICovXG4gICAgcm9vdD86IFN0eWxlQ29sbGVjdGlvbjwoKGNsYXNzZXM6IEx5Q2xhc3Nlczx0eXBlb2YgU1RZTEVTPikgPT4gU3R5bGVUZW1wbGF0ZSk+IHwgKChjbGFzc2VzOiBMeUNsYXNzZXM8dHlwZW9mIFNUWUxFUz4pID0+IFN0eWxlVGVtcGxhdGUpO1xufVxuZXhwb3J0IGludGVyZmFjZSBMeUNhcmRWYXJpYWJsZXMge1xuICAgIGNhcmQ/OiBMeUNhcmRUaGVtZTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFNUWUxFUzogKHRoZW1lOiBUaGVtZVZhcmlhYmxlcyAmIEx5Q2FyZFZhcmlhYmxlcywgcmVmOiBUaGVtZVJlZikgPT4ge1xuICAgICRwcmlvcml0eTogbnVtYmVyO1xuICAgICRuYW1lOiBzdHJpbmc7XG4gICAgcm9vdDogKCkgPT4gKGNsYXNzTmFtZTogc3RyaW5nKSA9PiBzdHJpbmc7XG4gICAgYmdJbWc6IChjbGFzc05hbWU6IHN0cmluZykgPT4gc3RyaW5nO1xuICAgIGNvbnRlbnQ6IChjbGFzc05hbWU6IHN0cmluZykgPT4gc3RyaW5nO1xuICAgIGFjdGlvbnM6IChjbGFzc05hbWU6IHN0cmluZykgPT4gc3RyaW5nO1xuICAgIGFjdGlvbnNJdGVtOiAoY2xhc3NOYW1lOiBzdHJpbmcpID0+IHN0cmluZztcbn07XG4vKiogQGRvY3MtcHJpdmF0ZSAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTHlDYXJkQmFzZSB7XG4gICAgX3RoZW1lOiBMeVRoZW1lMjtcbiAgICBfbmdab25lOiBOZ1pvbmU7XG4gICAgX3BsYXRmb3JtOiBQbGF0Zm9ybTtcbiAgICBjb25zdHJ1Y3RvcihfdGhlbWU6IEx5VGhlbWUyLCBfbmdab25lOiBOZ1pvbmUsIF9wbGF0Zm9ybTogUGxhdGZvcm0pO1xufVxuLyoqIEBkb2NzLXByaXZhdGUgKi9cbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEx5Q2FyZE1peGluQmFzZTogaW1wb3J0KFwiQGFseWxlL3VpL3NyYy9jb21tb24vY29uc3RydWN0b3JcIikuQ29uc3RydWN0b3I8aW1wb3J0KFwiQGFseWxlL3VpL3NyYy9jb21tb24vYnVpbGQtY29tbW9uLWJlaGF2aW9yc1wiKS5DYW5TdHlsZVVwZGF0ZXI+ICYgaW1wb3J0KFwiQGFseWxlL3VpL3NyYy9jb21tb24vY29uc3RydWN0b3JcIikuQ29uc3RydWN0b3I8aW1wb3J0KFwiQGFseWxlL3VpL3NyYy9jb21tb24vYmdcIikuQ2FuQmc+ICYgaW1wb3J0KFwiQGFseWxlL3VpL3NyYy9jb21tb24vY29uc3RydWN0b3JcIikuQ29uc3RydWN0b3I8aW1wb3J0KFwiQGFseWxlL3VpL3NyYy9jb21tb24vY29sb3JcIikuQ2FuQ29sb3I+ICYgaW1wb3J0KFwiQGFseWxlL3VpL3NyYy9jb21tb24vY29uc3RydWN0b3JcIikuQ29uc3RydWN0b3I8aW1wb3J0KFwiQGFseWxlL3VpL3NyYy9jb21tb24vcmFpc2VkXCIpLkNhblJhaXNlZD4gJiBpbXBvcnQoXCJAYWx5bGUvdWkvc3JjL2NvbW1vbi9jb25zdHJ1Y3RvclwiKS5Db25zdHJ1Y3RvcjxpbXBvcnQoXCJAYWx5bGUvdWkvYWx5bGUtdWlcIikuQ2FuRGlzYWJsZT4gJiBpbXBvcnQoXCJAYWx5bGUvdWkvc3JjL2NvbW1vbi9jb25zdHJ1Y3RvclwiKS5Db25zdHJ1Y3RvcjxpbXBvcnQoXCJAYWx5bGUvdWkvc3JjL2NvbW1vbi9vdXRsaW5lZFwiKS5DYW5PdXRsaW5lZD4gJiBpbXBvcnQoXCJAYWx5bGUvdWkvc3JjL2NvbW1vbi9jb25zdHJ1Y3RvclwiKS5Db25zdHJ1Y3RvcjxpbXBvcnQoXCJAYWx5bGUvdWkvc3JjL2NvbW1vbi9lbGV2YXRpb25cIikuQ2FuRWxldmF0aW9uPiAmIGltcG9ydChcIkBhbHlsZS91aS9zcmMvY29tbW9uL2NvbnN0cnVjdG9yXCIpLkNvbnN0cnVjdG9yPGltcG9ydChcIkBhbHlsZS91aS9zcmMvY29tbW9uL3NoYWRvdy1jb2xvclwiKS5DYW5TaGFkb3dDb2xvcj4gJiBpbXBvcnQoXCJAYWx5bGUvdWkvc3JjL2NvbW1vbi9jb25zdHJ1Y3RvclwiKS5Db25zdHJ1Y3RvcjxpbXBvcnQoXCJAYWx5bGUvdWkvc3JjL2NvbW1vbi9kaXNhYmxlLXJpcHBsZVwiKS5DYW5EaXNhYmxlUmlwcGxlPiAmIHR5cGVvZiBMeUNhcmRCYXNlO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTHlDYXJkIGV4dGVuZHMgTHlDYXJkTWl4aW5CYXNlIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSB0aGVtZTtcbiAgICBwcml2YXRlIF9lbDtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHN0YXRpYyByZWFkb25seSDQuCA9IFwiTHlDYXJkXCI7XG4gICAgLyoqXG4gICAgICogc3R5bGVzXG4gICAgICogQGRvY3MtcHJpdmF0ZVxuICAgICAqL1xuICAgIHJlYWRvbmx5IGNsYXNzZXM6IFBpY2s8e1xuICAgICAgICAkcHJpb3JpdHk6IHN0cmluZztcbiAgICAgICAgJG5hbWU6IHN0cmluZztcbiAgICAgICAgcm9vdDogc3RyaW5nO1xuICAgICAgICBiZ0ltZzogc3RyaW5nO1xuICAgICAgICBjb250ZW50OiBzdHJpbmc7XG4gICAgICAgIGFjdGlvbnM6IHN0cmluZztcbiAgICAgICAgYWN0aW9uc0l0ZW06IHN0cmluZztcbiAgICB9LCBcInJvb3RcIiB8IFwiYmdJbWdcIiB8IFwiY29udGVudFwiIHwgXCJhY3Rpb25zXCIgfCBcImFjdGlvbnNJdGVtXCI+O1xuICAgIGNvbnN0cnVjdG9yKHRoZW1lOiBMeVRoZW1lMiwgX2VsOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBuZ1pvbmU6IE5nWm9uZSwgcGxhdGZvcm06IFBsYXRmb3JtKTtcbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEx5Q2FyZENvbnRlbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByaXZhdGUgZWw7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIGNhcmQ7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGNhcmQ6IEx5Q2FyZCk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEx5Q2FyZEFjdGlvbnMgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByaXZhdGUgZWw7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIGNhcmQ7XG4gICAgZGlzYWJsZUFjdGlvblNwYWNpbmc6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGNhcmQ6IEx5Q2FyZCk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbn1cbi8qKlxuICogQGR5bmFtaWNcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTHlDYXJkTWVkaWEgaW1wbGVtZW50cyBXaXRoU3R5bGVzLCBPbkluaXQge1xuICAgIHJlYWRvbmx5IHNSZW5kZXJlcjogU3R5bGVSZW5kZXJlcjtcbiAgICAvKipcbiAgICAgKiBBc3BlY3QgcmF0aW9cbiAgICAgKlxuICAgICAqIGUuZzpcbiAgICAgKiA0OjNcbiAgICAgKiAxOjFcbiAgICAgKi9cbiAgICBzZXQgcmF0aW8odmFsOiBzdHJpbmcpO1xuICAgIGdldCByYXRpbygpOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3Ioc1JlbmRlcmVyOiBTdHlsZVJlbmRlcmVyLCBjYXJkOiBMeUNhcmQpO1xuICAgIHN0YXRpYyByZWFkb25seSDQuCA9IFwiTHlDYXJkTWVkaWFcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgJHByaW9yaXR5ID0gLTE7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX2JnSW1nOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBfcmF0aW87XG4gICAgYmdJbWc6IHN0cmluZztcbiAgICBbMHgyXTogc3RyaW5nO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG59XG4iXX0=