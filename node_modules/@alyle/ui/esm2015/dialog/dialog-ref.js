import { Injectable } from '@angular/core';
import { LyOverlayRef } from '@alyle/ui';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@alyle/ui';
export class LyDialogRef {
    constructor(_overlayRef) {
        this._overlayRef = _overlayRef;
    }
    get afterOpened() {
        return this._overlayRef.componentRef.instance._afterOpened.asObservable();
    }
    get beforeClosed() {
        return this._overlayRef.componentRef.instance._beforeClosed.asObservable();
    }
    get afterClosed() {
        return this._overlayRef.componentRef.instance._afterClosed.asObservable();
    }
    /**
     * @internal
     * @docs-private
     */
    get result() {
        return this._result;
    }
    close(result) {
        const dialogContainer = this._overlayRef.componentRef.instance;
        dialogContainer._beforeClosed.next(result);
        dialogContainer._beforeClosed.complete();
        dialogContainer._startClose();
        this._result = result;
    }
}
LyDialogRef.ɵfac = function LyDialogRef_Factory(t) { return new (t || LyDialogRef)(ɵngcc0.ɵɵinject(ɵngcc1.LyOverlayRef)); };
LyDialogRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LyDialogRef, factory: LyDialogRef.ɵfac });
LyDialogRef.ctorParameters = () => [
    { type: LyOverlayRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyDialogRef, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.LyOverlayRef }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLXJlZi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbGliL2RpYWxvZy9kaWFsb2ctcmVmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFdBQVcsQ0FBQzs7O0FBSXpDLE1BQU0sT0FBTyxXQUFXO0FBQ3hCLElBd0JFLFlBQ1UsV0FBeUI7QUFDbEMsUUFEUyxnQkFBVyxHQUFYLFdBQVcsQ0FBYztBQUNyQyxJQUVFLENBQUM7QUFDSCxJQTVCRSxJQUFJLFdBQVc7QUFDakIsUUFBSSxPQUNFLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBYSxDQUFDLFFBQ2hDLENBQUMsWUFBWSxDQUFDLFlBQVksRUFBRSxDQUFDO0FBQ2xDLElBQUUsQ0FBQztBQUNILElBQUUsSUFBSSxZQUFZO0FBQ2xCLFFBQUksT0FDRSxJQUFJLENBQUMsV0FBVyxDQUFDLFlBQWEsQ0FBQyxRQUNoQyxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUNuQyxJQUFFLENBQUM7QUFDSCxJQUFFLElBQUksV0FBVztBQUNqQixRQUFJLE9BQ0UsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFhLENBQUMsUUFDaEMsQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUM7QUFDbEMsSUFBRSxDQUFDO0FBQ0gsSUFDRTtBQUNGO0FBQ0U7QUFDRSxPQUFDO0FBQ0wsSUFBRSxJQUFJLE1BQU07QUFDWixRQUFJLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztBQUN4QixJQUFFLENBQUM7QUFDSCxJQUtFLEtBQUssQ0FBQyxNQUFZO0FBQ3BCLFFBQUksTUFBTSxlQUFlLEdBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFhLENBQUMsUUFBOEIsQ0FBQztBQUMzRixRQUFJLGVBQWUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQy9DLFFBQUksZUFBZSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUM3QyxRQUFJLGVBQWUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNsQyxRQUFJLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO0FBQzFCLElBQUUsQ0FBQztBQUNIO3VDQXRDQyxVQUFVO2lHQUNUO0FBQUM7QUFDVSxZQUxKLFlBQVk7QUFBRzs7OzZFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMeU92ZXJsYXlSZWYgfSBmcm9tICdAYWx5bGUvdWknO1xuaW1wb3J0IHsgTHlEaWFsb2dDb250YWluZXIgfSBmcm9tICcuL2RpYWxvZy1jb250YWluZXIuY29tcG9uZW50JztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEx5RGlhbG9nUmVmIHtcbiAgcHJpdmF0ZSBfcmVzdWx0OiBhbnk7XG4gIGdldCBhZnRlck9wZW5lZCgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5fb3ZlcmxheVJlZi5jb21wb25lbnRSZWYhLmluc3RhbmNlIGFzIEx5RGlhbG9nQ29udGFpbmVyXG4gICAgKS5fYWZ0ZXJPcGVuZWQuYXNPYnNlcnZhYmxlKCk7XG4gIH1cbiAgZ2V0IGJlZm9yZUNsb3NlZCgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5fb3ZlcmxheVJlZi5jb21wb25lbnRSZWYhLmluc3RhbmNlIGFzIEx5RGlhbG9nQ29udGFpbmVyXG4gICAgKS5fYmVmb3JlQ2xvc2VkLmFzT2JzZXJ2YWJsZSgpO1xuICB9XG4gIGdldCBhZnRlckNsb3NlZCgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgdGhpcy5fb3ZlcmxheVJlZi5jb21wb25lbnRSZWYhLmluc3RhbmNlIGFzIEx5RGlhbG9nQ29udGFpbmVyXG4gICAgKS5fYWZ0ZXJDbG9zZWQuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICAvKipcbiAgICogQGludGVybmFsXG4gICAqIEBkb2NzLXByaXZhdGVcbiAgICovXG4gIGdldCByZXN1bHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Jlc3VsdDtcbiAgfVxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIF9vdmVybGF5UmVmOiBMeU92ZXJsYXlSZWZcbiAgKSB7XG5cbiAgfVxuICBjbG9zZShyZXN1bHQ/OiBhbnkpIHtcbiAgICBjb25zdCBkaWFsb2dDb250YWluZXIgPSAodGhpcy5fb3ZlcmxheVJlZi5jb21wb25lbnRSZWYhLmluc3RhbmNlIGFzIEx5RGlhbG9nQ29udGFpbmVyKTtcbiAgICBkaWFsb2dDb250YWluZXIuX2JlZm9yZUNsb3NlZC5uZXh0KHJlc3VsdCk7XG4gICAgZGlhbG9nQ29udGFpbmVyLl9iZWZvcmVDbG9zZWQuY29tcGxldGUoKTtcbiAgICBkaWFsb2dDb250YWluZXIuX3N0YXJ0Q2xvc2UoKTtcbiAgICB0aGlzLl9yZXN1bHQgPSByZXN1bHQ7XG4gIH1cbn1cbiJdfQ==