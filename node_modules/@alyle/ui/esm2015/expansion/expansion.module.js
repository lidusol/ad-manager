import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgTranscludeModule, LyExpansionIconModule } from '@alyle/ui';
import { LyAccordion } from './accordion';
import { LyExpansionPanel } from './expansion-panel';
import { LyExpansionPanelHeader } from './expansion-panel-header';
import { LyExpansionPanelContent } from './expansion-panel-content';
import { LyExpansionPanelTitle } from './expansion-panel-title';
import { LyExpansionPanelDescription } from './expansion-panel-description';
import { LyExpansionPanelAction } from './expansion-panel-action-row';
import * as ɵngcc0 from '@angular/core';
export class LyExpansionModule {
}
LyExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LyExpansionModule });
LyExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LyExpansionModule_Factory(t) { return new (t || LyExpansionModule)(); }, imports: [[
            CommonModule,
            LyExpansionIconModule,
            NgTranscludeModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LyExpansionModule, { declarations: function () { return [LyAccordion,
        LyExpansionPanel,
        LyExpansionPanelHeader,
        LyExpansionPanelContent,
        LyExpansionPanelTitle,
        LyExpansionPanelDescription,
        LyExpansionPanelAction]; }, imports: function () { return [CommonModule,
        LyExpansionIconModule,
        NgTranscludeModule]; }, exports: function () { return [LyAccordion,
        LyExpansionPanel,
        LyExpansionPanelHeader,
        LyExpansionPanelContent,
        LyExpansionPanelTitle,
        LyExpansionPanelDescription,
        LyExpansionPanelAction]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyExpansionModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    LyAccordion,
                    LyExpansionPanel,
                    LyExpansionPanelHeader,
                    LyExpansionPanelContent,
                    LyExpansionPanelTitle,
                    LyExpansionPanelDescription,
                    LyExpansionPanelAction
                ],
                imports: [
                    CommonModule,
                    LyExpansionIconModule,
                    NgTranscludeModule
                ],
                exports: [
                    LyAccordion,
                    LyExpansionPanel,
                    LyExpansionPanelHeader,
                    LyExpansionPanelContent,
                    LyExpansionPanelTitle,
                    LyExpansionPanelDescription,
                    LyExpansionPanelAction
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbGliL2V4cGFuc2lvbi9leHBhbnNpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxxQkFBcUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUV0RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzVFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQTJCdEUsTUFBTSxPQUFPLGlCQUFpQjtBQUFHOzZDQXpCaEMsUUFBUSxTQUFDO0NBQ1IsWUFBWSxFQUFFLHNCQUNaLFdBQVcsc0JBQ1gsZ0JBQWdCLHNCQUNoQixzQkFBc0Isc0JBQ3RCO3FCQUF1QjtpQkFDdkI7R0FBcUIsc0JBQ3JCOztNQUEyQixzQkFDM0Isc0JBQXNCLGtCQUN2QixrQkFDRCxPQUFPLEVBQUUsc0JBQ1AsWUFBWSxzQkFDWjtVQUFxQjtNQUNyQixrQkFBa0I7VUFDbkIsa0JBQ0Q7RUFBTyxFQUFFLHNCQUNQO01BQVcsc0JBQ1g7T0FBZ0Isc0JBQ2hCLHNCQUFzQixzQkFDdEI7ZUFBdUI7TUFDdkIscUJBQXFCLHNCQUNyQjtBQUEyQixzQkFDM0I7a0JBQXNCO0lBQ3ZCLGNBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdUcmFuc2NsdWRlTW9kdWxlLCBMeUV4cGFuc2lvbkljb25Nb2R1bGUgfSBmcm9tICdAYWx5bGUvdWknO1xuXG5pbXBvcnQgeyBMeUFjY29yZGlvbiB9IGZyb20gJy4vYWNjb3JkaW9uJztcbmltcG9ydCB7IEx5RXhwYW5zaW9uUGFuZWwgfSBmcm9tICcuL2V4cGFuc2lvbi1wYW5lbCc7XG5pbXBvcnQgeyBMeUV4cGFuc2lvblBhbmVsSGVhZGVyIH0gZnJvbSAnLi9leHBhbnNpb24tcGFuZWwtaGVhZGVyJztcbmltcG9ydCB7IEx5RXhwYW5zaW9uUGFuZWxDb250ZW50IH0gZnJvbSAnLi9leHBhbnNpb24tcGFuZWwtY29udGVudCc7XG5pbXBvcnQgeyBMeUV4cGFuc2lvblBhbmVsVGl0bGUgfSBmcm9tICcuL2V4cGFuc2lvbi1wYW5lbC10aXRsZSc7XG5pbXBvcnQgeyBMeUV4cGFuc2lvblBhbmVsRGVzY3JpcHRpb24gfSBmcm9tICcuL2V4cGFuc2lvbi1wYW5lbC1kZXNjcmlwdGlvbic7XG5pbXBvcnQgeyBMeUV4cGFuc2lvblBhbmVsQWN0aW9uIH0gZnJvbSAnLi9leHBhbnNpb24tcGFuZWwtYWN0aW9uLXJvdyc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIEx5QWNjb3JkaW9uLFxuICAgIEx5RXhwYW5zaW9uUGFuZWwsXG4gICAgTHlFeHBhbnNpb25QYW5lbEhlYWRlcixcbiAgICBMeUV4cGFuc2lvblBhbmVsQ29udGVudCxcbiAgICBMeUV4cGFuc2lvblBhbmVsVGl0bGUsXG4gICAgTHlFeHBhbnNpb25QYW5lbERlc2NyaXB0aW9uLFxuICAgIEx5RXhwYW5zaW9uUGFuZWxBY3Rpb25cbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBMeUV4cGFuc2lvbkljb25Nb2R1bGUsXG4gICAgTmdUcmFuc2NsdWRlTW9kdWxlXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBMeUFjY29yZGlvbixcbiAgICBMeUV4cGFuc2lvblBhbmVsLFxuICAgIEx5RXhwYW5zaW9uUGFuZWxIZWFkZXIsXG4gICAgTHlFeHBhbnNpb25QYW5lbENvbnRlbnQsXG4gICAgTHlFeHBhbnNpb25QYW5lbFRpdGxlLFxuICAgIEx5RXhwYW5zaW9uUGFuZWxEZXNjcmlwdGlvbixcbiAgICBMeUV4cGFuc2lvblBhbmVsQWN0aW9uXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTHlFeHBhbnNpb25Nb2R1bGUgeyB9XG4iXX0=