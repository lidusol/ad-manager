import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LyImageCropper } from './image-cropper';
import { LyCropperArea } from './image-cropper-area';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export class LyImageCropperModule {
}
LyImageCropperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LyImageCropperModule });
LyImageCropperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LyImageCropperModule_Factory(t) { return new (t || LyImageCropperModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LyImageCropperModule, { declarations: function () { return [LyImageCropper, LyCropperArea]; }, imports: function () { return [CommonModule]; }, exports: function () { return [LyImageCropper]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyImageCropperModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [LyImageCropper],
                declarations: [LyImageCropper, LyCropperArea]
            }]
    }], null, null); })();
ɵngcc0.ɵɵsetComponentScope(LyImageCropper, [ɵngcc1.NgClass, ɵngcc1.NgComponentOutlet, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgStyle, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, ɵngcc1.NgPlural, ɵngcc1.NgPluralCase, LyImageCropper, LyCropperArea], [ɵngcc1.AsyncPipe, ɵngcc1.UpperCasePipe, ɵngcc1.LowerCasePipe, ɵngcc1.JsonPipe, ɵngcc1.SlicePipe, ɵngcc1.DecimalPipe, ɵngcc1.PercentPipe, ɵngcc1.TitleCasePipe, ɵngcc1.CurrencyPipe, ɵngcc1.DatePipe, ɵngcc1.I18nPluralPipe, ɵngcc1.I18nSelectPipe, ɵngcc1.KeyValuePipe]);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2UtY3JvcHBlci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9pbWFnZS1jcm9wcGVyL2ltYWdlLWNyb3BwZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRy9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7OztBQU9yRCxNQUFNLE9BQU8sb0JBQW9CO0FBQUc7Z0RBTG5DLFFBQVEsU0FBQyxrQkFDUjtLQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsa0JBQ3ZCLE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQyxrQkFDekIsWUFBWSxFQUFFLENBQUMsY0FBYyxFQUFFLGFBQWEsQ0FBQyxjQUM5Qzs7Ozs7Ozs7OzswaUJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5cbmltcG9ydCB7IEx5SW1hZ2VDcm9wcGVyIH0gZnJvbSAnLi9pbWFnZS1jcm9wcGVyJztcbmltcG9ydCB7IEx5Q3JvcHBlckFyZWEgfSBmcm9tICcuL2ltYWdlLWNyb3BwZXItYXJlYSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBleHBvcnRzOiBbTHlJbWFnZUNyb3BwZXJdLFxuICBkZWNsYXJhdGlvbnM6IFtMeUltYWdlQ3JvcHBlciwgTHlDcm9wcGVyQXJlYV1cbn0pXG5leHBvcnQgY2xhc3MgTHlJbWFnZUNyb3BwZXJNb2R1bGUgeyB9XG4iXX0=