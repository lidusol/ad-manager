import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { LyCommonModule } from '@alyle/ui';
import { LySlider } from './slider';
import { LyMark } from './mark';
import { LyTick } from './tick';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@alyle/ui';
export class LySliderModule {
}
LySliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LySliderModule });
LySliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LySliderModule_Factory(t) { return new (t || LySliderModule)(); }, imports: [[
            CommonModule,
            LyCommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LySliderModule, { declarations: function () { return [LySlider, LyMark, LyTick]; }, imports: function () { return [CommonModule,
        LyCommonModule]; }, exports: function () { return [LySlider, LyMark]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LySliderModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    LyCommonModule
                ],
                declarations: [LySlider, LyMark, LyTick],
                exports: [LySlider, LyMark]
            }]
    }], null, null); })();
ɵngcc0.ɵɵsetComponentScope(LySlider, [ɵngcc1.NgClass, ɵngcc1.NgComponentOutlet, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgStyle, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, ɵngcc1.NgPlural, ɵngcc1.NgPluralCase, ɵngcc2.LyStyle, ɵngcc2.ɵa, ɵngcc2.LyPaper, LySlider, LyMark, LyTick], [ɵngcc1.AsyncPipe, ɵngcc1.UpperCasePipe, ɵngcc1.LowerCasePipe, ɵngcc1.JsonPipe, ɵngcc1.SlicePipe, ɵngcc1.DecimalPipe, ɵngcc1.PercentPipe, ɵngcc1.TitleCasePipe, ɵngcc1.CurrencyPipe, ɵngcc1.DatePipe, ɵngcc1.I18nPluralPipe, ɵngcc1.I18nSelectPipe, ɵngcc1.KeyValuePipe]);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbGliL3NsaWRlci9zbGlkZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDM0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNwQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxRQUFRLENBQUM7Ozs7QUFVaEMsTUFBTSxPQUFPLGNBQWM7QUFBRzswQ0FSN0IsUUFBUSxTQUFDO0lBQ1IsT0FBTyxFQUFFLHNCQUNQLFlBQVksc0JBQ1osY0FBYyxrQkFDZixrQkFDRCxZQUFZLEVBQUUsQ0FBQyxRQUFRLEVBQUU7S0FBTSxFQUFFLE1BQU0sQ0FBQztNQUN4QyxPQUFPLEVBQUUsQ0FBQyxRQUFRLEVBQUU7S0FBTSxDQUFDO0tBQzVCOzs7Ozs7Ozs7Ozs7OzBrQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBMeUNvbW1vbk1vZHVsZSB9IGZyb20gJ0BhbHlsZS91aSc7XG5pbXBvcnQgeyBMeVNsaWRlciB9IGZyb20gJy4vc2xpZGVyJztcbmltcG9ydCB7IEx5TWFyayB9IGZyb20gJy4vbWFyayc7XG5pbXBvcnQgeyBMeVRpY2sgfSBmcm9tICcuL3RpY2snO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEx5Q29tbW9uTW9kdWxlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW0x5U2xpZGVyLCBMeU1hcmssIEx5VGlja10sXG4gIGV4cG9ydHM6IFtMeVNsaWRlciwgTHlNYXJrXVxufSlcbmV4cG9ydCBjbGFzcyBMeVNsaWRlck1vZHVsZSB7IH1cbiJdfQ==