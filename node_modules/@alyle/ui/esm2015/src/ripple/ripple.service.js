import { Injectable } from '@angular/core';
import { LY_COMMON_STYLES_DEPRECATED } from '../styles/core-styles';
import { LyTheme2 } from '../theme/theme2.service';
import * as i0 from "@angular/core";
import * as i1 from "../theme/theme2.service";
import * as ɵngcc0 from '@angular/core';
export const styles = (theme) => ({
    rippleContainer: {
        position: 'absolute',
        width: '2px',
        height: '2px',
        background: 'currentColor',
        opacity: '.2',
        borderRadius: '50%',
        transform: 'scale(0)',
        transition: `opacity ${theme.ripple.transition.opacity},transform ${theme.ripple.transition.transform}`,
        pointerEvents: 'none'
    },
    container: Object.assign(Object.assign({}, LY_COMMON_STYLES_DEPRECATED.fill), { overflow: 'hidden', pointerEvents: 'none', borderRadius: 'inherit' })
});
export class LyRippleService {
    constructor(theme) {
        this.theme = theme;
        this.classes = this.theme.addStyleSheet(styles);
    }
}
LyRippleService.ɵfac = function LyRippleService_Factory(t) { return new (t || LyRippleService)(ɵngcc0.ɵɵinject(LyTheme2)); };
LyRippleService.ɵprov = i0.ɵɵdefineInjectable({ factory: function LyRippleService_Factory() { return new LyRippleService(i0.ɵɵinject(i1.LyTheme2)); }, token: LyRippleService, providedIn: "root" });
LyRippleService.ctorParameters = () => [
    { type: LyTheme2 }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LyRippleService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: LyTheme2 }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmlwcGxlLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYi9zcmMvcmlwcGxlL3JpcHBsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ25EO0FBQ29DOztBQUFwQyxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsQ0FBQyxLQUFxQixFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ2xELElBQUUsZUFBZSxFQUFFO0FBQ25CLFFBQUksUUFBUSxFQUFFLFVBQVU7QUFDeEIsUUFBSSxLQUFLLEVBQUUsS0FBSztBQUNoQixRQUFJLE1BQU0sRUFBRSxLQUFLO0FBQ2pCLFFBQUksVUFBVSxFQUFFLGNBQWM7QUFDOUIsUUFBSSxPQUFPLEVBQUUsSUFBSTtBQUNqQixRQUFJLFlBQVksRUFBRSxLQUFLO0FBQ3ZCLFFBQUksU0FBUyxFQUFFLFVBQVU7QUFDekIsUUFBSSxVQUFVLEVBQUUsV0FBVyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLGNBQWMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsU0FDNUYsRUFBRTtBQUNOLFFBQUksYUFBYSxFQUFFLE1BQU07QUFDekIsS0FBRztBQUNILElBQUUsU0FBUyxrQ0FDSiwyQkFBMkIsQ0FBQyxJQUFJLEtBQ25DLFFBQVEsRUFBRSxRQUFRLEVBQ2xCLGFBQWEsRUFBRSxNQUFNLEVBQ3JCLFlBQVksRUFBRSxTQUFTLEdBQ3hCO0FBQ0gsQ0FBQyxDQUFDLENBQUM7QUFLSCxNQUFNLE9BQU8sZUFBZTtBQUM1QixJQUNFLFlBQ1UsS0FBZTtBQUN4QixRQURTLFVBQUssR0FBTCxLQUFLLENBQVU7QUFDM0IsUUFIRSxZQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDN0MsSUFFTSxDQUFDO0FBQ1A7NkhBQ0E7QUFBQyxxTUFOSTtBQUFDO0VBSEwsVUFBVSxTQUFDLHJCQUlJLFlBM0JQLFFBQVE7QUFBRzthQXdCbEIsVUFBVSxFQUFFLE1BQU0sY0FDbkI7Ozs7O2tFQXpCcUI7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRoZW1lVmFyaWFibGVzIH0gZnJvbSAnLi4vdGhlbWUvdGhlbWUtY29uZmlnJztcbmltcG9ydCB7IExZX0NPTU1PTl9TVFlMRVNfREVQUkVDQVRFRCB9IGZyb20gJy4uL3N0eWxlcy9jb3JlLXN0eWxlcyc7XG5pbXBvcnQgeyBMeVRoZW1lMiB9IGZyb20gJy4uL3RoZW1lL3RoZW1lMi5zZXJ2aWNlJztcblxuZXhwb3J0IGNvbnN0IHN0eWxlcyA9ICh0aGVtZTogVGhlbWVWYXJpYWJsZXMpID0+ICh7XG4gIHJpcHBsZUNvbnRhaW5lcjoge1xuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHdpZHRoOiAnMnB4JyxcbiAgICBoZWlnaHQ6ICcycHgnLFxuICAgIGJhY2tncm91bmQ6ICdjdXJyZW50Q29sb3InLFxuICAgIG9wYWNpdHk6ICcuMicsXG4gICAgYm9yZGVyUmFkaXVzOiAnNTAlJyxcbiAgICB0cmFuc2Zvcm06ICdzY2FsZSgwKScsXG4gICAgdHJhbnNpdGlvbjogYG9wYWNpdHkgJHt0aGVtZS5yaXBwbGUudHJhbnNpdGlvbi5vcGFjaXR5fSx0cmFuc2Zvcm0gJHt0aGVtZS5yaXBwbGUudHJhbnNpdGlvbi50cmFuc2Zvcm1cbiAgICB9YCxcbiAgICBwb2ludGVyRXZlbnRzOiAnbm9uZSdcbiAgfSxcbiAgY29udGFpbmVyOiB7XG4gICAgLi4uTFlfQ09NTU9OX1NUWUxFU19ERVBSRUNBVEVELmZpbGwsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICBib3JkZXJSYWRpdXM6ICdpbmhlcml0J1xuICB9XG59KTtcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTHlSaXBwbGVTZXJ2aWNlIHtcbiAgY2xhc3NlcyA9IHRoaXMudGhlbWUuYWRkU3R5bGVTaGVldChzdHlsZXMpO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRoZW1lOiBMeVRoZW1lMlxuICApIHsgfVxuXG59XG4iXX0=