import { shadowBuilder, StyleCollection, mergeThemes } from '@alyle/ui';
import { MinimaBase } from './base';
import { color, Color } from '@alyle/ui/color';
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
const contrast = new Color(0xffffff);
const shadow = new Color(0, 0, 0, 1);
export class MinimaDark extends MinimaBase {
    constructor() {
        super(...arguments);
        this.name = 'minima-dark';
        this.primary = {
            default: color(0x1DE9B6),
            contrast: new Color(0, 0, 0, 0.87)
        };
        this.accent = {
            default: new Color(0x9C27B0),
            contrast
        };
        this.warn = {
            default: new Color(0xEA404C),
            contrast
        };
        this.disabled = {
            default: new Color(255, 255, 255, 0.3),
            contrast: new Color(255, 255, 255, 0.5)
        };
        this.action = {
            default: new Color(255, 255, 255, 0.70),
            contrast: new Color(0, 0, 0, 0.87)
        };
        this.background = {
            default: new Color(0x303030),
            primary: {
                default: new Color(0x242424),
                shadow
            },
            secondary: new Color(47, 47, 47),
            tertiary: new Color(65, 65, 65),
        };
        this.hover = new Color(255, 255, 255, 0.04);
        this.paper = {
            default: new Color(0x242424),
            shadow
        };
        this.text = {
            default: new Color(0xffffff),
            primary: new Color(0xffffff),
            secondary: new Color(255, 255, 255, 0.70),
            disabled: new Color(255, 255, 255, 0.50),
            hint: new Color(255, 255, 255, 0.50),
            dark: new Color(0x2b2b2b),
            light: new Color(0xffffff)
        };
        this.drawer = {
            backdrop: new Color(49, 49, 49, .6)
        };
        this.bar = new Color(0x212121);
        this.divider = new Color(255, 255, 255, 0.12);
        this.colorShadow = shadow;
        this.shadow = shadow;
        this.field = mergeThemes(this.field, {
            root: new StyleCollection(_ => (className) => `${className} ${_.container}:after,${className} ${_.fieldset},${className} ${_.labelContainer}{border-color:${new Color(255, 255, 255, 0.12)};}${className} ${_.label},${className} ${_.placeholder}{color:${new Color(255, 255, 255, 0.4)};}`),
            appearance: {
                filled: _ => (className) => `${className} ${_.container}{background-color:${new Color(255, 255, 255, 0.04)};}`
            }
        });
        this.snackBar = {
            root: new StyleCollection((className) => `${className}{background:${new Color(0xfafafa)};color:${new Color(0, 0, 0, .87)};box-shadow:${shadowBuilder(4, new Color(0xfafafa))};}`)
        };
        this.tooltip = {
            root: new StyleCollection(() => (className) => `${className}{background:${new Color(250, 250, 250, 0.85)};color:${new Color(0, 0, 0, .87)};}`)
        };
        this.menu = {
            root: new StyleCollection(__ => (className) => `${className} ${__.item} ly-icon,${className} ${__.itemSubMenuTrigger}:after{color:${color(0xffffff)};}`)
        };
    }
}
MinimaDark.ɵfac = function MinimaDark_Factory(t) { return ɵMinimaDark_BaseFactory(t || MinimaDark); };
MinimaDark.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MinimaDark, factory: MinimaDark.ɵfac });
const ɵMinimaDark_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MinimaDark);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinimaDark, [{
        type: Injectable
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,