import { ElementRef, OnInit, Renderer2 } from '@angular/core';
import { ThemeVariables, LyTheme2, ThemeRef, LyClasses, StyleTemplate } from '@alyle/ui';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export interface ExpansionConfig {
    root?: (classes: LyClasses<typeof STYLES>) => StyleTemplate;
    defaultConfig?: {
        appearance?: keyof ExpansionConfig['appearance'];
    };
    appearance: {
        popOut: (classes: LyClasses<typeof STYLES>) => StyleTemplate;
    };
}
export interface ExpansionVariables {
    expansion?: ExpansionConfig;
}
export declare const STYLES: (theme: ThemeVariables & ExpansionVariables, ref: ThemeRef) => {
    $priority: number;
    $name: string;
    $global: () => (className: string) => string;
    root: () => StyleTemplate;
    panel: () => (className: string) => string;
    panelHeader: () => (className: string) => string;
    panelHeaderContent: (className: string) => string;
    panelContent: (className: string) => string;
    panelBody: (className: string) => string;
    panelTitle: (className: string) => string;
    panelDescription: (className: string) => string;
    panelActionRow: (className: string) => string;
    expanded: () => (className: string) => string;
    disabled: (className: string) => string;
};
export declare class LyAccordion implements OnInit {
    private _theme;
    private _renderer;
    private _el;
    /** @docs-private */
    static readonly и = "LyAccordion";
    /** @docs-private */
    readonly classes: Pick<{
        $priority: string;
        $name: string;
        $global: string;
        root: string;
        panel: string;
        panelHeader: string;
        panelHeaderContent: string;
        panelContent: string;
        panelBody: string;
        panelTitle: string;
        panelDescription: string;
        panelActionRow: string;
        expanded: string;
        disabled: string;
    }, "root" | "panel" | "panelHeader" | "panelHeaderContent" | "panelContent" | "panelBody" | "panelTitle" | "panelDescription" | "panelActionRow" | "expanded" | "disabled">;
    private _appearance;
    private _multiple;
    private _hasToggle;
    private _appearanceClass;
    /** Stream that emits true/false when openAll/closeAll is triggered. */
    readonly _openCloseAllActions: Subject<boolean>;
    set appearance(val: string);
    get appearance(): string;
    set multiple(val: boolean);
    get multiple(): boolean;
    set hasToggle(val: boolean);
    get hasToggle(): boolean;
    constructor(_theme: LyTheme2, _renderer: Renderer2, _el: ElementRef);
    ngOnInit(): void;
    closeAll(): void;
    openAll(): void;
    private _openCloseAll;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LyAccordion, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LyAccordion, "ly-accordion", ["lyAccordion"], { "appearance": "appearance"; "multiple": "multiple"; "hasToggle": "hasToggle"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmQudHMiLCJzb3VyY2VzIjpbImFjY29yZGlvbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uSW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUaGVtZVZhcmlhYmxlcywgTHlUaGVtZTIsIFRoZW1lUmVmLCBMeUNsYXNzZXMsIFN0eWxlVGVtcGxhdGUgfSBmcm9tICdAYWx5bGUvdWknO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuZXhwb3J0IGludGVyZmFjZSBFeHBhbnNpb25Db25maWcge1xuICAgIHJvb3Q/OiAoY2xhc3NlczogTHlDbGFzc2VzPHR5cGVvZiBTVFlMRVM+KSA9PiBTdHlsZVRlbXBsYXRlO1xuICAgIGRlZmF1bHRDb25maWc/OiB7XG4gICAgICAgIGFwcGVhcmFuY2U/OiBrZXlvZiBFeHBhbnNpb25Db25maWdbJ2FwcGVhcmFuY2UnXTtcbiAgICB9O1xuICAgIGFwcGVhcmFuY2U6IHtcbiAgICAgICAgcG9wT3V0OiAoY2xhc3NlczogTHlDbGFzc2VzPHR5cGVvZiBTVFlMRVM+KSA9PiBTdHlsZVRlbXBsYXRlO1xuICAgIH07XG59XG5leHBvcnQgaW50ZXJmYWNlIEV4cGFuc2lvblZhcmlhYmxlcyB7XG4gICAgZXhwYW5zaW9uPzogRXhwYW5zaW9uQ29uZmlnO1xufVxuZXhwb3J0IGRlY2xhcmUgY29uc3QgU1RZTEVTOiAodGhlbWU6IFRoZW1lVmFyaWFibGVzICYgRXhwYW5zaW9uVmFyaWFibGVzLCByZWY6IFRoZW1lUmVmKSA9PiB7XG4gICAgJHByaW9yaXR5OiBudW1iZXI7XG4gICAgJG5hbWU6IHN0cmluZztcbiAgICAkZ2xvYmFsOiAoKSA9PiAoY2xhc3NOYW1lOiBzdHJpbmcpID0+IHN0cmluZztcbiAgICByb290OiAoKSA9PiBTdHlsZVRlbXBsYXRlO1xuICAgIHBhbmVsOiAoKSA9PiAoY2xhc3NOYW1lOiBzdHJpbmcpID0+IHN0cmluZztcbiAgICBwYW5lbEhlYWRlcjogKCkgPT4gKGNsYXNzTmFtZTogc3RyaW5nKSA9PiBzdHJpbmc7XG4gICAgcGFuZWxIZWFkZXJDb250ZW50OiAoY2xhc3NOYW1lOiBzdHJpbmcpID0+IHN0cmluZztcbiAgICBwYW5lbENvbnRlbnQ6IChjbGFzc05hbWU6IHN0cmluZykgPT4gc3RyaW5nO1xuICAgIHBhbmVsQm9keTogKGNsYXNzTmFtZTogc3RyaW5nKSA9PiBzdHJpbmc7XG4gICAgcGFuZWxUaXRsZTogKGNsYXNzTmFtZTogc3RyaW5nKSA9PiBzdHJpbmc7XG4gICAgcGFuZWxEZXNjcmlwdGlvbjogKGNsYXNzTmFtZTogc3RyaW5nKSA9PiBzdHJpbmc7XG4gICAgcGFuZWxBY3Rpb25Sb3c6IChjbGFzc05hbWU6IHN0cmluZykgPT4gc3RyaW5nO1xuICAgIGV4cGFuZGVkOiAoKSA9PiAoY2xhc3NOYW1lOiBzdHJpbmcpID0+IHN0cmluZztcbiAgICBkaXNhYmxlZDogKGNsYXNzTmFtZTogc3RyaW5nKSA9PiBzdHJpbmc7XG59O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTHlBY2NvcmRpb24gaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByaXZhdGUgX3RoZW1lO1xuICAgIHByaXZhdGUgX3JlbmRlcmVyO1xuICAgIHByaXZhdGUgX2VsO1xuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgc3RhdGljIHJlYWRvbmx5INC4ID0gXCJMeUFjY29yZGlvblwiO1xuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgcmVhZG9ubHkgY2xhc3NlczogUGljazx7XG4gICAgICAgICRwcmlvcml0eTogc3RyaW5nO1xuICAgICAgICAkbmFtZTogc3RyaW5nO1xuICAgICAgICAkZ2xvYmFsOiBzdHJpbmc7XG4gICAgICAgIHJvb3Q6IHN0cmluZztcbiAgICAgICAgcGFuZWw6IHN0cmluZztcbiAgICAgICAgcGFuZWxIZWFkZXI6IHN0cmluZztcbiAgICAgICAgcGFuZWxIZWFkZXJDb250ZW50OiBzdHJpbmc7XG4gICAgICAgIHBhbmVsQ29udGVudDogc3RyaW5nO1xuICAgICAgICBwYW5lbEJvZHk6IHN0cmluZztcbiAgICAgICAgcGFuZWxUaXRsZTogc3RyaW5nO1xuICAgICAgICBwYW5lbERlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgICAgIHBhbmVsQWN0aW9uUm93OiBzdHJpbmc7XG4gICAgICAgIGV4cGFuZGVkOiBzdHJpbmc7XG4gICAgICAgIGRpc2FibGVkOiBzdHJpbmc7XG4gICAgfSwgXCJyb290XCIgfCBcInBhbmVsXCIgfCBcInBhbmVsSGVhZGVyXCIgfCBcInBhbmVsSGVhZGVyQ29udGVudFwiIHwgXCJwYW5lbENvbnRlbnRcIiB8IFwicGFuZWxCb2R5XCIgfCBcInBhbmVsVGl0bGVcIiB8IFwicGFuZWxEZXNjcmlwdGlvblwiIHwgXCJwYW5lbEFjdGlvblJvd1wiIHwgXCJleHBhbmRlZFwiIHwgXCJkaXNhYmxlZFwiPjtcbiAgICBwcml2YXRlIF9hcHBlYXJhbmNlO1xuICAgIHByaXZhdGUgX211bHRpcGxlO1xuICAgIHByaXZhdGUgX2hhc1RvZ2dsZTtcbiAgICBwcml2YXRlIF9hcHBlYXJhbmNlQ2xhc3M7XG4gICAgLyoqIFN0cmVhbSB0aGF0IGVtaXRzIHRydWUvZmFsc2Ugd2hlbiBvcGVuQWxsL2Nsb3NlQWxsIGlzIHRyaWdnZXJlZC4gKi9cbiAgICByZWFkb25seSBfb3BlbkNsb3NlQWxsQWN0aW9uczogU3ViamVjdDxib29sZWFuPjtcbiAgICBzZXQgYXBwZWFyYW5jZSh2YWw6IHN0cmluZyk7XG4gICAgZ2V0IGFwcGVhcmFuY2UoKTogc3RyaW5nO1xuICAgIHNldCBtdWx0aXBsZSh2YWw6IGJvb2xlYW4pO1xuICAgIGdldCBtdWx0aXBsZSgpOiBib29sZWFuO1xuICAgIHNldCBoYXNUb2dnbGUodmFsOiBib29sZWFuKTtcbiAgICBnZXQgaGFzVG9nZ2xlKCk6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IoX3RoZW1lOiBMeVRoZW1lMiwgX3JlbmRlcmVyOiBSZW5kZXJlcjIsIF9lbDogRWxlbWVudFJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBjbG9zZUFsbCgpOiB2b2lkO1xuICAgIG9wZW5BbGwoKTogdm9pZDtcbiAgICBwcml2YXRlIF9vcGVuQ2xvc2VBbGw7XG59XG4iXX0=