import { ElementRef, Renderer2 } from '@angular/core';
import { LyAccordion } from './accordion';
import { LyExpansionPanel } from './expansion-panel';
import * as ɵngcc0 from '@angular/core';
export declare class LyExpansionPanelHeader {
    readonly _accordion: LyAccordion;
    readonly _expansionPanel: LyExpansionPanel;
    /** @docs-private */
    readonly classes: Pick<{
        $priority: string;
        $name: string;
        $global: string;
        root: string;
        panel: string;
        panelHeader: string;
        panelHeaderContent: string;
        panelContent: string;
        panelBody: string;
        panelTitle: string;
        panelDescription: string;
        panelActionRow: string;
        expanded: string;
        disabled: string;
    }, "root" | "panel" | "panelHeader" | "panelHeaderContent" | "panelContent" | "panelBody" | "panelTitle" | "panelDescription" | "panelActionRow" | "expanded" | "disabled">;
    constructor(el: ElementRef, renderer: Renderer2, _accordion: LyAccordion, _expansionPanel: LyExpansionPanel);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LyExpansionPanelHeader, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<LyExpansionPanelHeader, "ly-expansion-panel-header", never, {}, {}, never, ["ly-panel-title", "ly-panel-description", "*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5kLnRzIiwic291cmNlcyI6WyJleHBhbnNpb24tcGFuZWwtaGVhZGVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEx5QWNjb3JkaW9uIH0gZnJvbSAnLi9hY2NvcmRpb24nO1xuaW1wb3J0IHsgTHlFeHBhbnNpb25QYW5lbCB9IGZyb20gJy4vZXhwYW5zaW9uLXBhbmVsJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEx5RXhwYW5zaW9uUGFuZWxIZWFkZXIge1xuICAgIHJlYWRvbmx5IF9hY2NvcmRpb246IEx5QWNjb3JkaW9uO1xuICAgIHJlYWRvbmx5IF9leHBhbnNpb25QYW5lbDogTHlFeHBhbnNpb25QYW5lbDtcbiAgICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICAgIHJlYWRvbmx5IGNsYXNzZXM6IFBpY2s8e1xuICAgICAgICAkcHJpb3JpdHk6IHN0cmluZztcbiAgICAgICAgJG5hbWU6IHN0cmluZztcbiAgICAgICAgJGdsb2JhbDogc3RyaW5nO1xuICAgICAgICByb290OiBzdHJpbmc7XG4gICAgICAgIHBhbmVsOiBzdHJpbmc7XG4gICAgICAgIHBhbmVsSGVhZGVyOiBzdHJpbmc7XG4gICAgICAgIHBhbmVsSGVhZGVyQ29udGVudDogc3RyaW5nO1xuICAgICAgICBwYW5lbENvbnRlbnQ6IHN0cmluZztcbiAgICAgICAgcGFuZWxCb2R5OiBzdHJpbmc7XG4gICAgICAgIHBhbmVsVGl0bGU6IHN0cmluZztcbiAgICAgICAgcGFuZWxEZXNjcmlwdGlvbjogc3RyaW5nO1xuICAgICAgICBwYW5lbEFjdGlvblJvdzogc3RyaW5nO1xuICAgICAgICBleHBhbmRlZDogc3RyaW5nO1xuICAgICAgICBkaXNhYmxlZDogc3RyaW5nO1xuICAgIH0sIFwicm9vdFwiIHwgXCJwYW5lbFwiIHwgXCJwYW5lbEhlYWRlclwiIHwgXCJwYW5lbEhlYWRlckNvbnRlbnRcIiB8IFwicGFuZWxDb250ZW50XCIgfCBcInBhbmVsQm9keVwiIHwgXCJwYW5lbFRpdGxlXCIgfCBcInBhbmVsRGVzY3JpcHRpb25cIiB8IFwicGFuZWxBY3Rpb25Sb3dcIiB8IFwiZXhwYW5kZWRcIiB8IFwiZGlzYWJsZWRcIj47XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIF9hY2NvcmRpb246IEx5QWNjb3JkaW9uLCBfZXhwYW5zaW9uUGFuZWw6IEx5RXhwYW5zaW9uUGFuZWwpO1xufVxuIl19