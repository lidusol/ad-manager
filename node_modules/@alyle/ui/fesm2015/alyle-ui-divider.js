import { Directive, Input, NgModule } from '@angular/core';
import { toBoolean, StyleRenderer } from '@alyle/ui';

const STYLES = (theme) => (className) => `${className}{display:block;background-color:${theme.divider};height:1px;}`;
const ɵ0 = STYLES;
class LyDivider {
    constructor(sRenderer) {
        this.sRenderer = sRenderer;
    }
    /** Add indentation (72px) */
    set inset(val) {
        const newVal = this._inset = toBoolean(val);
        if (newVal) {
            this[0x1] = this.sRenderer.add(`${LyDivider.и}--inset`, ({ before }) => (className) => `${className}{margin-${before}:74px;}`, this[0x1]);
        }
        else {
            this.sRenderer.removeClass(this[0x1]);
        }
    }
    get inset() {
        return this._inset;
    }
    ngOnInit() {
        this.sRenderer.add(STYLES);
    }
}
LyDivider.и = 'LyDivider';
LyDivider.decorators = [
    { type: Directive, args: [{
                selector: 'ly-divider',
                providers: [
                    StyleRenderer
                ]
            },] }
];
LyDivider.ctorParameters = () => [
    { type: StyleRenderer }
];
LyDivider.propDecorators = {
    inset: [{ type: Input }]
};

class LyDividerModule {
}
LyDividerModule.decorators = [
    { type: NgModule, args: [{
                exports: [LyDivider],
                declarations: [LyDivider]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { LyDivider, LyDividerModule, ɵ0 };
//# sourceMappingURL=alyle-ui-divider.js.map
