{"version":3,"file":"alyle-ui-typography.js","sources":["../../../lib/typography/typography.directive.ts","../../../lib/typography/typography.module.ts","../../../lib/typography/alyle-ui-typography.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, Input, OnInit, OnChanges } from '@angular/core';\nimport {\n  LyTheme2,\n  toBoolean,\n  ThemeVariables,\n  mixinStyleUpdater,\n  mixinColor,\n  StyleCollection,\n  StyleTemplate,\n  st2c,\n  StyleRenderer } from '@alyle/ui';\n\nexport interface LyTypographyTheme {\n  /** Styles for Typography Component */\n  root?: StyleCollection<(() => StyleTemplate)>\n    | (() => StyleTemplate);\n  lyTyp?: {\n    [name: string]: StyleCollection<(() => StyleTemplate)>\n      | (() => StyleTemplate) | undefined\n  };\n}\n\nexport interface LyTypographyVariables {\n  typography?: LyTypographyTheme;\n}\n\nconst STYLE_PRIORITY = -1;\nexport const STYLES = (theme: ThemeVariables & LyTypographyVariables) => {\n  return {\n    $name: LyTypography.и,\n    $priority: STYLE_PRIORITY,\n    root: (className: string) => `${className}{margin:0;display:block;font-family:${theme.typography.fontFamily};}${st2c((\n        (theme.typography\n          && theme.typography.root\n          && (theme.typography.root instanceof StyleCollection\n            ? theme.typography.root.setTransformer(fn => fn()).css\n            : theme.typography.root())\n        )), `${className}`)}`,\n    gutterTop: (className: string) => `${className}{margin-top:0.35em;}`,\n    gutterBottom: (className: string) => `${className}{margin-bottom:0.35em;}`,\n    gutter: (className: string) => `${className}{margin:0.35em 0;}`\n  };\n};\n\n\n/** @docs-private */\nexport class LyTypographyBase {\n  constructor(\n    public _theme: LyTheme2\n  ) { }\n}\n\n/** @docs-private */\nexport const LyTypographyMixinBase = mixinStyleUpdater(\n    mixinColor((LyTypographyBase)));\n\n@Directive({\n  selector: `[lyTyp]`,\n  inputs: [\n    'color'\n  ],\n  providers: [\n    StyleRenderer\n  ]\n})\nexport class LyTypography extends LyTypographyMixinBase implements OnInit, OnChanges {\n  /** @docs-private */\n  static readonly и = 'LyTypography';\n  /** @docs-private */\n  readonly classes = this._theme.renderStyleSheet(STYLES);\n  private _lyTyp: string;\n  private _lyTypClass: string | null;\n\n  private _gutter: boolean;\n\n  private _gutterTop: boolean;\n\n  private _gutterBottom: boolean;\n  private _noWrap: boolean;\n  private _noWrapClass?: string;\n\n  @Input()\n  set lyTyp(val: string) {\n    if (val !== this.lyTyp) {\n      if (val) {\n        this._lyTypClass = this._createTypClass(val, this._lyTypClass);\n      } else if (this._lyTypClass) {\n        this.renderer.removeClass(this._el.nativeElement, this._lyTypClass);\n        this._lyTypClass = null;\n      }\n    }\n  }\n  get lyTyp(): string {\n    return this._lyTyp;\n  }\n\n  /** The text will truncate with an ellipsis. */\n  @Input()\n  set noWrap(val: boolean) {\n    const newValue = toBoolean(val);\n    if (newValue) {\n      this._noWrapClass = this._theme.addSimpleStyle('lyTyp.noWrap', {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      });\n      this.renderer.addClass(this._el.nativeElement, this._noWrapClass);\n    } else if (this._noWrapClass) {\n      this.renderer.removeClass(this._el.nativeElement, this._noWrapClass);\n      this._noWrapClass = undefined;\n    }\n  }\n  get noWrap(): boolean {\n    return this._noWrap;\n  }\n\n  @Input()\n  set gutter(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutter) {\n      this._gutter = newVal;\n      this.sRenderer.toggleClass(this.classes.gutter, newVal);\n    }\n  }\n  get gutter() {\n    return this._gutter;\n  }\n\n  @Input()\n  set gutterTop(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterTop) {\n      this._gutterTop = newVal;\n      this.sRenderer.toggleClass(this.classes.gutterTop, newVal);\n    }\n  }\n  get gutterTop() {\n    return this._gutterTop;\n  }\n\n  @Input()\n  set gutterBottom(val: boolean) {\n    const newVal = toBoolean(val);\n    if (newVal !== this.gutterBottom) {\n      this._gutterBottom = newVal;\n      this.sRenderer.toggleClass(this.classes.gutterBottom, newVal);\n    }\n  }\n  get gutterBottom() {\n    return this._gutterBottom;\n  }\n\n  constructor(\n    _theme: LyTheme2,\n    private _el: ElementRef,\n    private renderer: Renderer2,\n    readonly sRenderer: StyleRenderer\n  ) {\n    super(_theme);\n    this.renderer.addClass(this._el.nativeElement, this.classes.root);\n  }\n\n  ngOnInit() {\n    if ((this.gutterTop && this.gutterBottom)) {\n      throw new Error(`use '<element lyTyp gutter>' instead of '<element lyTyp gutterTop gutterBottom>'`);\n    }\n  }\n\n  ngOnChanges() {\n    this.updateStyle(this._el.nativeElement);\n  }\n\n  private _createTypClass(val: string, instance: string | null) {\n    const newKey = `k-typ:${val}`;\n\n    return this.sRenderer.add(newKey,\n      (theme: LyTypographyVariables) => {\n        if (theme.typography && theme.typography.lyTyp) {\n          const lyTyp = theme.typography.lyTyp[val];\n          if (lyTyp) {\n              return lyTyp instanceof StyleCollection\n                ? lyTyp.setTransformer((_) => _()).css\n                : lyTyp();\n            }\n        }\n        throw new Error(`Value typography.lyTyp['${val}'] not found in ThemeVariables`);\n      },\n      STYLE_PRIORITY,\n      instance,\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { LyCommonModule } from '@alyle/ui';\n\nimport { LyTypography } from './typography.directive';\n\n@NgModule({\n  exports: [LyTypography, LyCommonModule],\n  declarations: [LyTypography]\n})\nexport class LyTypographyModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}