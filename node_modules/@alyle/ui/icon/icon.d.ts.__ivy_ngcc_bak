import { ElementRef, OnChanges, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { LyIconService } from './icon.service';
import { LyTheme2, ThemeVariables, StyleRenderer } from '@alyle/ui';
import { Platform } from '@angular/cdk/platform';
export declare const STYLES: (theme: ThemeVariables) => {
    $priority: number;
    $global: (className: string) => string;
    root: () => (className: string) => string;
    loading: (className: string) => string;
    defaultIcon: (className: string) => string;
};
/** @docs-private */
export declare class LyIconBase {
    _theme: LyTheme2;
    constructor(_theme: LyTheme2);
}
/** @docs-private */
export declare const LyIconMixinBase: import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/build-common-behaviors").CanStyleUpdater> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/bg").CanBg> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/color").CanColor> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/raised").CanRaised> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/outlined").CanOutlined> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/elevation").CanElevation> & import("@alyle/ui/src/common/constructor").Constructor<import("@alyle/ui/src/common/shadow-color").CanShadowColor> & typeof LyIconBase;
export declare class LyIcon extends LyIconMixinBase implements OnChanges, OnInit, OnDestroy {
    private iconService;
    private _el;
    private _renderer;
    readonly sRenderer: StyleRenderer;
    private _platform;
    readonly classes: Pick<{
        $priority: string;
        $global: string;
        root: string;
        loading: string;
        defaultIcon: string;
    }, "root" | "loading" | "defaultIcon">;
    private _icon;
    private _fontSet;
    private _previousFontSet;
    private _currentClass;
    private _fontIcon;
    private _iconElement?;
    get icon(): string;
    set icon(val: string);
    get fontSet(): string;
    set fontSet(key: string);
    get fontIcon(): string;
    set fontIcon(key: string);
    /** @docs-private */
    get hostElement(): any;
    constructor(iconService: LyIconService, _el: ElementRef, _renderer: Renderer2, theme: LyTheme2, sRenderer: StyleRenderer, _platform: Platform);
    ngOnChanges(): void;
    private _isDefault;
    private _prepareSvgIcon;
    private _appendChild;
    private _addDefaultIcon;
    private _updateClass;
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * run only browser
     * remove current icon
     */
    private _cleanIcon;
    private _updateFontClass;
}
