import { ElementRef, NgZone, OnDestroy } from '@angular/core';
import { WithStyles, StyleRenderer } from '@alyle/ui';
import { LyImageCropper } from './image-cropper';
/**
 * @dynamic
 */
export declare class LyCropperArea implements WithStyles, OnDestroy {
    readonly sRenderer: StyleRenderer;
    readonly _elementRef: ElementRef;
    private _ngZone;
    readonly _cropper: LyImageCropper;
    readonly classes: Pick<{
        $name: string;
        $priority: string;
        root: string;
        imgContainer: string;
        overlay: string;
        area: string;
        resizer: string;
        defaultContent: string;
    }, "root" | "imgContainer" | "overlay" | "area" | "resizer" | "defaultContent">;
    private _isSliding;
    /** Keeps track of the last pointer event that was captured by the crop area. */
    private _lastPointerEvent;
    private _startPointerEvent;
    private _currentWidth;
    private _currentHeight;
    private _startAreaRect;
    private _startImgRect;
    /** Used to subscribe to global move and end events */
    protected _document: Document;
    readonly _resizer?: ElementRef;
    set resizableArea(val: boolean);
    get resizableArea(): boolean;
    private _resizableArea;
    keepAspectRatio: boolean;
    round: boolean;
    constructor(sRenderer: StyleRenderer, _elementRef: ElementRef, _ngZone: NgZone, _cropper: LyImageCropper, _document: any);
    ngOnDestroy(): void;
    private _addResizableArea;
    private _removeResizableArea;
    private _pointerDown;
    private _pointerMove;
    /** Called when the user has lifted their pointer. */
    private _pointerUp;
    /** Called when the window has lost focus. */
    private _windowBlur;
    private _bindGlobalEvents;
    /** Removes any global event listeners that we may have added. */
    private _removeGlobalEvents;
    /** Use defaultView of injected document if available or fallback to global window reference */
    private _getWindow;
}
