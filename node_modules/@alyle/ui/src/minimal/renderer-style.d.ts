import { ElementRef, Renderer2 } from '@angular/core';
import { LyTheme2, ThemeRef } from '../theme/theme2.service';
import { StyleTemplate } from '../parse';
import { LyStyles, LyClasses } from '../theme/style';
import { MediaQueryArray } from '../style-utils';
import * as ɵngcc0 from '@angular/core';
export declare class StyleRenderer {
    private _theme;
    private _renderer;
    private readonly _set;
    private _nEl;
    constructor(_theme: LyTheme2, _el: ElementRef, _renderer: Renderer2);
    /**
     * Build multiple styles and render them in the DOM.
     * @param styles Styles
     * @param applyRootClass If `applyToRoot` is `true` and the root property is defined,
     * it will automatically be added to the component.
     *
     * e.g.
     *
     * ```ts
     * const STYLES = () => ({
     *   root: lyl `{...}`, // this class will be added to the root component
     *   item: lyl `{...}`
     * })
     * ```
     *
     * Also accepts the name of a class.
     *
     * e.g.
     *
     * ```ts
     * renderSheet(STYLES, 'item')
     * ```
     */
    renderSheet<T>(styles: T & LyStyles, applyRootClass?: boolean | keyof LyClasses<T>): LyClasses<T>;
    add(style: (theme: any, ref: ThemeRef) => StyleTemplate): string;
    add(style: (theme: any, ref: ThemeRef) => StyleTemplate, priority: number): string;
    add(style: (theme: any, ref: ThemeRef) => StyleTemplate, oldClass: string): string;
    add(id: string, style: (theme: any, ref: ThemeRef) => StyleTemplate): string;
    add(style: (theme: any, ref: ThemeRef) => StyleTemplate, priority: number, oldClass: string | null): string;
    add(id: string, style: (theme: any, ref: ThemeRef) => StyleTemplate, priority: number): string;
    add(id: string, style: (theme: any, ref: ThemeRef) => StyleTemplate, oldClass: string | null): string;
    add(id: string, style: (theme: any, ref: ThemeRef) => StyleTemplate, priority: number, oldClass: string | null): string;
    render(style: (theme: any, ref: ThemeRef) => StyleTemplate): string;
    render(style: (theme: any, ref: ThemeRef) => StyleTemplate, priority: number): string;
    render(id: string, style: (theme: any, ref: ThemeRef) => StyleTemplate): string;
    render(id: string, style: (theme: any, ref: ThemeRef) => StyleTemplate, priority: number): string;
    addClass(className: string): void;
    removeClass(className?: string | null): void;
    removeClasses(rawClassVal?: string[] | null | undefined): void;
    toggleClass(className: string, enabled: boolean): void;
    updateClass(newClassName: string, oldClassName: string | null | undefined): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StyleRenderer, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<StyleRenderer>;
}
export declare type InputStyle<INPUT, C = any> = (val: Exclude<NonNullable<INPUT>, MediaQueryArray>, media: string | null, comp: C) => (((theme: any, ref: ThemeRef) => StyleTemplate) | null);
/**
 * Parameter decorator to be used for create Dynamic style together with `@Input`
 * @param style style
 * @decorator
 */
export declare function Style<INPUT = any, C = any>(style: InputStyle<INPUT, C>): (target: WithStyles, propertyKey: string, descriptor?: TypedPropertyDescriptor<INPUT> | undefined) => void;
/**
 * Parameter decorator to be used for create Dynamic style together with `@Input`
 * @param style style
 * @decorator
 */
export declare function Style<INPUT = any, C = any>(style: InputStyle<INPUT, C>, priority: number): (target: WithStyles, propertyKey: string, descriptor?: TypedPropertyDescriptor<INPUT> | undefined) => void;
/**
 * Create a responsive style for component with a key
 * @param c The component
 * @param propertyKeyConfig Style key
 * @param value value
 * @param style style template
 * @param priority priority of style
 */
export declare function createStyle<INPUT, C>(c: WithStyles, propertyKeyConfig: string | StylePropertyKey, value: INPUT, style: InputStyle<INPUT, C>, priority?: number): void;
export declare function _renderStyle<INPUT, C>(c: WithStyles, propertyKeyConfig: string | StylePropertyKey, val: string | number, media: string | null, style: InputStyle<INPUT, C>, priority?: number): void;
export interface StylePropertyKey {
    и: string;
    key: string;
}
export interface WithStyles {
    /** Style Priority, default: 0 */
    readonly $priority?: number;
    readonly sRenderer: StyleRenderer;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyZXItc3R5bGUuZC50cyIsInNvdXJjZXMiOlsicmVuZGVyZXItc3R5bGUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTHlUaGVtZTIsIFRoZW1lUmVmIH0gZnJvbSAnLi4vdGhlbWUvdGhlbWUyLnNlcnZpY2UnO1xuaW1wb3J0IHsgU3R5bGVUZW1wbGF0ZSB9IGZyb20gJy4uL3BhcnNlJztcbmltcG9ydCB7IEx5U3R5bGVzLCBMeUNsYXNzZXMgfSBmcm9tICcuLi90aGVtZS9zdHlsZSc7XG5pbXBvcnQgeyBNZWRpYVF1ZXJ5QXJyYXkgfSBmcm9tICcuLi9zdHlsZS11dGlscyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTdHlsZVJlbmRlcmVyIHtcbiAgICBwcml2YXRlIF90aGVtZTtcbiAgICBwcml2YXRlIF9yZW5kZXJlcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9zZXQ7XG4gICAgcHJpdmF0ZSBfbkVsO1xuICAgIGNvbnN0cnVjdG9yKF90aGVtZTogTHlUaGVtZTIsIF9lbDogRWxlbWVudFJlZiwgX3JlbmRlcmVyOiBSZW5kZXJlcjIpO1xuICAgIC8qKlxuICAgICAqIEJ1aWxkIG11bHRpcGxlIHN0eWxlcyBhbmQgcmVuZGVyIHRoZW0gaW4gdGhlIERPTS5cbiAgICAgKiBAcGFyYW0gc3R5bGVzIFN0eWxlc1xuICAgICAqIEBwYXJhbSBhcHBseVJvb3RDbGFzcyBJZiBgYXBwbHlUb1Jvb3RgIGlzIGB0cnVlYCBhbmQgdGhlIHJvb3QgcHJvcGVydHkgaXMgZGVmaW5lZCxcbiAgICAgKiBpdCB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgYWRkZWQgdG8gdGhlIGNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIGUuZy5cbiAgICAgKlxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgU1RZTEVTID0gKCkgPT4gKHtcbiAgICAgKiAgIHJvb3Q6IGx5bCBgey4uLn1gLCAvLyB0aGlzIGNsYXNzIHdpbGwgYmUgYWRkZWQgdG8gdGhlIHJvb3QgY29tcG9uZW50XG4gICAgICogICBpdGVtOiBseWwgYHsuLi59YFxuICAgICAqIH0pXG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBBbHNvIGFjY2VwdHMgdGhlIG5hbWUgb2YgYSBjbGFzcy5cbiAgICAgKlxuICAgICAqIGUuZy5cbiAgICAgKlxuICAgICAqIGBgYHRzXG4gICAgICogcmVuZGVyU2hlZXQoU1RZTEVTLCAnaXRlbScpXG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVuZGVyU2hlZXQ8VD4oc3R5bGVzOiBUICYgTHlTdHlsZXMsIGFwcGx5Um9vdENsYXNzPzogYm9vbGVhbiB8IGtleW9mIEx5Q2xhc3NlczxUPik6IEx5Q2xhc3NlczxUPjtcbiAgICBhZGQoc3R5bGU6ICh0aGVtZTogYW55LCByZWY6IFRoZW1lUmVmKSA9PiBTdHlsZVRlbXBsYXRlKTogc3RyaW5nO1xuICAgIGFkZChzdHlsZTogKHRoZW1lOiBhbnksIHJlZjogVGhlbWVSZWYpID0+IFN0eWxlVGVtcGxhdGUsIHByaW9yaXR5OiBudW1iZXIpOiBzdHJpbmc7XG4gICAgYWRkKHN0eWxlOiAodGhlbWU6IGFueSwgcmVmOiBUaGVtZVJlZikgPT4gU3R5bGVUZW1wbGF0ZSwgb2xkQ2xhc3M6IHN0cmluZyk6IHN0cmluZztcbiAgICBhZGQoaWQ6IHN0cmluZywgc3R5bGU6ICh0aGVtZTogYW55LCByZWY6IFRoZW1lUmVmKSA9PiBTdHlsZVRlbXBsYXRlKTogc3RyaW5nO1xuICAgIGFkZChzdHlsZTogKHRoZW1lOiBhbnksIHJlZjogVGhlbWVSZWYpID0+IFN0eWxlVGVtcGxhdGUsIHByaW9yaXR5OiBudW1iZXIsIG9sZENsYXNzOiBzdHJpbmcgfCBudWxsKTogc3RyaW5nO1xuICAgIGFkZChpZDogc3RyaW5nLCBzdHlsZTogKHRoZW1lOiBhbnksIHJlZjogVGhlbWVSZWYpID0+IFN0eWxlVGVtcGxhdGUsIHByaW9yaXR5OiBudW1iZXIpOiBzdHJpbmc7XG4gICAgYWRkKGlkOiBzdHJpbmcsIHN0eWxlOiAodGhlbWU6IGFueSwgcmVmOiBUaGVtZVJlZikgPT4gU3R5bGVUZW1wbGF0ZSwgb2xkQ2xhc3M6IHN0cmluZyB8IG51bGwpOiBzdHJpbmc7XG4gICAgYWRkKGlkOiBzdHJpbmcsIHN0eWxlOiAodGhlbWU6IGFueSwgcmVmOiBUaGVtZVJlZikgPT4gU3R5bGVUZW1wbGF0ZSwgcHJpb3JpdHk6IG51bWJlciwgb2xkQ2xhc3M6IHN0cmluZyB8IG51bGwpOiBzdHJpbmc7XG4gICAgcmVuZGVyKHN0eWxlOiAodGhlbWU6IGFueSwgcmVmOiBUaGVtZVJlZikgPT4gU3R5bGVUZW1wbGF0ZSk6IHN0cmluZztcbiAgICByZW5kZXIoc3R5bGU6ICh0aGVtZTogYW55LCByZWY6IFRoZW1lUmVmKSA9PiBTdHlsZVRlbXBsYXRlLCBwcmlvcml0eTogbnVtYmVyKTogc3RyaW5nO1xuICAgIHJlbmRlcihpZDogc3RyaW5nLCBzdHlsZTogKHRoZW1lOiBhbnksIHJlZjogVGhlbWVSZWYpID0+IFN0eWxlVGVtcGxhdGUpOiBzdHJpbmc7XG4gICAgcmVuZGVyKGlkOiBzdHJpbmcsIHN0eWxlOiAodGhlbWU6IGFueSwgcmVmOiBUaGVtZVJlZikgPT4gU3R5bGVUZW1wbGF0ZSwgcHJpb3JpdHk6IG51bWJlcik6IHN0cmluZztcbiAgICBhZGRDbGFzcyhjbGFzc05hbWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lPzogc3RyaW5nIHwgbnVsbCk6IHZvaWQ7XG4gICAgcmVtb3ZlQ2xhc3NlcyhyYXdDbGFzc1ZhbD86IHN0cmluZ1tdIHwgbnVsbCB8IHVuZGVmaW5lZCk6IHZvaWQ7XG4gICAgdG9nZ2xlQ2xhc3MoY2xhc3NOYW1lOiBzdHJpbmcsIGVuYWJsZWQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIHVwZGF0ZUNsYXNzKG5ld0NsYXNzTmFtZTogc3RyaW5nLCBvbGRDbGFzc05hbWU6IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpOiBzdHJpbmc7XG59XG5leHBvcnQgZGVjbGFyZSB0eXBlIElucHV0U3R5bGU8SU5QVVQsIEMgPSBhbnk+ID0gKHZhbDogRXhjbHVkZTxOb25OdWxsYWJsZTxJTlBVVD4sIE1lZGlhUXVlcnlBcnJheT4sIG1lZGlhOiBzdHJpbmcgfCBudWxsLCBjb21wOiBDKSA9PiAoKCh0aGVtZTogYW55LCByZWY6IFRoZW1lUmVmKSA9PiBTdHlsZVRlbXBsYXRlKSB8IG51bGwpO1xuLyoqXG4gKiBQYXJhbWV0ZXIgZGVjb3JhdG9yIHRvIGJlIHVzZWQgZm9yIGNyZWF0ZSBEeW5hbWljIHN0eWxlIHRvZ2V0aGVyIHdpdGggYEBJbnB1dGBcbiAqIEBwYXJhbSBzdHlsZSBzdHlsZVxuICogQGRlY29yYXRvclxuICovXG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBTdHlsZTxJTlBVVCA9IGFueSwgQyA9IGFueT4oc3R5bGU6IElucHV0U3R5bGU8SU5QVVQsIEM+KTogKHRhcmdldDogV2l0aFN0eWxlcywgcHJvcGVydHlLZXk6IHN0cmluZywgZGVzY3JpcHRvcj86IFR5cGVkUHJvcGVydHlEZXNjcmlwdG9yPElOUFVUPiB8IHVuZGVmaW5lZCkgPT4gdm9pZDtcbi8qKlxuICogUGFyYW1ldGVyIGRlY29yYXRvciB0byBiZSB1c2VkIGZvciBjcmVhdGUgRHluYW1pYyBzdHlsZSB0b2dldGhlciB3aXRoIGBASW5wdXRgXG4gKiBAcGFyYW0gc3R5bGUgc3R5bGVcbiAqIEBkZWNvcmF0b3JcbiAqL1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gU3R5bGU8SU5QVVQgPSBhbnksIEMgPSBhbnk+KHN0eWxlOiBJbnB1dFN0eWxlPElOUFVULCBDPiwgcHJpb3JpdHk6IG51bWJlcik6ICh0YXJnZXQ6IFdpdGhTdHlsZXMsIHByb3BlcnR5S2V5OiBzdHJpbmcsIGRlc2NyaXB0b3I/OiBUeXBlZFByb3BlcnR5RGVzY3JpcHRvcjxJTlBVVD4gfCB1bmRlZmluZWQpID0+IHZvaWQ7XG4vKipcbiAqIENyZWF0ZSBhIHJlc3BvbnNpdmUgc3R5bGUgZm9yIGNvbXBvbmVudCB3aXRoIGEga2V5XG4gKiBAcGFyYW0gYyBUaGUgY29tcG9uZW50XG4gKiBAcGFyYW0gcHJvcGVydHlLZXlDb25maWcgU3R5bGUga2V5XG4gKiBAcGFyYW0gdmFsdWUgdmFsdWVcbiAqIEBwYXJhbSBzdHlsZSBzdHlsZSB0ZW1wbGF0ZVxuICogQHBhcmFtIHByaW9yaXR5IHByaW9yaXR5IG9mIHN0eWxlXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIGNyZWF0ZVN0eWxlPElOUFVULCBDPihjOiBXaXRoU3R5bGVzLCBwcm9wZXJ0eUtleUNvbmZpZzogc3RyaW5nIHwgU3R5bGVQcm9wZXJ0eUtleSwgdmFsdWU6IElOUFVULCBzdHlsZTogSW5wdXRTdHlsZTxJTlBVVCwgQz4sIHByaW9yaXR5PzogbnVtYmVyKTogdm9pZDtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIF9yZW5kZXJTdHlsZTxJTlBVVCwgQz4oYzogV2l0aFN0eWxlcywgcHJvcGVydHlLZXlDb25maWc6IHN0cmluZyB8IFN0eWxlUHJvcGVydHlLZXksIHZhbDogc3RyaW5nIHwgbnVtYmVyLCBtZWRpYTogc3RyaW5nIHwgbnVsbCwgc3R5bGU6IElucHV0U3R5bGU8SU5QVVQsIEM+LCBwcmlvcml0eT86IG51bWJlcik6IHZvaWQ7XG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlUHJvcGVydHlLZXkge1xuICAgINC4OiBzdHJpbmc7XG4gICAga2V5OiBzdHJpbmc7XG59XG5leHBvcnQgaW50ZXJmYWNlIFdpdGhTdHlsZXMge1xuICAgIC8qKiBTdHlsZSBQcmlvcml0eSwgZGVmYXVsdDogMCAqL1xuICAgIHJlYWRvbmx5ICRwcmlvcml0eT86IG51bWJlcjtcbiAgICByZWFkb25seSBzUmVuZGVyZXI6IFN0eWxlUmVuZGVyZXI7XG59XG4iXX0=