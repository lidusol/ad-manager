import { ElementRef, SimpleChanges, OnChanges } from '@angular/core';
import { StyleRenderer, WithStyles, InputStyle } from '../minimal/renderer-style';
/**
 * @dynamic
 */
import * as ɵngcc0 from '@angular/core';
export declare class LyStyle implements WithStyles {
    readonly sRenderer: StyleRenderer;
    set size(value: string | number | null);
    constructor(sRenderer: StyleRenderer);
    /** @docs-private */
    static readonly и = "LyStyle";
    static readonly $priority = -0.5;
    static readonly with: InputStyle<string | number | null>;
    color: string | number | null;
    bg: string | number | null;
    p: string | number | null;
    pf: string | number | null;
    pe: string | number | null;
    pt: string | number | null;
    pb: string | number | null;
    px: string | number | null;
    py: string | number | null;
    m: string | number | null;
    mf: string | number | null;
    me: string | number | null;
    mt: string | number | null;
    mb: string | number | null;
    mx: string | number | null;
    my: string | number | null;
    width: string | number | null;
    maxWidth: string | number | null;
    minWidth: string | number | null;
    height: string | number | null;
    maxHeight: string | number | null;
    minHeight: string | number | null;
    display: string | null;
    flex: string | number | null;
    flexBasis: string | number | null;
    flexDirection: string | null;
    flexGrow: string | number | null;
    flexSelf: string | null;
    flexShrink: string | number | null;
    flexWrap: string | null;
    justifyContent: string | null;
    justifyItems: string | null;
    justifySelf: string | null;
    alignContent: string | null;
    alignItems: string | null;
    order: string | number | null;
    lyStyle: string | null;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LyStyle, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LyStyle, "[lyStyle],              [lyColor],              [lyP], [lyPf], [lyPe], [lyPt], [lyPb], [lyPx], [lyPy],              [lyM], [lyMf], [lyMe], [lyMt], [lyMb], [lyMx], [lyMy],              [lySize],              [lyWidth], [lyMaxWidth], [lyMinWidth],              [lyHeight], [lyMaxHeight], [lyMinHeight],              [lyDisplay],              [lyFlex],              [lyFlexBasis],              [lyFlexDirection],              [lyFlexGrow],              [lyFlexSelf],              [lyFlexShrink],              [lyFlexWrap],              [lyJustifyContent],              [lyJustifyItems],              [lyJustifySelf],              [lyAlignContent],              [lyAlignItems],              [lyOrder]", never, { "lyStyle": "lyStyle"; "color": "lyColor"; "bg": "lyBg"; "p": "lyP"; "pf": "lyPf"; "pe": "lyPe"; "pt": "lyPt"; "pb": "lyPb"; "px": "lyPx"; "py": "lyPy"; "m": "lyM"; "mf": "lyMf"; "me": "lyMe"; "mt": "lyMt"; "mb": "lyMb"; "mx": "lyMx"; "my": "lyMy"; "size": "lySize"; "width": "lyWidth"; "maxWidth": "lyMaxWidth"; "minWidth": "lyMinWidth"; "height": "lyHeight"; "maxHeight": "lyMaxHeight"; "minHeight": "lyMinHeight"; "display": "lyDisplay"; "flex": "lyFlex"; "flexBasis": "lyFlexBasis"; "flexDirection": "lyFlexDirection"; "flexGrow": "lyFlexGrow"; "flexSelf": "lyFlexSelf"; "flexShrink": "lyFlexShrink"; "flexWrap": "lyFlexWrap"; "justifyContent": "lyJustifyContent"; "justifyItems": "lyJustifyItems"; "justifySelf": "lyJustifySelf"; "alignContent": "lyAlignContent"; "alignItems": "lyAlignItems"; "order": "lyOrder"; }, {}, never>;
}
/**
 * @dynamic
 * @deprecated
 * Spacing
 * [p], [pf], [pe], [pt], [pb], [px], [py],
 * [m], [mf], [me], [mt], [mb], [mx], [my],
 * Sizing
 * [size],
 * [width], [maxWidth], [minWidth],
 * [height], [maxHeight], [minHeight],
 * Others
 * [lyStyle]
 */
export declare class LyStyleDeprecated extends LyStyle implements OnChanges {
    private _el;
    constructor(sRenderer: StyleRenderer, _el: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LyStyleDeprecated, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LyStyleDeprecated, "              [p], [pf], [pe], [pt], [pb], [px], [py],              [m], [mf], [me], [mt], [mb], [mx], [my],              [size]:not([ly-button]),              [width]:not(svg):not(canvas):not(embed):not(iframe):not(img):not(input):not(object):not(video),              [maxWidth], [minWidth],              [height]:not(svg):not(canvas):not(embed):not(iframe):not(img):not(input):not(object):not(video),              [maxHeight], [minHeight],              [display],              [flex],              [flexBasis],              [flexDirection],              [flexGrow],              [flexSelf],              [flexShrink],              [flexWrap],              [justifyContent],              [justifyItems],              [justifySelf],              [alignContent],              [alignItems],              [order]", never, { "p": "p"; "pf": "pf"; "pe": "pe"; "pt": "pt"; "pb": "pb"; "px": "px"; "py": "py"; "m": "m"; "mf": "mf"; "me": "me"; "mt": "mt"; "mb": "mb"; "mx": "mx"; "my": "my"; "size": "size"; "width": "width"; "maxWidth": "maxWidth"; "minWidth": "minWidth"; "height": "height"; "maxHeight": "maxHeight"; "minHeight": "minHeight"; "display": "display"; "flex": "flex"; "flexBasis": "flexBasis"; "flexDirection": "flexDirection"; "flexGrow": "flexGrow"; "flexSelf": "flexSelf"; "flexShrink": "flexShrink"; "flexWrap": "flexWrap"; "justifyContent": "justifyContent"; "justifyItems": "justifyItems"; "justifySelf": "justifySelf"; "alignContent": "alignContent"; "alignItems": "alignItems"; "order": "order"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbInN0eWxlLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgU2ltcGxlQ2hhbmdlcywgT25DaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdHlsZVJlbmRlcmVyLCBXaXRoU3R5bGVzLCBJbnB1dFN0eWxlIH0gZnJvbSAnLi4vbWluaW1hbC9yZW5kZXJlci1zdHlsZSc7XG4vKipcbiAqIEBkeW5hbWljXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEx5U3R5bGUgaW1wbGVtZW50cyBXaXRoU3R5bGVzIHtcbiAgICByZWFkb25seSBzUmVuZGVyZXI6IFN0eWxlUmVuZGVyZXI7XG4gICAgc2V0IHNpemUodmFsdWU6IHN0cmluZyB8IG51bWJlciB8IG51bGwpO1xuICAgIGNvbnN0cnVjdG9yKHNSZW5kZXJlcjogU3R5bGVSZW5kZXJlcik7XG4gICAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgICBzdGF0aWMgcmVhZG9ubHkg0LggPSBcIkx5U3R5bGVcIjtcbiAgICBzdGF0aWMgcmVhZG9ubHkgJHByaW9yaXR5ID0gLTAuNTtcbiAgICBzdGF0aWMgcmVhZG9ubHkgd2l0aDogSW5wdXRTdHlsZTxzdHJpbmcgfCBudW1iZXIgfCBudWxsPjtcbiAgICBjb2xvcjogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbDtcbiAgICBiZzogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbDtcbiAgICBwOiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIHBmOiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIHBlOiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIHB0OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIHBiOiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIHB4OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIHB5OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIG06IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbWY6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbWU6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbXQ6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbWI6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbXg6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbXk6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgd2lkdGg6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbWF4V2lkdGg6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgbWluV2lkdGg6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgaGVpZ2h0OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIG1heEhlaWdodDogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbDtcbiAgICBtaW5IZWlnaHQ6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgZGlzcGxheTogc3RyaW5nIHwgbnVsbDtcbiAgICBmbGV4OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIGZsZXhCYXNpczogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbDtcbiAgICBmbGV4RGlyZWN0aW9uOiBzdHJpbmcgfCBudWxsO1xuICAgIGZsZXhHcm93OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIGZsZXhTZWxmOiBzdHJpbmcgfCBudWxsO1xuICAgIGZsZXhTaHJpbms6IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG4gICAgZmxleFdyYXA6IHN0cmluZyB8IG51bGw7XG4gICAganVzdGlmeUNvbnRlbnQ6IHN0cmluZyB8IG51bGw7XG4gICAganVzdGlmeUl0ZW1zOiBzdHJpbmcgfCBudWxsO1xuICAgIGp1c3RpZnlTZWxmOiBzdHJpbmcgfCBudWxsO1xuICAgIGFsaWduQ29udGVudDogc3RyaW5nIHwgbnVsbDtcbiAgICBhbGlnbkl0ZW1zOiBzdHJpbmcgfCBudWxsO1xuICAgIG9yZGVyOiBzdHJpbmcgfCBudW1iZXIgfCBudWxsO1xuICAgIGx5U3R5bGU6IHN0cmluZyB8IG51bGw7XG59XG4vKipcbiAqIEBkeW5hbWljXG4gKiBAZGVwcmVjYXRlZFxuICogU3BhY2luZ1xuICogW3BdLCBbcGZdLCBbcGVdLCBbcHRdLCBbcGJdLCBbcHhdLCBbcHldLFxuICogW21dLCBbbWZdLCBbbWVdLCBbbXRdLCBbbWJdLCBbbXhdLCBbbXldLFxuICogU2l6aW5nXG4gKiBbc2l6ZV0sXG4gKiBbd2lkdGhdLCBbbWF4V2lkdGhdLCBbbWluV2lkdGhdLFxuICogW2hlaWdodF0sIFttYXhIZWlnaHRdLCBbbWluSGVpZ2h0XSxcbiAqIE90aGVyc1xuICogW2x5U3R5bGVdXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEx5U3R5bGVEZXByZWNhdGVkIGV4dGVuZHMgTHlTdHlsZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBfZWw7XG4gICAgY29uc3RydWN0b3Ioc1JlbmRlcmVyOiBTdHlsZVJlbmRlcmVyLCBfZWw6IEVsZW1lbnRSZWYpO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xufVxuIl19