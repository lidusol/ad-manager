import * as ɵngcc0 from '@angular/core';
var MatPagesModule_1;
import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatIconModule } from '@angular/material/icon';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatStepperModule } from '@angular/material/stepper';
import { MatTabsModule } from '@angular/material/tabs';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatPagesComponent } from './mat-pages.component';
import { MatPageLoaderComponent } from './mat-page-loader/mat-page-loader.component';
import { MatPageContentComponent } from './mat-page-content/mat-page-content.component';
import { MatPageOutlookComponent } from './mat-page-outlook/mat-page-outlook.component';
let MatPagesModule = MatPagesModule_1 = class MatPagesModule {
    static forRoot() {
        return {
            ngModule: MatPagesModule_1,
            providers: []
        };
    }
};
MatPagesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPagesModule });
MatPagesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPagesModule_Factory(t) { return new (t || MatPagesModule)(); }, imports: [[
            CommonModule,
            MatToolbarModule,
            MatTabsModule,
            MatCardModule,
            MatSidenavModule,
            MatIconModule,
            MatStepperModule,
            MatButtonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPagesModule, { declarations: function () { return [MatPagesComponent,
        MatPageLoaderComponent,
        MatPageOutlookComponent,
        MatPageContentComponent]; }, imports: function () { return [CommonModule,
        MatToolbarModule,
        MatTabsModule,
        MatCardModule,
        MatSidenavModule,
        MatIconModule,
        MatStepperModule,
        MatButtonModule]; }, exports: function () { return [MatPagesComponent,
        MatPageLoaderComponent,
        MatPageOutlookComponent,
        MatPageContentComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPagesModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    MatToolbarModule,
                    MatTabsModule,
                    MatCardModule,
                    MatSidenavModule,
                    MatIconModule,
                    MatStepperModule,
                    MatButtonModule
                ],
                exports: [
                    MatPagesComponent,
                    MatPageLoaderComponent,
                    MatPageOutlookComponent,
                    MatPageContentComponent
                ],
                declarations: [
                    MatPagesComponent,
                    MatPageLoaderComponent,
                    MatPageOutlookComponent,
                    MatPageContentComponent
                ]
            }]
    }], null, null); })();
export { MatPagesModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXBhZ2VzLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L0Bhbmd1bGFyLW1hdGVyaWFsLWV4dGVuc2lvbnMvcGFnZXMvbGliL21hdC1wYWdlcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBc0IsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzdELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUU3RCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUN4RCxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUNuRixPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwrQ0FBK0MsQ0FBQztBQUN0RixPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwrQ0FBK0MsQ0FBQztBQTRCdEYsSUFBYSxjQUFjLHNCQUEzQixNQUFhLGNBQWM7QUFDM0IsSUFBRSxNQUFNLENBQUMsT0FBTztBQUFLLFFBQ2pCLE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSxnQkFBYztBQUM5QixZQUFNLFNBQVMsRUFBRSxFQUFFO0FBQ25CLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNILENBQUMsQ0FBQTtBQVBZLGNBQWMsdUNBekIxQixRQUFRLENBQUMsVUFDUjtNQUFPLEVBQUUsY0FDUCxZQUFZLGNBQ1osZ0JBQWdCLGNBQ2hCLGFBQWEsY0FDYixhQUFhLGNBQ2I7R0FBZ0IsY0FDaEI7SUFBYSxjQUNiO0lBQWdCLGNBQ2hCO01BQWUsVUFDaEIsVUFDRDtNQUFPLEVBQ0wsY0FDRTtTQUFpQixjQUNqQjtrQkFBc0I7RUFDdEIsdUJBQXVCO1dBQ3ZCO21CQUF1QixVQUN4QixVQUNILFlBQVksRUFBRSxjQUNaLGlCQUFpQixjQUNqQixzQkFBc0IsY0FDdEIsdUJBQXVCO01BQ3ZCLHVCQUF1QjtPQUN4QixNQUNGLENBQUMsSUFDVyxjQUFjO0FBTzFCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNEO0FBQUMsU0FSWSxjQUFjO0FBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge01vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XG5pbXBvcnQgeyBNYXRDYXJkTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY2FyZCc7XG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5pbXBvcnQgeyBNYXRTaWRlbmF2TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc2lkZW5hdic7XG5pbXBvcnQgeyBNYXRTdGVwcGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc3RlcHBlcic7XG5pbXBvcnQgeyBNYXRUYWJzTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdGFicyc7XG5pbXBvcnQgeyBNYXRUb29sYmFyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdG9vbGJhcic7XG5cbmltcG9ydCB7TWF0UGFnZXNDb21wb25lbnR9IGZyb20gJy4vbWF0LXBhZ2VzLmNvbXBvbmVudCc7XG5pbXBvcnQge01hdFBhZ2VMb2FkZXJDb21wb25lbnR9IGZyb20gJy4vbWF0LXBhZ2UtbG9hZGVyL21hdC1wYWdlLWxvYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHtNYXRQYWdlQ29udGVudENvbXBvbmVudH0gZnJvbSAnLi9tYXQtcGFnZS1jb250ZW50L21hdC1wYWdlLWNvbnRlbnQuY29tcG9uZW50JztcbmltcG9ydCB7TWF0UGFnZU91dGxvb2tDb21wb25lbnR9IGZyb20gJy4vbWF0LXBhZ2Utb3V0bG9vay9tYXQtcGFnZS1vdXRsb29rLmNvbXBvbmVudCc7XG5cblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBNYXRUb29sYmFyTW9kdWxlLFxuICAgIE1hdFRhYnNNb2R1bGUsXG4gICAgTWF0Q2FyZE1vZHVsZSxcbiAgICBNYXRTaWRlbmF2TW9kdWxlLFxuICAgIE1hdEljb25Nb2R1bGUsXG4gICAgTWF0U3RlcHBlck1vZHVsZSxcbiAgICBNYXRCdXR0b25Nb2R1bGVcbiAgXSxcbiAgZXhwb3J0czpcbiAgICBbXG4gICAgICBNYXRQYWdlc0NvbXBvbmVudCxcbiAgICAgIE1hdFBhZ2VMb2FkZXJDb21wb25lbnQsXG4gICAgICBNYXRQYWdlT3V0bG9va0NvbXBvbmVudCxcbiAgICAgIE1hdFBhZ2VDb250ZW50Q29tcG9uZW50XG4gICAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTWF0UGFnZXNDb21wb25lbnQsXG4gICAgTWF0UGFnZUxvYWRlckNvbXBvbmVudCxcbiAgICBNYXRQYWdlT3V0bG9va0NvbXBvbmVudCxcbiAgICBNYXRQYWdlQ29udGVudENvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE1hdFBhZ2VzTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxNYXRQYWdlc01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTWF0UGFnZXNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtdXG4gICAgfTtcbiAgfVxufVxuIl19