var MatPagesModule_1;
import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatIconModule } from '@angular/material/icon';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatStepperModule } from '@angular/material/stepper';
import { MatTabsModule } from '@angular/material/tabs';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatPagesComponent } from './mat-pages.component';
import { MatPageLoaderComponent } from './mat-page-loader/mat-page-loader.component';
import { MatPageContentComponent } from './mat-page-content/mat-page-content.component';
import { MatPageOutlookComponent } from './mat-page-outlook/mat-page-outlook.component';
let MatPagesModule = MatPagesModule_1 = class MatPagesModule {
    static forRoot() {
        return {
            ngModule: MatPagesModule_1,
            providers: []
        };
    }
};
MatPagesModule = MatPagesModule_1 = __decorate([
    NgModule({
        imports: [
            CommonModule,
            MatToolbarModule,
            MatTabsModule,
            MatCardModule,
            MatSidenavModule,
            MatIconModule,
            MatStepperModule,
            MatButtonModule
        ],
        exports: [
            MatPagesComponent,
            MatPageLoaderComponent,
            MatPageOutlookComponent,
            MatPageContentComponent
        ],
        declarations: [
            MatPagesComponent,
            MatPageLoaderComponent,
            MatPageOutlookComponent,
            MatPageContentComponent
        ]
    })
], MatPagesModule);
export { MatPagesModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXBhZ2VzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bhbmd1bGFyLW1hdGVyaWFsLWV4dGVuc2lvbnMvcGFnZXMvIiwic291cmNlcyI6WyJsaWIvbWF0LXBhZ2VzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQXNCLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFN0QsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDeEQsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0sNkNBQTZDLENBQUM7QUFDbkYsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sK0NBQStDLENBQUM7QUFDdEYsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sK0NBQStDLENBQUM7QUE0QnRGLElBQWEsY0FBYyxzQkFBM0IsTUFBYSxjQUFjO0lBQ3pCLE1BQU0sQ0FBQyxPQUFPO1FBQ1osT0FBTztZQUNMLFFBQVEsRUFBRSxnQkFBYztZQUN4QixTQUFTLEVBQUUsRUFBRTtTQUNkLENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQTtBQVBZLGNBQWM7SUF6QjFCLFFBQVEsQ0FBQztRQUNSLE9BQU8sRUFBRTtZQUNQLFlBQVk7WUFDWixnQkFBZ0I7WUFDaEIsYUFBYTtZQUNiLGFBQWE7WUFDYixnQkFBZ0I7WUFDaEIsYUFBYTtZQUNiLGdCQUFnQjtZQUNoQixlQUFlO1NBQ2hCO1FBQ0QsT0FBTyxFQUNMO1lBQ0UsaUJBQWlCO1lBQ2pCLHNCQUFzQjtZQUN0Qix1QkFBdUI7WUFDdkIsdUJBQXVCO1NBQ3hCO1FBQ0gsWUFBWSxFQUFFO1lBQ1osaUJBQWlCO1lBQ2pCLHNCQUFzQjtZQUN0Qix1QkFBdUI7WUFDdkIsdUJBQXVCO1NBQ3hCO0tBQ0YsQ0FBQztHQUNXLGNBQWMsQ0FPMUI7U0FQWSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge01vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XG5pbXBvcnQgeyBNYXRDYXJkTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY2FyZCc7XG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5pbXBvcnQgeyBNYXRTaWRlbmF2TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc2lkZW5hdic7XG5pbXBvcnQgeyBNYXRTdGVwcGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc3RlcHBlcic7XG5pbXBvcnQgeyBNYXRUYWJzTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdGFicyc7XG5pbXBvcnQgeyBNYXRUb29sYmFyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdG9vbGJhcic7XG5cbmltcG9ydCB7TWF0UGFnZXNDb21wb25lbnR9IGZyb20gJy4vbWF0LXBhZ2VzLmNvbXBvbmVudCc7XG5pbXBvcnQge01hdFBhZ2VMb2FkZXJDb21wb25lbnR9IGZyb20gJy4vbWF0LXBhZ2UtbG9hZGVyL21hdC1wYWdlLWxvYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHtNYXRQYWdlQ29udGVudENvbXBvbmVudH0gZnJvbSAnLi9tYXQtcGFnZS1jb250ZW50L21hdC1wYWdlLWNvbnRlbnQuY29tcG9uZW50JztcbmltcG9ydCB7TWF0UGFnZU91dGxvb2tDb21wb25lbnR9IGZyb20gJy4vbWF0LXBhZ2Utb3V0bG9vay9tYXQtcGFnZS1vdXRsb29rLmNvbXBvbmVudCc7XG5cblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBNYXRUb29sYmFyTW9kdWxlLFxuICAgIE1hdFRhYnNNb2R1bGUsXG4gICAgTWF0Q2FyZE1vZHVsZSxcbiAgICBNYXRTaWRlbmF2TW9kdWxlLFxuICAgIE1hdEljb25Nb2R1bGUsXG4gICAgTWF0U3RlcHBlck1vZHVsZSxcbiAgICBNYXRCdXR0b25Nb2R1bGVcbiAgXSxcbiAgZXhwb3J0czpcbiAgICBbXG4gICAgICBNYXRQYWdlc0NvbXBvbmVudCxcbiAgICAgIE1hdFBhZ2VMb2FkZXJDb21wb25lbnQsXG4gICAgICBNYXRQYWdlT3V0bG9va0NvbXBvbmVudCxcbiAgICAgIE1hdFBhZ2VDb250ZW50Q29tcG9uZW50XG4gICAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTWF0UGFnZXNDb21wb25lbnQsXG4gICAgTWF0UGFnZUxvYWRlckNvbXBvbmVudCxcbiAgICBNYXRQYWdlT3V0bG9va0NvbXBvbmVudCxcbiAgICBNYXRQYWdlQ29udGVudENvbXBvbmVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE1hdFBhZ2VzTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxNYXRQYWdlc01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTWF0UGFnZXNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtdXG4gICAgfTtcbiAgfVxufVxuIl19