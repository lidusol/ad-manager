import { __decorate, __metadata } from 'tslib';
import { ViewChild, TemplateRef, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChild, EventEmitter, Renderer2, ElementRef, ContentChildren, QueryList, Output, HostListener, NgModule } from '@angular/core';
import { MatSidenav, MatSidenavModule } from '@angular/material/sidenav';
import { MatTabGroup, MatTabsModule } from '@angular/material/tabs';
import { CommonModule } from '@angular/common';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatIconModule } from '@angular/material/icon';
import { MatStepperModule } from '@angular/material/stepper';
import { MatToolbarModule } from '@angular/material/toolbar';

var MatPageContentComponent = /** @class */ (function () {
    function MatPageContentComponent() {
    }
    MatPageContentComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        ViewChild(TemplateRef),
        __metadata("design:type", TemplateRef)
    ], MatPageContentComponent.prototype, "content", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MatPageContentComponent.prototype, "title", void 0);
    MatPageContentComponent = __decorate([
        Component({
            selector: 'mat-page-content',
            template: "<ng-template>\n  <mat-card style=\"margin: 2rem\">\n    <mat-card-title>{{title}}</mat-card-title>\n    <mat-card-content>\n      <ng-content></ng-content>\n    </mat-card-content>\n  </mat-card>\n</ng-template>\n",
            styles: [""]
        }),
        __metadata("design:paramtypes", [])
    ], MatPageContentComponent);
    return MatPageContentComponent;
}());

var MatPageOutlookComponent = /** @class */ (function () {
    function MatPageOutlookComponent() {
    }
    MatPageOutlookComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        ViewChild(TemplateRef),
        __metadata("design:type", TemplateRef)
    ], MatPageOutlookComponent.prototype, "content", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MatPageOutlookComponent.prototype, "title", void 0);
    MatPageOutlookComponent = __decorate([
        Component({
            selector: 'mat-page-outlook',
            template: "<ng-template>\n  <ng-content></ng-content>\n</ng-template>\n",
            encapsulation: ViewEncapsulation.None,
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [""]
        }),
        __metadata("design:paramtypes", [])
    ], MatPageOutlookComponent);
    return MatPageOutlookComponent;
}());

var MatPageLoaderComponent = /** @class */ (function () {
    function MatPageLoaderComponent() {
    }
    __decorate([
        ContentChild(MatPageOutlookComponent),
        __metadata("design:type", MatPageOutlookComponent)
    ], MatPageLoaderComponent.prototype, "pageOutlook", void 0);
    __decorate([
        ContentChild(MatPageContentComponent),
        __metadata("design:type", MatPageContentComponent)
    ], MatPageLoaderComponent.prototype, "pageContent", void 0);
    MatPageLoaderComponent = __decorate([
        Component({
            selector: 'mat-page-loader',
            template: "",
            styles: [""]
        })
    ], MatPageLoaderComponent);
    return MatPageLoaderComponent;
}());

var MatPagesComponent = /** @class */ (function () {
    function MatPagesComponent(renderer) {
        this.renderer = renderer;
        this.done = new EventEmitter();
        this.pageChanged = new EventEmitter();
        // the mode of the sidenav
        this.navMode = 'side';
        this.index = 0;
    }
    MatPagesComponent.prototype._initSidenavMode = function () {
        if (window.innerWidth < 768) {
            this.navMode = 'over';
        }
    };
    MatPagesComponent.prototype.ngOnInit = function () {
        this._initSidenavMode();
    };
    MatPagesComponent.prototype.ngAfterContentInit = function () {
        this.totalPages = this.pages.length;
        this.renderer.setStyle(this.tabHeader.nativeElement.children[0], 'display', 'none');
    };
    MatPagesComponent.prototype.onResize = function (event) {
        if (event.target.innerWidth < 768) {
            this.navMode = 'over';
            this.sidenav.close();
        }
        if (event.target.innerWidth > 768) {
            this.navMode = 'side';
            this.sidenav.open();
        }
    };
    /**
     * Go to the previous page if it exists
     */
    MatPagesComponent.prototype.previous = function () {
        this.index = this.index === 0 ? 0 : --this.index;
        this.pageChanged.emit(this.index);
    };
    /**
     * Go to the next page if it exists
     */
    MatPagesComponent.prototype.next = function () {
        this.index = this.index === this.totalPages - 1 ? this.totalPages - 1 : ++this.index;
        this.pageChanged.emit(this.index);
        if (this.index === this.totalPages - 1) {
            this.done.emit();
        }
    };
    /**
     * Update the value of the index when a step has been selected.
     * Emit this value for pagechanged's subscribers.
     *
     */
    MatPagesComponent.prototype.onStepSelectionChange = function (event) {
        this.index = event.selectedIndex;
        this.pageChanged.emit(this.index);
    };
    MatPagesComponent.ctorParameters = function () { return [
        { type: Renderer2 }
    ]; };
    __decorate([
        ViewChild('sidenav'),
        __metadata("design:type", MatSidenav)
    ], MatPagesComponent.prototype, "sidenav", void 0);
    __decorate([
        ViewChild(MatTabGroup, { read: ElementRef, static: true }),
        __metadata("design:type", ElementRef)
    ], MatPagesComponent.prototype, "tabHeader", void 0);
    __decorate([
        ContentChildren(MatPageLoaderComponent),
        __metadata("design:type", QueryList)
    ], MatPagesComponent.prototype, "pages", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MatPagesComponent.prototype, "title", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], MatPagesComponent.prototype, "done", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], MatPagesComponent.prototype, "pageChanged", void 0);
    __decorate([
        HostListener('window:resize', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], MatPagesComponent.prototype, "onResize", null);
    MatPagesComponent = __decorate([
        Component({
            selector: 'mat-pages',
            template: "<mat-sidenav-container>\n  <mat-sidenav #sidenav [mode]=\"navMode\" opened=\"true\"\n               [fixedInViewport]=\"'false'\" [fixedTopGap]=\"'false'\" [fixedBottomGap]=\"'false'\">\n\n    <mat-toolbar color=\"primary\">\n    </mat-toolbar>\n\n    <mat-vertical-stepper [selectedIndex]=\"index\" (selectionChange)=\"onStepSelectionChange($event)\">\n      <mat-step *ngFor=\"let page of pages;let i = index;\" [label]=\"page.pageOutlook.title\">\n        <ng-container [ngTemplateOutlet]=\"page.pageOutlook.content\"></ng-container>\n      </mat-step>\n    </mat-vertical-stepper>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button mat-icon-button (click)=\"sidenav.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      {{title}}\n    </mat-toolbar>\n    <div class=\"demo-sidenav-content main-container\">\n\n      <mat-tab-group [selectedIndex]=\"index\" style=\"min-height: 15vh;\" >\n        <button mat-fab color=\"warn\" (click)=\"previous()\">\n          <mat-icon>location</mat-icon>\n        </button>\n        <mat-tab *ngFor=\"let page of pages;let i = index;\">\n          <ng-template matTabContent>\n            <ng-container [ngTemplateOutlet]=\"page.pageContent.content\"></ng-container>\n          </ng-template>\n        </mat-tab>\n      </mat-tab-group>\n\n\n      <div class=\"navigation-buttons\">\n        <button mat-fab color=\"primary\" (click)=\"previous()\" [disabled]=\"index == 0\">\n          <mat-icon>chevron_left</mat-icon>\n        </button>\n        <div *ngIf=\"index == totalPages - 1;then finished else nextAvailable\">\n        </div>\n        <ng-template #nextAvailable>\n          <button mat-fab color=\"primary\" (click)=\"next()\">\n            <mat-icon>chevron_right</mat-icon>\n          </button>\n        </ng-template>\n        <ng-template #finished>\n          <button mat-fab color=\"accent\" (click)=\"done.next()\">\n            <mat-icon>done</mat-icon>\n          </button>\n        </ng-template>\n      </div>\n\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n",
            styles: [".navigation-buttons{margin:1rem;place-content:stretch space-between;-webkit-box-align:stretch;align-items:stretch;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;box-sizing:border-box;display:-webkit-box;display:flex}"]
        }),
        __metadata("design:paramtypes", [Renderer2])
    ], MatPagesComponent);
    return MatPagesComponent;
}());

var MatPagesModule = /** @class */ (function () {
    function MatPagesModule() {
    }
    MatPagesModule_1 = MatPagesModule;
    MatPagesModule.forRoot = function () {
        return {
            ngModule: MatPagesModule_1,
            providers: []
        };
    };
    var MatPagesModule_1;
    MatPagesModule = MatPagesModule_1 = __decorate([
        NgModule({
            imports: [
                CommonModule,
                MatToolbarModule,
                MatTabsModule,
                MatCardModule,
                MatSidenavModule,
                MatIconModule,
                MatStepperModule,
                MatButtonModule
            ],
            exports: [
                MatPagesComponent,
                MatPageLoaderComponent,
                MatPageOutlookComponent,
                MatPageContentComponent
            ],
            declarations: [
                MatPagesComponent,
                MatPageLoaderComponent,
                MatPageOutlookComponent,
                MatPageContentComponent
            ]
        })
    ], MatPagesModule);
    return MatPagesModule;
}());

/*
 * Public API Surface of pages
 */
// export * from './lib/pages.module';

/**
 * Generated bundle index. Do not edit.
 */

export { MatPageContentComponent, MatPageLoaderComponent, MatPageOutlookComponent, MatPagesComponent, MatPagesModule };
//# sourceMappingURL=angular-material-extensions-pages.js.map
