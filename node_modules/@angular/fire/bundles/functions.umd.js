(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/fire'), require('firebase/functions')) :
    typeof define === 'function' && define.amd ? define(['@angular/core','exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/fire', 'firebase/functions'], factory) :
    (factory(global.ng.core,(global.angularfire2 = global.angularfire2 || {}, global.angularfire2.functions = {}),global.ng.core,global.rxjs,global.rxjs.operators,global.angularfire2));
}(this, (function (ɵngcc0,exports,core,rxjs,operators,fire) { 'use strict';

    var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (undefined && undefined.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };
    var FunctionsRegionToken = new core.InjectionToken('angularfire2.functions.region');
    var FUNCTIONS_REGION = FunctionsRegionToken;
    var FUNCTIONS_ORIGIN = new core.InjectionToken('angularfire2.functions.origin');
    var ORIGIN = FUNCTIONS_ORIGIN;
    var REGION = FunctionsRegionToken;
    var AngularFireFunctions = (function () {
        function AngularFireFunctions(options, nameOrConfig, platformId, zone, region, origin) {
            this.schedulers = new fire.ɵAngularFireSchedulers(zone);
            this.functions = zone.runOutsideAngular(function () {
                var app = fire._firebaseAppFactory(options, zone, nameOrConfig);
                return app.functions(region || undefined);
            });
            if (origin) {
                this.functions.useFunctionsEmulator(origin);
            }
        }
        AngularFireFunctions.prototype.httpsCallable = function (name) {
            var _this = this;
            var callable = this.functions.httpsCallable(name);
            return function (data) {
                var callable$ = rxjs.from(callable(data));
                return callable$.pipe(operators.observeOn(_this.schedulers.outsideAngular), operators.map(function (r) { return r.data; }));
            };
        };
        AngularFireFunctions = __decorate([ __param(0, core.Inject(fire.FIREBASE_OPTIONS)),
            __param(1, core.Optional()), __param(1, core.Inject(fire.FIREBASE_APP_NAME)),
            __param(2, core.Inject(core.PLATFORM_ID)),
            __param(4, core.Optional()), __param(4, core.Inject(REGION)),
            __param(5, core.Optional()), __param(5, core.Inject(ORIGIN)),
            __metadata("design:paramtypes", [Object, Object, Object,
                core.NgZone, Object, Object])
        ], AngularFireFunctions);
AngularFireFunctions.ɵfac = function AngularFireFunctions_Factory(t) { return new (t || AngularFireFunctions)(ɵngcc0.ɵɵinject(fire.FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(fire.FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(core.PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(REGION, 8), ɵngcc0.ɵɵinject(ORIGIN, 8)); };
AngularFireFunctions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AngularFireFunctions, factory: function (t) { return AngularFireFunctions.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireFunctions, [{
        type: core.Injectable
    }], function () { return [{ type: Object, decorators: [{
                type: core.Inject,
                args: [fire.FIREBASE_OPTIONS]
            }] }, { type: Object, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [fire.FIREBASE_APP_NAME]
            }] }, { type: Object, decorators: [{
                type: core.Inject,
                args: [core.PLATFORM_ID]
            }] }, { type: ɵngcc0.NgZone }, { type: Object, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [REGION]
            }] }, { type: Object, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [ORIGIN]
            }] }]; }, null); })();
        return AngularFireFunctions;
    }());

    var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var AngularFireFunctionsModule = (function () {
        function AngularFireFunctionsModule() {
        }
AngularFireFunctionsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireFunctionsModule });
AngularFireFunctionsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireFunctionsModule_Factory(t) { return new (t || AngularFireFunctionsModule)(); }, providers: [AngularFireFunctions] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireFunctionsModule, [{
        type: core.NgModule,
        args: [{
                providers: [AngularFireFunctions]
            }]
    }], function () { return []; }, null); })();
        return AngularFireFunctionsModule;
    }());

    exports.FunctionsRegionToken = FunctionsRegionToken;
    exports.FUNCTIONS_REGION = FUNCTIONS_REGION;
    exports.FUNCTIONS_ORIGIN = FUNCTIONS_ORIGIN;
    exports.ORIGIN = ORIGIN;
    exports.REGION = REGION;
    exports.AngularFireFunctions = AngularFireFunctions;
    exports.AngularFireFunctionsModule = AngularFireFunctionsModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuY3Rpb25zLnVtZC5qcyIsInNvdXJjZXMiOlsiZnVuY3Rpb25zLnVtZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLG9HQUEyRTtBQUMzRSx5RUFBeUQ7QUFDekQsNEJBQWE7QUFDYiwwQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FFVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztnREFLdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gICAgdHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKCdAYW5ndWxhci9jb3JlJyksIHJlcXVpcmUoJ3J4anMnKSwgcmVxdWlyZSgncnhqcy9vcGVyYXRvcnMnKSwgcmVxdWlyZSgnQGFuZ3VsYXIvZmlyZScpLCByZXF1aXJlKCdmaXJlYmFzZS9mdW5jdGlvbnMnKSkgOlxuICAgIHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbJ2V4cG9ydHMnLCAnQGFuZ3VsYXIvY29yZScsICdyeGpzJywgJ3J4anMvb3BlcmF0b3JzJywgJ0Bhbmd1bGFyL2ZpcmUnLCAnZmlyZWJhc2UvZnVuY3Rpb25zJ10sIGZhY3RvcnkpIDpcbiAgICAoZmFjdG9yeSgoZ2xvYmFsLmFuZ3VsYXJmaXJlMiA9IGdsb2JhbC5hbmd1bGFyZmlyZTIgfHwge30sIGdsb2JhbC5hbmd1bGFyZmlyZTIuZnVuY3Rpb25zID0ge30pLGdsb2JhbC5uZy5jb3JlLGdsb2JhbC5yeGpzLGdsb2JhbC5yeGpzLm9wZXJhdG9ycyxnbG9iYWwuYW5ndWxhcmZpcmUyKSk7XG59KHRoaXMsIChmdW5jdGlvbiAoZXhwb3J0cyxjb3JlLHJ4anMsb3BlcmF0b3JzLGZpcmUpIHsgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyIF9fZGVjb3JhdGUgPSAodW5kZWZpbmVkICYmIHVuZGVmaW5lZC5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICAgICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICAgICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICAgICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICAgICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbiAgICB9O1xuICAgIHZhciBfX21ldGFkYXRhID0gKHVuZGVmaW5lZCAmJiB1bmRlZmluZWQuX19tZXRhZGF0YSkgfHwgZnVuY3Rpb24gKGssIHYpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0Lm1ldGFkYXRhID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBSZWZsZWN0Lm1ldGFkYXRhKGssIHYpO1xuICAgIH07XG4gICAgdmFyIF9fcGFyYW0gPSAodW5kZWZpbmVkICYmIHVuZGVmaW5lZC5fX3BhcmFtKSB8fCBmdW5jdGlvbiAocGFyYW1JbmRleCwgZGVjb3JhdG9yKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHsgZGVjb3JhdG9yKHRhcmdldCwga2V5LCBwYXJhbUluZGV4KTsgfVxuICAgIH07XG4gICAgdmFyIEZ1bmN0aW9uc1JlZ2lvblRva2VuID0gbmV3IGNvcmUuSW5qZWN0aW9uVG9rZW4oJ2FuZ3VsYXJmaXJlMi5mdW5jdGlvbnMucmVnaW9uJyk7XG4gICAgdmFyIEZVTkNUSU9OU19SRUdJT04gPSBGdW5jdGlvbnNSZWdpb25Ub2tlbjtcbiAgICB2YXIgRlVOQ1RJT05TX09SSUdJTiA9IG5ldyBjb3JlLkluamVjdGlvblRva2VuKCdhbmd1bGFyZmlyZTIuZnVuY3Rpb25zLm9yaWdpbicpO1xuICAgIHZhciBPUklHSU4gPSBGVU5DVElPTlNfT1JJR0lOO1xuICAgIHZhciBSRUdJT04gPSBGdW5jdGlvbnNSZWdpb25Ub2tlbjtcbiAgICB2YXIgQW5ndWxhckZpcmVGdW5jdGlvbnMgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiBBbmd1bGFyRmlyZUZ1bmN0aW9ucyhvcHRpb25zLCBuYW1lT3JDb25maWcsIHBsYXRmb3JtSWQsIHpvbmUsIHJlZ2lvbiwgb3JpZ2luKSB7XG4gICAgICAgICAgICB0aGlzLnNjaGVkdWxlcnMgPSBuZXcgZmlyZS7JtUFuZ3VsYXJGaXJlU2NoZWR1bGVycyh6b25lKTtcbiAgICAgICAgICAgIHRoaXMuZnVuY3Rpb25zID0gem9uZS5ydW5PdXRzaWRlQW5ndWxhcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFwcCA9IGZpcmUuX2ZpcmViYXNlQXBwRmFjdG9yeShvcHRpb25zLCB6b25lLCBuYW1lT3JDb25maWcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhcHAuZnVuY3Rpb25zKHJlZ2lvbiB8fCB1bmRlZmluZWQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAob3JpZ2luKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5mdW5jdGlvbnMudXNlRnVuY3Rpb25zRW11bGF0b3Iob3JpZ2luKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBBbmd1bGFyRmlyZUZ1bmN0aW9ucy5wcm90b3R5cGUuaHR0cHNDYWxsYWJsZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgdmFyIGNhbGxhYmxlID0gdGhpcy5mdW5jdGlvbnMuaHR0cHNDYWxsYWJsZShuYW1lKTtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIHZhciBjYWxsYWJsZSQgPSByeGpzLmZyb20oY2FsbGFibGUoZGF0YSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYWJsZSQucGlwZShvcGVyYXRvcnMub2JzZXJ2ZU9uKF90aGlzLnNjaGVkdWxlcnMub3V0c2lkZUFuZ3VsYXIpLCBvcGVyYXRvcnMubWFwKGZ1bmN0aW9uIChyKSB7IHJldHVybiByLmRhdGE7IH0pKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIEFuZ3VsYXJGaXJlRnVuY3Rpb25zID0gX19kZWNvcmF0ZShbXG4gICAgICAgICAgICBjb3JlLkluamVjdGFibGUoKSxcbiAgICAgICAgICAgIF9fcGFyYW0oMCwgY29yZS5JbmplY3QoZmlyZS5GSVJFQkFTRV9PUFRJT05TKSksXG4gICAgICAgICAgICBfX3BhcmFtKDEsIGNvcmUuT3B0aW9uYWwoKSksIF9fcGFyYW0oMSwgY29yZS5JbmplY3QoZmlyZS5GSVJFQkFTRV9BUFBfTkFNRSkpLFxuICAgICAgICAgICAgX19wYXJhbSgyLCBjb3JlLkluamVjdChjb3JlLlBMQVRGT1JNX0lEKSksXG4gICAgICAgICAgICBfX3BhcmFtKDQsIGNvcmUuT3B0aW9uYWwoKSksIF9fcGFyYW0oNCwgY29yZS5JbmplY3QoUkVHSU9OKSksXG4gICAgICAgICAgICBfX3BhcmFtKDUsIGNvcmUuT3B0aW9uYWwoKSksIF9fcGFyYW0oNSwgY29yZS5JbmplY3QoT1JJR0lOKSksXG4gICAgICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW09iamVjdCwgT2JqZWN0LCBPYmplY3QsXG4gICAgICAgICAgICAgICAgY29yZS5OZ1pvbmUsIE9iamVjdCwgT2JqZWN0XSlcbiAgICAgICAgXSwgQW5ndWxhckZpcmVGdW5jdGlvbnMpO1xuICAgICAgICByZXR1cm4gQW5ndWxhckZpcmVGdW5jdGlvbnM7XG4gICAgfSgpKTtcblxuICAgIHZhciBfX2RlY29yYXRlJDEgPSAodW5kZWZpbmVkICYmIHVuZGVmaW5lZC5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICAgICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICAgICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICAgICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICAgICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbiAgICB9O1xuICAgIHZhciBBbmd1bGFyRmlyZUZ1bmN0aW9uc01vZHVsZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZ1bmN0aW9uIEFuZ3VsYXJGaXJlRnVuY3Rpb25zTW9kdWxlKCkge1xuICAgICAgICB9XG4gICAgICAgIEFuZ3VsYXJGaXJlRnVuY3Rpb25zTW9kdWxlID0gX19kZWNvcmF0ZSQxKFtcbiAgICAgICAgICAgIGNvcmUuTmdNb2R1bGUoe1xuICAgICAgICAgICAgICAgIHByb3ZpZGVyczogW0FuZ3VsYXJGaXJlRnVuY3Rpb25zXVxuICAgICAgICAgICAgfSlcbiAgICAgICAgXSwgQW5ndWxhckZpcmVGdW5jdGlvbnNNb2R1bGUpO1xuICAgICAgICByZXR1cm4gQW5ndWxhckZpcmVGdW5jdGlvbnNNb2R1bGU7XG4gICAgfSgpKTtcblxuICAgIGV4cG9ydHMuRnVuY3Rpb25zUmVnaW9uVG9rZW4gPSBGdW5jdGlvbnNSZWdpb25Ub2tlbjtcbiAgICBleHBvcnRzLkZVTkNUSU9OU19SRUdJT04gPSBGVU5DVElPTlNfUkVHSU9OO1xuICAgIGV4cG9ydHMuRlVOQ1RJT05TX09SSUdJTiA9IEZVTkNUSU9OU19PUklHSU47XG4gICAgZXhwb3J0cy5PUklHSU4gPSBPUklHSU47XG4gICAgZXhwb3J0cy5SRUdJT04gPSBSRUdJT047XG4gICAgZXhwb3J0cy5Bbmd1bGFyRmlyZUZ1bmN0aW9ucyA9IEFuZ3VsYXJGaXJlRnVuY3Rpb25zO1xuICAgIGV4cG9ydHMuQW5ndWxhckZpcmVGdW5jdGlvbnNNb2R1bGUgPSBBbmd1bGFyRmlyZUZ1bmN0aW9uc01vZHVsZTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbn0pKSk7XG4iXX0=