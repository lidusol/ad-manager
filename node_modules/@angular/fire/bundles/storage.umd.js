(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),exports, require('rxjs'), require('rxjs/operators'), require('@angular/core'), require('@angular/fire'), require('firebase/storage')) :
    typeof define === 'function' && define.amd ? define(['@angular/core','exports', 'rxjs', 'rxjs/operators', '@angular/core', '@angular/fire', 'firebase/storage'], factory) :
    (factory(global.ng.core,(global.angularfire2 = global.angularfire2 || {}, global.angularfire2.storage = {}),global.rxjs,global.rxjs.operators,global.ng.core,global.angularfire2));
}(this, (function (ɵngcc0,exports,rxjs,operators,core,fire) { 'use strict';

    function fromTask(task) {
        return new rxjs.Observable(function (subscriber) {
            var progress = function (snap) { return subscriber.next(snap); };
            var error = function (e) { return subscriber.error(e); };
            var complete = function () { return subscriber.complete(); };
            task.on('state_changed', progress, error, complete);
            return function () { return task.cancel(); };
        });
    }

    function createUploadTask(task) {
        var inner$ = fromTask(task);
        return {
            task: task,
            then: task.then.bind(task),
            catch: task.catch.bind(task),
            pause: task.pause.bind(task),
            cancel: task.cancel.bind(task),
            resume: task.resume.bind(task),
            snapshotChanges: function () { return inner$; },
            percentageChanges: function () { return inner$.pipe(operators.map(function (s) { return s.bytesTransferred / s.totalBytes * 100; })); }
        };
    }

    function createStorageRef(ref, schedulers, keepUnstableUntilFirst) {
        return {
            getDownloadURL: function () { return rxjs.from(ref.getDownloadURL(), schedulers.outsideAngular).pipe(keepUnstableUntilFirst); },
            getMetadata: function () { return rxjs.from(ref.getMetadata()).pipe(keepUnstableUntilFirst); },
            delete: function () { return rxjs.from(ref.delete()); },
            child: function (path) { return createStorageRef(ref.child(path), schedulers, keepUnstableUntilFirst); },
            updateMetatdata: function (meta) { return rxjs.from(ref.updateMetadata(meta)); },
            updateMetadata: function (meta) { return rxjs.from(ref.updateMetadata(meta)); },
            put: function (data, metadata) {
                var task = ref.put(data, metadata);
                return createUploadTask(task);
            },
            putString: function (data, format, metadata) {
                var task = ref.putString(data, format, metadata);
                return createUploadTask(task);
            }
        };
    }

    var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (undefined && undefined.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };
    var StorageBucket = new core.InjectionToken('angularfire2.storageBucket');
    var BUCKET = StorageBucket;
    var AngularFireStorage = (function () {
        function AngularFireStorage(options, nameOrConfig, storageBucket, platformId, zone) {
            this.schedulers = new fire.ɵAngularFireSchedulers(zone);
            this.keepUnstableUntilFirst = fire.ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);
            this.storage = zone.runOutsideAngular(function () {
                var app = fire._firebaseAppFactory(options, zone, nameOrConfig);
                return app.storage(storageBucket || undefined);
            });
        }
        AngularFireStorage.prototype.ref = function (path) {
            return createStorageRef(this.storage.ref(path), this.schedulers, this.keepUnstableUntilFirst);
        };
        AngularFireStorage.prototype.upload = function (path, data, metadata) {
            var storageRef = this.storage.ref(path);
            var ref = createStorageRef(storageRef, this.schedulers, this.keepUnstableUntilFirst);
            return ref.put(data, metadata);
        };
        AngularFireStorage = __decorate([ __param(0, core.Inject(fire.FIREBASE_OPTIONS)),
            __param(1, core.Optional()), __param(1, core.Inject(fire.FIREBASE_APP_NAME)),
            __param(2, core.Optional()), __param(2, core.Inject(BUCKET)),
            __param(3, core.Inject(core.PLATFORM_ID)),
            __metadata("design:paramtypes", [Object, Object, Object, Object,
                core.NgZone])
        ], AngularFireStorage);
AngularFireStorage.ɵfac = function AngularFireStorage_Factory(t) { return new (t || AngularFireStorage)(ɵngcc0.ɵɵinject(fire.FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(fire.FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(BUCKET, 8), ɵngcc0.ɵɵinject(core.PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };
AngularFireStorage.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AngularFireStorage, factory: function (t) { return AngularFireStorage.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireStorage, [{
        type: core.Injectable
    }], function () { return [{ type: Object, decorators: [{
                type: core.Inject,
                args: [fire.FIREBASE_OPTIONS]
            }] }, { type: Object, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [fire.FIREBASE_APP_NAME]
            }] }, { type: Object, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [BUCKET]
            }] }, { type: Object, decorators: [{
                type: core.Inject,
                args: [core.PLATFORM_ID]
            }] }, { type: ɵngcc0.NgZone }]; }, null); })();
        return AngularFireStorage;
    }());

    var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var AngularFireStorageModule = (function () {
        function AngularFireStorageModule() {
        }
AngularFireStorageModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireStorageModule });
AngularFireStorageModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireStorageModule_Factory(t) { return new (t || AngularFireStorageModule)(); }, providers: [AngularFireStorage] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireStorageModule, [{
        type: core.NgModule,
        args: [{
                providers: [AngularFireStorage]
            }]
    }], function () { return []; }, null); })();
        return AngularFireStorageModule;
    }());

    exports.createStorageRef = createStorageRef;
    exports.StorageBucket = StorageBucket;
    exports.BUCKET = BUCKET;
    exports.AngularFireStorage = AngularFireStorage;
    exports.createUploadTask = createUploadTask;
    exports.fromTask = fromTask;
    exports.AngularFireStorageModule = AngularFireStorageModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS51bWQuanMiLCJzb3VyY2VzIjpbInN0b3JhZ2UudW1kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esb0dBQTJFO0FBQzNFLHlFQUF5RDtBQUN6RCw0QkFBYTtBQUNiLDBCQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FFVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJEQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O2dEQUtxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgICB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBmYWN0b3J5KGV4cG9ydHMsIHJlcXVpcmUoJ3J4anMnKSwgcmVxdWlyZSgncnhqcy9vcGVyYXRvcnMnKSwgcmVxdWlyZSgnQGFuZ3VsYXIvY29yZScpLCByZXF1aXJlKCdAYW5ndWxhci9maXJlJyksIHJlcXVpcmUoJ2ZpcmViYXNlL3N0b3JhZ2UnKSkgOlxuICAgIHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbJ2V4cG9ydHMnLCAncnhqcycsICdyeGpzL29wZXJhdG9ycycsICdAYW5ndWxhci9jb3JlJywgJ0Bhbmd1bGFyL2ZpcmUnLCAnZmlyZWJhc2Uvc3RvcmFnZSddLCBmYWN0b3J5KSA6XG4gICAgKGZhY3RvcnkoKGdsb2JhbC5hbmd1bGFyZmlyZTIgPSBnbG9iYWwuYW5ndWxhcmZpcmUyIHx8IHt9LCBnbG9iYWwuYW5ndWxhcmZpcmUyLnN0b3JhZ2UgPSB7fSksZ2xvYmFsLnJ4anMsZ2xvYmFsLnJ4anMub3BlcmF0b3JzLGdsb2JhbC5uZy5jb3JlLGdsb2JhbC5hbmd1bGFyZmlyZTIpKTtcbn0odGhpcywgKGZ1bmN0aW9uIChleHBvcnRzLHJ4anMsb3BlcmF0b3JzLGNvcmUsZmlyZSkgeyAndXNlIHN0cmljdCc7XG5cbiAgICBmdW5jdGlvbiBmcm9tVGFzayh0YXNrKSB7XG4gICAgICAgIHJldHVybiBuZXcgcnhqcy5PYnNlcnZhYmxlKGZ1bmN0aW9uIChzdWJzY3JpYmVyKSB7XG4gICAgICAgICAgICB2YXIgcHJvZ3Jlc3MgPSBmdW5jdGlvbiAoc25hcCkgeyByZXR1cm4gc3Vic2NyaWJlci5uZXh0KHNuYXApOyB9O1xuICAgICAgICAgICAgdmFyIGVycm9yID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHN1YnNjcmliZXIuZXJyb3IoZSk7IH07XG4gICAgICAgICAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBzdWJzY3JpYmVyLmNvbXBsZXRlKCk7IH07XG4gICAgICAgICAgICB0YXNrLm9uKCdzdGF0ZV9jaGFuZ2VkJywgcHJvZ3Jlc3MsIGVycm9yLCBjb21wbGV0ZSk7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGFzay5jYW5jZWwoKTsgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlVXBsb2FkVGFzayh0YXNrKSB7XG4gICAgICAgIHZhciBpbm5lciQgPSBmcm9tVGFzayh0YXNrKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRhc2s6IHRhc2ssXG4gICAgICAgICAgICB0aGVuOiB0YXNrLnRoZW4uYmluZCh0YXNrKSxcbiAgICAgICAgICAgIGNhdGNoOiB0YXNrLmNhdGNoLmJpbmQodGFzayksXG4gICAgICAgICAgICBwYXVzZTogdGFzay5wYXVzZS5iaW5kKHRhc2spLFxuICAgICAgICAgICAgY2FuY2VsOiB0YXNrLmNhbmNlbC5iaW5kKHRhc2spLFxuICAgICAgICAgICAgcmVzdW1lOiB0YXNrLnJlc3VtZS5iaW5kKHRhc2spLFxuICAgICAgICAgICAgc25hcHNob3RDaGFuZ2VzOiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbm5lciQ7IH0sXG4gICAgICAgICAgICBwZXJjZW50YWdlQ2hhbmdlczogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5uZXIkLnBpcGUob3BlcmF0b3JzLm1hcChmdW5jdGlvbiAocykgeyByZXR1cm4gcy5ieXRlc1RyYW5zZmVycmVkIC8gcy50b3RhbEJ5dGVzICogMTAwOyB9KSk7IH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVTdG9yYWdlUmVmKHJlZiwgc2NoZWR1bGVycywga2VlcFVuc3RhYmxlVW50aWxGaXJzdCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZ2V0RG93bmxvYWRVUkw6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJ4anMuZnJvbShyZWYuZ2V0RG93bmxvYWRVUkwoKSwgc2NoZWR1bGVycy5vdXRzaWRlQW5ndWxhcikucGlwZShrZWVwVW5zdGFibGVVbnRpbEZpcnN0KTsgfSxcbiAgICAgICAgICAgIGdldE1ldGFkYXRhOiBmdW5jdGlvbiAoKSB7IHJldHVybiByeGpzLmZyb20ocmVmLmdldE1ldGFkYXRhKCkpLnBpcGUoa2VlcFVuc3RhYmxlVW50aWxGaXJzdCk7IH0sXG4gICAgICAgICAgICBkZWxldGU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJ4anMuZnJvbShyZWYuZGVsZXRlKCkpOyB9LFxuICAgICAgICAgICAgY2hpbGQ6IGZ1bmN0aW9uIChwYXRoKSB7IHJldHVybiBjcmVhdGVTdG9yYWdlUmVmKHJlZi5jaGlsZChwYXRoKSwgc2NoZWR1bGVycywga2VlcFVuc3RhYmxlVW50aWxGaXJzdCk7IH0sXG4gICAgICAgICAgICB1cGRhdGVNZXRhdGRhdGE6IGZ1bmN0aW9uIChtZXRhKSB7IHJldHVybiByeGpzLmZyb20ocmVmLnVwZGF0ZU1ldGFkYXRhKG1ldGEpKTsgfSxcbiAgICAgICAgICAgIHVwZGF0ZU1ldGFkYXRhOiBmdW5jdGlvbiAobWV0YSkgeyByZXR1cm4gcnhqcy5mcm9tKHJlZi51cGRhdGVNZXRhZGF0YShtZXRhKSk7IH0sXG4gICAgICAgICAgICBwdXQ6IGZ1bmN0aW9uIChkYXRhLCBtZXRhZGF0YSkge1xuICAgICAgICAgICAgICAgIHZhciB0YXNrID0gcmVmLnB1dChkYXRhLCBtZXRhZGF0YSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZVVwbG9hZFRhc2sodGFzayk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHV0U3RyaW5nOiBmdW5jdGlvbiAoZGF0YSwgZm9ybWF0LCBtZXRhZGF0YSkge1xuICAgICAgICAgICAgICAgIHZhciB0YXNrID0gcmVmLnB1dFN0cmluZyhkYXRhLCBmb3JtYXQsIG1ldGFkYXRhKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlVXBsb2FkVGFzayh0YXNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICB2YXIgX19kZWNvcmF0ZSA9ICh1bmRlZmluZWQgJiYgdW5kZWZpbmVkLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgICAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgICAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgICAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgICAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xuICAgIH07XG4gICAgdmFyIF9fbWV0YWRhdGEgPSAodW5kZWZpbmVkICYmIHVuZGVmaW5lZC5fX21ldGFkYXRhKSB8fCBmdW5jdGlvbiAoaywgdikge1xuICAgICAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QubWV0YWRhdGEgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIFJlZmxlY3QubWV0YWRhdGEoaywgdik7XG4gICAgfTtcbiAgICB2YXIgX19wYXJhbSA9ICh1bmRlZmluZWQgJiYgdW5kZWZpbmVkLl9fcGFyYW0pIHx8IGZ1bmN0aW9uIChwYXJhbUluZGV4LCBkZWNvcmF0b3IpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh0YXJnZXQsIGtleSkgeyBkZWNvcmF0b3IodGFyZ2V0LCBrZXksIHBhcmFtSW5kZXgpOyB9XG4gICAgfTtcbiAgICB2YXIgU3RvcmFnZUJ1Y2tldCA9IG5ldyBjb3JlLkluamVjdGlvblRva2VuKCdhbmd1bGFyZmlyZTIuc3RvcmFnZUJ1Y2tldCcpO1xuICAgIHZhciBCVUNLRVQgPSBTdG9yYWdlQnVja2V0O1xuICAgIHZhciBBbmd1bGFyRmlyZVN0b3JhZ2UgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICBmdW5jdGlvbiBBbmd1bGFyRmlyZVN0b3JhZ2Uob3B0aW9ucywgbmFtZU9yQ29uZmlnLCBzdG9yYWdlQnVja2V0LCBwbGF0Zm9ybUlkLCB6b25lKSB7XG4gICAgICAgICAgICB0aGlzLnNjaGVkdWxlcnMgPSBuZXcgZmlyZS7JtUFuZ3VsYXJGaXJlU2NoZWR1bGVycyh6b25lKTtcbiAgICAgICAgICAgIHRoaXMua2VlcFVuc3RhYmxlVW50aWxGaXJzdCA9IGZpcmUuybVrZWVwVW5zdGFibGVVbnRpbEZpcnN0RmFjdG9yeSh0aGlzLnNjaGVkdWxlcnMsIHBsYXRmb3JtSWQpO1xuICAgICAgICAgICAgdGhpcy5zdG9yYWdlID0gem9uZS5ydW5PdXRzaWRlQW5ndWxhcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGFwcCA9IGZpcmUuX2ZpcmViYXNlQXBwRmFjdG9yeShvcHRpb25zLCB6b25lLCBuYW1lT3JDb25maWcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhcHAuc3RvcmFnZShzdG9yYWdlQnVja2V0IHx8IHVuZGVmaW5lZCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBBbmd1bGFyRmlyZVN0b3JhZ2UucHJvdG90eXBlLnJlZiA9IGZ1bmN0aW9uIChwYXRoKSB7XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlU3RvcmFnZVJlZih0aGlzLnN0b3JhZ2UucmVmKHBhdGgpLCB0aGlzLnNjaGVkdWxlcnMsIHRoaXMua2VlcFVuc3RhYmxlVW50aWxGaXJzdCk7XG4gICAgICAgIH07XG4gICAgICAgIEFuZ3VsYXJGaXJlU3RvcmFnZS5wcm90b3R5cGUudXBsb2FkID0gZnVuY3Rpb24gKHBhdGgsIGRhdGEsIG1ldGFkYXRhKSB7XG4gICAgICAgICAgICB2YXIgc3RvcmFnZVJlZiA9IHRoaXMuc3RvcmFnZS5yZWYocGF0aCk7XG4gICAgICAgICAgICB2YXIgcmVmID0gY3JlYXRlU3RvcmFnZVJlZihzdG9yYWdlUmVmLCB0aGlzLnNjaGVkdWxlcnMsIHRoaXMua2VlcFVuc3RhYmxlVW50aWxGaXJzdCk7XG4gICAgICAgICAgICByZXR1cm4gcmVmLnB1dChkYXRhLCBtZXRhZGF0YSk7XG4gICAgICAgIH07XG4gICAgICAgIEFuZ3VsYXJGaXJlU3RvcmFnZSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICAgICAgY29yZS5JbmplY3RhYmxlKCksXG4gICAgICAgICAgICBfX3BhcmFtKDAsIGNvcmUuSW5qZWN0KGZpcmUuRklSRUJBU0VfT1BUSU9OUykpLFxuICAgICAgICAgICAgX19wYXJhbSgxLCBjb3JlLk9wdGlvbmFsKCkpLCBfX3BhcmFtKDEsIGNvcmUuSW5qZWN0KGZpcmUuRklSRUJBU0VfQVBQX05BTUUpKSxcbiAgICAgICAgICAgIF9fcGFyYW0oMiwgY29yZS5PcHRpb25hbCgpKSwgX19wYXJhbSgyLCBjb3JlLkluamVjdChCVUNLRVQpKSxcbiAgICAgICAgICAgIF9fcGFyYW0oMywgY29yZS5JbmplY3QoY29yZS5QTEFURk9STV9JRCkpLFxuICAgICAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtPYmplY3QsIE9iamVjdCwgT2JqZWN0LCBPYmplY3QsXG4gICAgICAgICAgICAgICAgY29yZS5OZ1pvbmVdKVxuICAgICAgICBdLCBBbmd1bGFyRmlyZVN0b3JhZ2UpO1xuICAgICAgICByZXR1cm4gQW5ndWxhckZpcmVTdG9yYWdlO1xuICAgIH0oKSk7XG5cbiAgICB2YXIgX19kZWNvcmF0ZSQxID0gKHVuZGVmaW5lZCAmJiB1bmRlZmluZWQuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG4gICAgfTtcbiAgICB2YXIgQW5ndWxhckZpcmVTdG9yYWdlTW9kdWxlID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZnVuY3Rpb24gQW5ndWxhckZpcmVTdG9yYWdlTW9kdWxlKCkge1xuICAgICAgICB9XG4gICAgICAgIEFuZ3VsYXJGaXJlU3RvcmFnZU1vZHVsZSA9IF9fZGVjb3JhdGUkMShbXG4gICAgICAgICAgICBjb3JlLk5nTW9kdWxlKHtcbiAgICAgICAgICAgICAgICBwcm92aWRlcnM6IFtBbmd1bGFyRmlyZVN0b3JhZ2VdXG4gICAgICAgICAgICB9KVxuICAgICAgICBdLCBBbmd1bGFyRmlyZVN0b3JhZ2VNb2R1bGUpO1xuICAgICAgICByZXR1cm4gQW5ndWxhckZpcmVTdG9yYWdlTW9kdWxlO1xuICAgIH0oKSk7XG5cbiAgICBleHBvcnRzLmNyZWF0ZVN0b3JhZ2VSZWYgPSBjcmVhdGVTdG9yYWdlUmVmO1xuICAgIGV4cG9ydHMuU3RvcmFnZUJ1Y2tldCA9IFN0b3JhZ2VCdWNrZXQ7XG4gICAgZXhwb3J0cy5CVUNLRVQgPSBCVUNLRVQ7XG4gICAgZXhwb3J0cy5Bbmd1bGFyRmlyZVN0b3JhZ2UgPSBBbmd1bGFyRmlyZVN0b3JhZ2U7XG4gICAgZXhwb3J0cy5jcmVhdGVVcGxvYWRUYXNrID0gY3JlYXRlVXBsb2FkVGFzaztcbiAgICBleHBvcnRzLmZyb21UYXNrID0gZnJvbVRhc2s7XG4gICAgZXhwb3J0cy5Bbmd1bGFyRmlyZVN0b3JhZ2VNb2R1bGUgPSBBbmd1bGFyRmlyZVN0b3JhZ2VNb2R1bGU7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG59KSkpO1xuIl19