import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ChartComponent } from './charts/chart.component';
import { BaseChartComponent } from './base-chart.component';
import { AxesModule } from './axes/axes.module';
import { TooltipModule } from './tooltip/tooltip.module';
import { CircleSeriesComponent } from './circle-series.component';
import { CircleComponent } from './circle.component';
import { GridPanelComponent } from './grid-panel.component';
import { GridPanelSeriesComponent } from './grid-panel-series.component';
import { SvgLinearGradientComponent } from './svg-linear-gradient.component';
import { SvgRadialGradientComponent } from './svg-radial-gradient.component';
import { AreaComponent } from './area.component';
import { CountUpDirective } from './count/count.directive';
import { TooltipArea } from './tooltip-area.component';
import { Timeline } from './timeline/timeline.component';
import { VisibilityObserver } from '../utils/visibility-observer';
import { LegendComponent } from './legend/legend.component';
import { LegendEntryComponent } from './legend/legend-entry.component';
import { ScaleLegendComponent } from './legend/scale-legend.component';
import { AdvancedLegendComponent } from './legend/advanced-legend.component';
import * as ɵngcc0 from '@angular/core';
const COMPONENTS = [
    AreaComponent,
    BaseChartComponent,
    CountUpDirective,
    TooltipArea,
    ChartComponent,
    LegendComponent,
    LegendEntryComponent,
    ScaleLegendComponent,
    CircleComponent,
    CircleSeriesComponent,
    GridPanelComponent,
    GridPanelSeriesComponent,
    SvgLinearGradientComponent,
    SvgRadialGradientComponent,
    Timeline,
    AdvancedLegendComponent
];
let ChartCommonModule = class ChartCommonModule {
};
ChartCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ChartCommonModule });
ChartCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ChartCommonModule_Factory(t) { return new (t || ChartCommonModule)(); }, imports: [[CommonModule, AxesModule, TooltipModule],
        CommonModule, AxesModule, TooltipModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartCommonModule, { declarations: function () { return [AreaComponent,
        BaseChartComponent,
        CountUpDirective,
        TooltipArea,
        ChartComponent,
        LegendComponent,
        LegendEntryComponent,
        ScaleLegendComponent,
        CircleComponent,
        CircleSeriesComponent,
        GridPanelComponent,
        GridPanelSeriesComponent,
        SvgLinearGradientComponent,
        SvgRadialGradientComponent,
        Timeline,
        AdvancedLegendComponent,
        VisibilityObserver]; }, imports: function () { return [CommonModule, AxesModule, TooltipModule]; }, exports: function () { return [CommonModule, AxesModule, TooltipModule,
        AreaComponent,
        BaseChartComponent,
        CountUpDirective,
        TooltipArea,
        ChartComponent,
        LegendComponent,
        LegendEntryComponent,
        ScaleLegendComponent,
        CircleComponent,
        CircleSeriesComponent,
        GridPanelComponent,
        GridPanelSeriesComponent,
        SvgLinearGradientComponent,
        SvgRadialGradientComponent,
        Timeline,
        AdvancedLegendComponent,
        VisibilityObserver]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ChartCommonModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, AxesModule, TooltipModule],
                declarations: [...COMPONENTS, VisibilityObserver],
                exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]
            }]
    }], null, null); })();
export { ChartCommonModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtY29tbW9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L0Bzd2ltbGFuZS9uZ3gtY2hhcnRzL2xpYi9jb21tb24vY2hhcnQtY29tbW9uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7QUFFN0UsTUFBTSxVQUFVLEdBQUc7QUFDbkIsSUFBRSxhQUFhO0FBQ2YsSUFBRSxrQkFBa0I7QUFDcEIsSUFBRSxnQkFBZ0I7QUFDbEIsSUFBRSxXQUFXO0FBQ2IsSUFBRSxjQUFjO0FBQ2hCLElBQUUsZUFBZTtBQUNqQixJQUFFLG9CQUFvQjtBQUN0QixJQUFFLG9CQUFvQjtBQUN0QixJQUFFLGVBQWU7QUFDakIsSUFBRSxxQkFBcUI7QUFDdkIsSUFBRSxrQkFBa0I7QUFDcEIsSUFBRSx3QkFBd0I7QUFDMUIsSUFBRSwwQkFBMEI7QUFDNUIsSUFBRSwwQkFBMEI7QUFDNUIsSUFBRSxRQUFRO0FBQ1YsSUFBRSx1QkFBdUI7QUFDekIsQ0FBQyxDQUFDO0FBT0YsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBaUI7QUFBRyxDQUFBLENBQUE7QUFBcEIsaUJBQWlCLG9CQUw3QixRQUFRLENBQUMsVUFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZO0NBQUUsVUFBVSxFQUFFLGFBQWEsQ0FBQyxVQUNsRCxZQUFZLEVBQUUsQ0FBQyxHQUFHLFVBQVUsRUFBRSxrQkFBa0IsQ0FBQyxVQUNqRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsVUFBVSxFQUFFLGFBQWEsRUFBRSxHQUFHLFVBQVUsRUFBRSxrQkFBa0IsQ0FBQyxNQUN0RixDQUFDLElBQ1c7Y0FBaUIsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNqQztBQUFDLFNBRFksaUJBQWlCO0FBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IENoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi9jaGFydHMvY2hhcnQuY29tcG9uZW50JztcbmltcG9ydCB7IEJhc2VDaGFydENvbXBvbmVudCB9IGZyb20gJy4vYmFzZS1jaGFydC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXhlc01vZHVsZSB9IGZyb20gJy4vYXhlcy9heGVzLm1vZHVsZSc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnLi90b29sdGlwL3Rvb2x0aXAubW9kdWxlJztcbmltcG9ydCB7IENpcmNsZVNlcmllc0NvbXBvbmVudCB9IGZyb20gJy4vY2lyY2xlLXNlcmllcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ2lyY2xlQ29tcG9uZW50IH0gZnJvbSAnLi9jaXJjbGUuY29tcG9uZW50JztcbmltcG9ydCB7IEdyaWRQYW5lbENvbXBvbmVudCB9IGZyb20gJy4vZ3JpZC1wYW5lbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgR3JpZFBhbmVsU2VyaWVzQ29tcG9uZW50IH0gZnJvbSAnLi9ncmlkLXBhbmVsLXNlcmllcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3ZnTGluZWFyR3JhZGllbnRDb21wb25lbnQgfSBmcm9tICcuL3N2Zy1saW5lYXItZ3JhZGllbnQuY29tcG9uZW50JztcbmltcG9ydCB7IFN2Z1JhZGlhbEdyYWRpZW50Q29tcG9uZW50IH0gZnJvbSAnLi9zdmctcmFkaWFsLWdyYWRpZW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcmVhQ29tcG9uZW50IH0gZnJvbSAnLi9hcmVhLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb3VudFVwRGlyZWN0aXZlIH0gZnJvbSAnLi9jb3VudC9jb3VudC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVG9vbHRpcEFyZWEgfSBmcm9tICcuL3Rvb2x0aXAtYXJlYS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGltZWxpbmUgfSBmcm9tICcuL3RpbWVsaW5lL3RpbWVsaW5lLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBWaXNpYmlsaXR5T2JzZXJ2ZXIgfSBmcm9tICcuLi91dGlscy92aXNpYmlsaXR5LW9ic2VydmVyJztcbmltcG9ydCB7IExlZ2VuZENvbXBvbmVudCB9IGZyb20gJy4vbGVnZW5kL2xlZ2VuZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGVnZW5kRW50cnlDb21wb25lbnQgfSBmcm9tICcuL2xlZ2VuZC9sZWdlbmQtZW50cnkuY29tcG9uZW50JztcbmltcG9ydCB7IFNjYWxlTGVnZW5kQ29tcG9uZW50IH0gZnJvbSAnLi9sZWdlbmQvc2NhbGUtbGVnZW5kLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBZHZhbmNlZExlZ2VuZENvbXBvbmVudCB9IGZyb20gJy4vbGVnZW5kL2FkdmFuY2VkLWxlZ2VuZC5jb21wb25lbnQnO1xuXG5jb25zdCBDT01QT05FTlRTID0gW1xuICBBcmVhQ29tcG9uZW50LFxuICBCYXNlQ2hhcnRDb21wb25lbnQsXG4gIENvdW50VXBEaXJlY3RpdmUsXG4gIFRvb2x0aXBBcmVhLFxuICBDaGFydENvbXBvbmVudCxcbiAgTGVnZW5kQ29tcG9uZW50LFxuICBMZWdlbmRFbnRyeUNvbXBvbmVudCxcbiAgU2NhbGVMZWdlbmRDb21wb25lbnQsXG4gIENpcmNsZUNvbXBvbmVudCxcbiAgQ2lyY2xlU2VyaWVzQ29tcG9uZW50LFxuICBHcmlkUGFuZWxDb21wb25lbnQsXG4gIEdyaWRQYW5lbFNlcmllc0NvbXBvbmVudCxcbiAgU3ZnTGluZWFyR3JhZGllbnRDb21wb25lbnQsXG4gIFN2Z1JhZGlhbEdyYWRpZW50Q29tcG9uZW50LFxuICBUaW1lbGluZSxcbiAgQWR2YW5jZWRMZWdlbmRDb21wb25lbnRcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEF4ZXNNb2R1bGUsIFRvb2x0aXBNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFsuLi5DT01QT05FTlRTLCBWaXNpYmlsaXR5T2JzZXJ2ZXJdLFxuICBleHBvcnRzOiBbQ29tbW9uTW9kdWxlLCBBeGVzTW9kdWxlLCBUb29sdGlwTW9kdWxlLCAuLi5DT01QT05FTlRTLCBWaXNpYmlsaXR5T2JzZXJ2ZXJdXG59KVxuZXhwb3J0IGNsYXNzIENoYXJ0Q29tbW9uTW9kdWxlIHt9XG4iXX0=