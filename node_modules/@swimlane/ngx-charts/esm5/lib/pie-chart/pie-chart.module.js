import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { ChartCommonModule } from '../common/chart-common.module';
import { AdvancedPieChartComponent } from './advanced-pie-chart.component';
import { PieLabelComponent } from './pie-label.component';
import { PieArcComponent } from './pie-arc.component';
import { PieChartComponent } from './pie-chart.component';
import { PieGridComponent } from './pie-grid.component';
import { PieGridSeriesComponent } from './pie-grid-series.component';
import { PieSeriesComponent } from './pie-series.component';
import * as ɵngcc0 from '@angular/core';
var PieChartModule = /** @class */ (function () {
    function PieChartModule() {
    }
PieChartModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PieChartModule });
PieChartModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PieChartModule_Factory(t) { return new (t || PieChartModule)(); }, imports: [[ChartCommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PieChartModule, { declarations: function () { return [AdvancedPieChartComponent,
        PieLabelComponent,
        PieArcComponent,
        PieChartComponent,
        PieGridComponent,
        PieGridSeriesComponent,
        PieSeriesComponent]; }, imports: function () { return [ChartCommonModule]; }, exports: function () { return [AdvancedPieChartComponent,
        PieLabelComponent,
        PieArcComponent,
        PieChartComponent,
        PieGridComponent,
        PieGridSeriesComponent,
        PieSeriesComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PieChartModule, [{
        type: NgModule,
        args: [{
                imports: [ChartCommonModule],
                declarations: [
                    AdvancedPieChartComponent,
                    PieLabelComponent,
                    PieArcComponent,
                    PieChartComponent,
                    PieGridComponent,
                    PieGridSeriesComponent,
                    PieSeriesComponent
                ],
                exports: [
                    AdvancedPieChartComponent,
                    PieLabelComponent,
                    PieArcComponent,
                    PieChartComponent,
                    PieGridComponent,
                    PieGridSeriesComponent,
                    PieSeriesComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return PieChartModule;
}());
export { PieChartModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllLWNoYXJ0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L0Bzd2ltbGFuZS9uZ3gtY2hhcnRzL2xpYi9waWUtY2hhcnQvcGllLWNoYXJ0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7O0FBdUI1RDtBQUNtQixJQURuQjtBQUE0QixJQUFDLENBQUM7SUFBakIsY0FBYyx3QkFyQjFCLFFBQVEsQ0FBQyxjQUNSLE9BQU87Q0FBRSxDQUFDLGlCQUFpQixDQUFDLGNBQzVCLFlBQVksRUFBRSxrQkFDWix5QkFBeUIsa0JBQ3pCLGlCQUFpQixrQkFDakIsZUFBZTtTQUNmLGlCQUFpQixrQkFDakIsZ0JBQWdCLGtCQUNoQixzQkFBc0Isa0JBQ3RCLGtCQUFrQixjQUNuQixjQUNELE9BQU87QUFBRSxrQkFDUDtnQkFBeUI7U0FDekIsaUJBQWlCO2lCQUNqQjtNQUFlLGtCQUNmO1NBQWlCLGtCQUNqQixnQkFBZ0Isa0JBQ2hCLHNCQUFzQixrQkFDdEIsa0JBQWtCLGNBQ25CLFVBQ0Y7QUFBQyxRQUNXLGNBQWMsQ0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0RBQzlCO0FBQUMsSUFENEIscUJBQUM7QUFDN0IsQ0FENkIsQUFBOUIsSUFBOEI7QUFDOUIsU0FEYSxjQUFjO0FBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENoYXJ0Q29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NoYXJ0LWNvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgQWR2YW5jZWRQaWVDaGFydENvbXBvbmVudCB9IGZyb20gJy4vYWR2YW5jZWQtcGllLWNoYXJ0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQaWVMYWJlbENvbXBvbmVudCB9IGZyb20gJy4vcGllLWxhYmVsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQaWVBcmNDb21wb25lbnQgfSBmcm9tICcuL3BpZS1hcmMuY29tcG9uZW50JztcbmltcG9ydCB7IFBpZUNoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi9waWUtY2hhcnQuY29tcG9uZW50JztcbmltcG9ydCB7IFBpZUdyaWRDb21wb25lbnQgfSBmcm9tICcuL3BpZS1ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQaWVHcmlkU2VyaWVzQ29tcG9uZW50IH0gZnJvbSAnLi9waWUtZ3JpZC1zZXJpZXMuY29tcG9uZW50JztcbmltcG9ydCB7IFBpZVNlcmllc0NvbXBvbmVudCB9IGZyb20gJy4vcGllLXNlcmllcy5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ2hhcnRDb21tb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBBZHZhbmNlZFBpZUNoYXJ0Q29tcG9uZW50LFxuICAgIFBpZUxhYmVsQ29tcG9uZW50LFxuICAgIFBpZUFyY0NvbXBvbmVudCxcbiAgICBQaWVDaGFydENvbXBvbmVudCxcbiAgICBQaWVHcmlkQ29tcG9uZW50LFxuICAgIFBpZUdyaWRTZXJpZXNDb21wb25lbnQsXG4gICAgUGllU2VyaWVzQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBBZHZhbmNlZFBpZUNoYXJ0Q29tcG9uZW50LFxuICAgIFBpZUxhYmVsQ29tcG9uZW50LFxuICAgIFBpZUFyY0NvbXBvbmVudCxcbiAgICBQaWVDaGFydENvbXBvbmVudCxcbiAgICBQaWVHcmlkQ29tcG9uZW50LFxuICAgIFBpZUdyaWRTZXJpZXNDb21wb25lbnQsXG4gICAgUGllU2VyaWVzQ29tcG9uZW50XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgUGllQ2hhcnRNb2R1bGUge31cbiJdfQ==