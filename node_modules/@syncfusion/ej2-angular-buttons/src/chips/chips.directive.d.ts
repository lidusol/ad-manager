import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * `e-chip` directive represent a chip of the Angular ChipList.
 * ```html
 * <ejs-chiplist >
 *   <e-chips>
 *    <e-chip text='chip1'></e-chip>
 *    <e-chip text='chip2'></e-chip>
 *   </e-chips>
 * </ejs-chiplist>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class ChipDirective extends ComplexBase<ChipDirective> {
    private viewContainerRef;
    directivePropList: any;
    /**
     * This avatarIconCss property helps to customize avatar element.
     * @default ''
     */
    avatarIconCss: any;
    /**
     * This avatarText property helps to customize avatar content.
     * @default ''
     */
    avatarText: any;
    /**
     * This cssClass property helps to customize ChipList component.
     * @default ''
     */
    cssClass: any;
    /**
     * This enabled property helps to enable/disable ChipList component.
     * @default true
     * @blazordefaultvalue null
     * @blazortype bool?
     */
    enabled: any;
    /**
     * This leadingIconCss property helps to customize leading icon element.
     * @default ''
     */
    leadingIconCss: any;
    /**
     * This text property helps to render ChipList component.
     * @default ''
     */
    text: any;
    /**
     * This trailingIconCss property helps to customize trailing icon element.
     * @default ''
     */
    trailingIconCss: any;
    /**
     * This value property helps to store the ChipList component values.
     * @default ''
     */
    value: any;
    constructor(viewContainerRef: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChipDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ChipDirective, "e-chips>e-chip", never, { "avatarIconCss": "avatarIconCss"; "avatarText": "avatarText"; "cssClass": "cssClass"; "enabled": "enabled"; "leadingIconCss": "leadingIconCss"; "text": "text"; "trailingIconCss": "trailingIconCss"; "value": "value"; }, {}, never>;
}
/**
 * Chip Array Directive
 * @private
 */
export declare class ChipsDirective extends ArrayBase<ChipsDirective> {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChipsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ChipsDirective, "ejs-chiplist>e-chips", never, {}, {}, ["children"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcHMuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImNoaXBzLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21wbGV4QmFzZSwgQXJyYXlCYXNlIH0gZnJvbSAnQHN5bmNmdXNpb24vZWoyLWFuZ3VsYXItYmFzZSc7XG4vKipcbiAqIGBlLWNoaXBgIGRpcmVjdGl2ZSByZXByZXNlbnQgYSBjaGlwIG9mIHRoZSBBbmd1bGFyIENoaXBMaXN0LlxuICogYGBgaHRtbFxuICogPGVqcy1jaGlwbGlzdCA+XG4gKiAgIDxlLWNoaXBzPlxuICogICAgPGUtY2hpcCB0ZXh0PSdjaGlwMSc+PC9lLWNoaXA+XG4gKiAgICA8ZS1jaGlwIHRleHQ9J2NoaXAyJz48L2UtY2hpcD5cbiAqICAgPC9lLWNoaXBzPlxuICogPC9lanMtY2hpcGxpc3Q+XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hpcERpcmVjdGl2ZSBleHRlbmRzIENvbXBsZXhCYXNlPENoaXBEaXJlY3RpdmU+IHtcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXJSZWY7XG4gICAgZGlyZWN0aXZlUHJvcExpc3Q6IGFueTtcbiAgICAvKipcbiAgICAgKiBUaGlzIGF2YXRhckljb25Dc3MgcHJvcGVydHkgaGVscHMgdG8gY3VzdG9taXplIGF2YXRhciBlbGVtZW50LlxuICAgICAqIEBkZWZhdWx0ICcnXG4gICAgICovXG4gICAgYXZhdGFySWNvbkNzczogYW55O1xuICAgIC8qKlxuICAgICAqIFRoaXMgYXZhdGFyVGV4dCBwcm9wZXJ0eSBoZWxwcyB0byBjdXN0b21pemUgYXZhdGFyIGNvbnRlbnQuXG4gICAgICogQGRlZmF1bHQgJydcbiAgICAgKi9cbiAgICBhdmF0YXJUZXh0OiBhbnk7XG4gICAgLyoqXG4gICAgICogVGhpcyBjc3NDbGFzcyBwcm9wZXJ0eSBoZWxwcyB0byBjdXN0b21pemUgQ2hpcExpc3QgY29tcG9uZW50LlxuICAgICAqIEBkZWZhdWx0ICcnXG4gICAgICovXG4gICAgY3NzQ2xhc3M6IGFueTtcbiAgICAvKipcbiAgICAgKiBUaGlzIGVuYWJsZWQgcHJvcGVydHkgaGVscHMgdG8gZW5hYmxlL2Rpc2FibGUgQ2hpcExpc3QgY29tcG9uZW50LlxuICAgICAqIEBkZWZhdWx0IHRydWVcbiAgICAgKiBAYmxhem9yZGVmYXVsdHZhbHVlIG51bGxcbiAgICAgKiBAYmxhem9ydHlwZSBib29sP1xuICAgICAqL1xuICAgIGVuYWJsZWQ6IGFueTtcbiAgICAvKipcbiAgICAgKiBUaGlzIGxlYWRpbmdJY29uQ3NzIHByb3BlcnR5IGhlbHBzIHRvIGN1c3RvbWl6ZSBsZWFkaW5nIGljb24gZWxlbWVudC5cbiAgICAgKiBAZGVmYXVsdCAnJ1xuICAgICAqL1xuICAgIGxlYWRpbmdJY29uQ3NzOiBhbnk7XG4gICAgLyoqXG4gICAgICogVGhpcyB0ZXh0IHByb3BlcnR5IGhlbHBzIHRvIHJlbmRlciBDaGlwTGlzdCBjb21wb25lbnQuXG4gICAgICogQGRlZmF1bHQgJydcbiAgICAgKi9cbiAgICB0ZXh0OiBhbnk7XG4gICAgLyoqXG4gICAgICogVGhpcyB0cmFpbGluZ0ljb25Dc3MgcHJvcGVydHkgaGVscHMgdG8gY3VzdG9taXplIHRyYWlsaW5nIGljb24gZWxlbWVudC5cbiAgICAgKiBAZGVmYXVsdCAnJ1xuICAgICAqL1xuICAgIHRyYWlsaW5nSWNvbkNzczogYW55O1xuICAgIC8qKlxuICAgICAqIFRoaXMgdmFsdWUgcHJvcGVydHkgaGVscHMgdG8gc3RvcmUgdGhlIENoaXBMaXN0IGNvbXBvbmVudCB2YWx1ZXMuXG4gICAgICogQGRlZmF1bHQgJydcbiAgICAgKi9cbiAgICB2YWx1ZTogYW55O1xuICAgIGNvbnN0cnVjdG9yKHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYpO1xufVxuLyoqXG4gKiBDaGlwIEFycmF5IERpcmVjdGl2ZVxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2hpcHNEaXJlY3RpdmUgZXh0ZW5kcyBBcnJheUJhc2U8Q2hpcHNEaXJlY3RpdmU+IHtcbiAgICBjb25zdHJ1Y3RvcigpO1xufVxuIl19