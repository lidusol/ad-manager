import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';
import { IComponentBase } from '@syncfusion/ej2-angular-base';
import { DateRangePicker } from '@syncfusion/ej2-calendars';
import * as ɵngcc0 from '@angular/core';
export declare const inputs: string[];
export declare const outputs: string[];
export declare const twoWays: string[];
/**
 * Represents the Essential JS 2 Angular DateRangePicker Component.
 * ```html
 * <ejs-daterangepicker [startDate]='date' [endDate]='date'></ejs-daterangepicker>
 * ```
 */
export declare class DateRangePickerComponent extends DateRangePicker implements IComponentBase {
    private ngEle;
    private srenderer;
    private viewContainerRef;
    private injector;
    formCompContext: any;
    formContext: any;
    tagObjects: any;
    childPresets: any;
    tags: string[];
    startDateChange: any;
    endDateChange: any;
    valueChange: any;
    /**
     * Specifies the initial view of the Calendar when it is opened.
     * With the help of this property, initial view can be changed to year or decade view.
     * @default Month
     */
    start: any;
    end: any;
    private skipFromEvent;
    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);
    registerOnChange(registerFunction: (_: any) => void): void;
    registerOnTouched(registerFunction: () => void): void;
    writeValue(value: any): void;
    setDisabledState(disabled: boolean): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    registerEvents: (eventList: string[]) => void;
    addTwoWay: (propList: string[]) => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DateRangePickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DateRangePickerComponent, "ejs-daterangepicker", never, { "allowEdit": "allowEdit"; "calendarMode": "calendarMode"; "cssClass": "cssClass"; "dayHeaderFormat": "dayHeaderFormat"; "depth": "depth"; "enablePersistence": "enablePersistence"; "enableRtl": "enableRtl"; "enabled": "enabled"; "endDate": "endDate"; "firstDayOfWeek": "firstDayOfWeek"; "floatLabelType": "floatLabelType"; "format": "format"; "htmlAttributes": "htmlAttributes"; "keyConfigs": "keyConfigs"; "locale": "locale"; "max": "max"; "maxDays": "maxDays"; "min": "min"; "minDays": "minDays"; "placeholder": "placeholder"; "presets": "presets"; "readonly": "readonly"; "separator": "separator"; "serverTimezoneOffset": "serverTimezoneOffset"; "showClearButton": "showClearButton"; "start": "start"; "startDate": "startDate"; "strictMode": "strictMode"; "value": "value"; "weekNumber": "weekNumber"; "width": "width"; "zIndex": "zIndex"; }, { "blur": "blur"; "change": "change"; "cleared": "cleared"; "close": "close"; "created": "created"; "destroyed": "destroyed"; "focus": "focus"; "navigated": "navigated"; "open": "open"; "renderDayCell": "renderDayCell"; "select": "select"; "startDateChange": "startDateChange"; "endDateChange": "endDateChange"; "valueChange": "valueChange"; }, ["start", "end", "childPresets"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXJhbmdlcGlja2VyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJkYXRlcmFuZ2VwaWNrZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgVmlld0NvbnRhaW5lclJlZiwgUmVuZGVyZXIyLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUNvbXBvbmVudEJhc2UgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYW5ndWxhci1iYXNlJztcbmltcG9ydCB7IERhdGVSYW5nZVBpY2tlciB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1jYWxlbmRhcnMnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgaW5wdXRzOiBzdHJpbmdbXTtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IG91dHB1dHM6IHN0cmluZ1tdO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgdHdvV2F5czogc3RyaW5nW107XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIEVzc2VudGlhbCBKUyAyIEFuZ3VsYXIgRGF0ZVJhbmdlUGlja2VyIENvbXBvbmVudC5cbiAqIGBgYGh0bWxcbiAqIDxlanMtZGF0ZXJhbmdlcGlja2VyIFtzdGFydERhdGVdPSdkYXRlJyBbZW5kRGF0ZV09J2RhdGUnPjwvZWpzLWRhdGVyYW5nZXBpY2tlcj5cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRlUmFuZ2VQaWNrZXJDb21wb25lbnQgZXh0ZW5kcyBEYXRlUmFuZ2VQaWNrZXIgaW1wbGVtZW50cyBJQ29tcG9uZW50QmFzZSB7XG4gICAgcHJpdmF0ZSBuZ0VsZTtcbiAgICBwcml2YXRlIHNyZW5kZXJlcjtcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXJSZWY7XG4gICAgcHJpdmF0ZSBpbmplY3RvcjtcbiAgICBmb3JtQ29tcENvbnRleHQ6IGFueTtcbiAgICBmb3JtQ29udGV4dDogYW55O1xuICAgIHRhZ09iamVjdHM6IGFueTtcbiAgICBjaGlsZFByZXNldHM6IGFueTtcbiAgICB0YWdzOiBzdHJpbmdbXTtcbiAgICBzdGFydERhdGVDaGFuZ2U6IGFueTtcbiAgICBlbmREYXRlQ2hhbmdlOiBhbnk7XG4gICAgdmFsdWVDaGFuZ2U6IGFueTtcbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIGluaXRpYWwgdmlldyBvZiB0aGUgQ2FsZW5kYXIgd2hlbiBpdCBpcyBvcGVuZWQuXG4gICAgICogV2l0aCB0aGUgaGVscCBvZiB0aGlzIHByb3BlcnR5LCBpbml0aWFsIHZpZXcgY2FuIGJlIGNoYW5nZWQgdG8geWVhciBvciBkZWNhZGUgdmlldy5cbiAgICAgKiBAZGVmYXVsdCBNb250aFxuICAgICAqL1xuICAgIHN0YXJ0OiBhbnk7XG4gICAgZW5kOiBhbnk7XG4gICAgcHJpdmF0ZSBza2lwRnJvbUV2ZW50O1xuICAgIGNvbnN0cnVjdG9yKG5nRWxlOiBFbGVtZW50UmVmLCBzcmVuZGVyZXI6IFJlbmRlcmVyMiwgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZiwgaW5qZWN0b3I6IEluamVjdG9yKTtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKHJlZ2lzdGVyRnVuY3Rpb246IChfOiBhbnkpID0+IHZvaWQpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKHJlZ2lzdGVyRnVuY3Rpb246ICgpID0+IHZvaWQpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTdGF0ZShkaXNhYmxlZDogYm9vbGVhbik6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpOiB2b2lkO1xuICAgIHJlZ2lzdGVyRXZlbnRzOiAoZXZlbnRMaXN0OiBzdHJpbmdbXSkgPT4gdm9pZDtcbiAgICBhZGRUd29XYXk6IChwcm9wTGlzdDogc3RyaW5nW10pID0+IHZvaWQ7XG59XG4iXX0=