import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * 'e-presets' directive represent a presets of angular daterangepicker
 * It must be contained in a daterangepicker component(`ej-daterangepicker`).
 * ```html
 * <ejs-daterangepicker id='range'>
 *   <e-presets>
 *    <e-preset label='Last Week' [start]=new Date('06/07/2018') [end]= new Date('06/01/2018')></e-preset>
 *    <e-preset label='Last Month' [start]=new Date('06/07/2018') [end]= new Date('05/07/2018')></e-preset>
 *   </e-presets>
 * </ejs-daterangepicker>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class PresetDirective extends ComplexBase<PresetDirective> {
    private viewContainerRef;
    directivePropList: any;
    /**
     * Defines the end date of the preset range
     */
    end: any;
    /**
     * Defines the label string of the preset range.
     */
    label: any;
    /**
     * Defines the start date of the preset range.
     */
    start: any;
    constructor(viewContainerRef: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PresetDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PresetDirective, "e-presets>e-preset", never, { "end": "end"; "label": "label"; "start": "start"; }, {}, never>;
}
/**
 * Preset Array Directive
 * @private
 */
export declare class PresetsDirective extends ArrayBase<PresetsDirective> {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PresetsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PresetsDirective, "ejs-daterangepicker>e-presets", never, {}, {}, ["children"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2V0cy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicHJlc2V0cy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21wbGV4QmFzZSwgQXJyYXlCYXNlIH0gZnJvbSAnQHN5bmNmdXNpb24vZWoyLWFuZ3VsYXItYmFzZSc7XG4vKipcbiAqICdlLXByZXNldHMnIGRpcmVjdGl2ZSByZXByZXNlbnQgYSBwcmVzZXRzIG9mIGFuZ3VsYXIgZGF0ZXJhbmdlcGlja2VyXG4gKiBJdCBtdXN0IGJlIGNvbnRhaW5lZCBpbiBhIGRhdGVyYW5nZXBpY2tlciBjb21wb25lbnQoYGVqLWRhdGVyYW5nZXBpY2tlcmApLlxuICogYGBgaHRtbFxuICogPGVqcy1kYXRlcmFuZ2VwaWNrZXIgaWQ9J3JhbmdlJz5cbiAqICAgPGUtcHJlc2V0cz5cbiAqICAgIDxlLXByZXNldCBsYWJlbD0nTGFzdCBXZWVrJyBbc3RhcnRdPW5ldyBEYXRlKCcwNi8wNy8yMDE4JykgW2VuZF09IG5ldyBEYXRlKCcwNi8wMS8yMDE4Jyk+PC9lLXByZXNldD5cbiAqICAgIDxlLXByZXNldCBsYWJlbD0nTGFzdCBNb250aCcgW3N0YXJ0XT1uZXcgRGF0ZSgnMDYvMDcvMjAxOCcpIFtlbmRdPSBuZXcgRGF0ZSgnMDUvMDcvMjAxOCcpPjwvZS1wcmVzZXQ+XG4gKiAgIDwvZS1wcmVzZXRzPlxuICogPC9lanMtZGF0ZXJhbmdlcGlja2VyPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFByZXNldERpcmVjdGl2ZSBleHRlbmRzIENvbXBsZXhCYXNlPFByZXNldERpcmVjdGl2ZT4ge1xuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjtcbiAgICBkaXJlY3RpdmVQcm9wTGlzdDogYW55O1xuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIGVuZCBkYXRlIG9mIHRoZSBwcmVzZXQgcmFuZ2VcbiAgICAgKi9cbiAgICBlbmQ6IGFueTtcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIHRoZSBsYWJlbCBzdHJpbmcgb2YgdGhlIHByZXNldCByYW5nZS5cbiAgICAgKi9cbiAgICBsYWJlbDogYW55O1xuICAgIC8qKlxuICAgICAqIERlZmluZXMgdGhlIHN0YXJ0IGRhdGUgb2YgdGhlIHByZXNldCByYW5nZS5cbiAgICAgKi9cbiAgICBzdGFydDogYW55O1xuICAgIGNvbnN0cnVjdG9yKHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYpO1xufVxuLyoqXG4gKiBQcmVzZXQgQXJyYXkgRGlyZWN0aXZlXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQcmVzZXRzRGlyZWN0aXZlIGV4dGVuZHMgQXJyYXlCYXNlPFByZXNldHNEaXJlY3RpdmU+IHtcbiAgICBjb25zdHJ1Y3RvcigpO1xufVxuIl19