{"version":3,"file":"ej2-angular-charts.es5.js","sources":["~/@syncfusion/ej2-angular-charts/src/chart/trendlines.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/segments.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/series.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/striplines.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/categories.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/multilevellabels.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/axes.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/rows.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/columns.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/annotations.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/selecteddataindexes.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/indicators.directive.ts","~/@syncfusion/ej2-angular-charts/src/chart/chart.component.ts","~/@syncfusion/ej2-angular-charts/src/chart/chart.module.ts","~/@syncfusion/ej2-angular-charts/src/chart/chart-all.module.ts","~/@syncfusion/ej2-angular-charts/src/accumulation-chart/series.directive.ts","~/@syncfusion/ej2-angular-charts/src/accumulation-chart/annotations.directive.ts","~/@syncfusion/ej2-angular-charts/src/accumulation-chart/accumulationchart.component.ts","~/@syncfusion/ej2-angular-charts/src/accumulation-chart/accumulationchart.module.ts","~/@syncfusion/ej2-angular-charts/src/accumulation-chart/accumulationchart-all.module.ts","~/@syncfusion/ej2-angular-charts/src/range-navigator/series.directive.ts","~/@syncfusion/ej2-angular-charts/src/range-navigator/rangenavigator.component.ts","~/@syncfusion/ej2-angular-charts/src/range-navigator/rangenavigator.module.ts","~/@syncfusion/ej2-angular-charts/src/range-navigator/rangenavigator-all.module.ts","~/@syncfusion/ej2-angular-charts/src/sparkline/rangebandsettings.directive.ts","~/@syncfusion/ej2-angular-charts/src/sparkline/sparkline.component.ts","~/@syncfusion/ej2-angular-charts/src/sparkline/sparkline.module.ts","~/@syncfusion/ej2-angular-charts/src/sparkline/sparkline-all.module.ts","~/@syncfusion/ej2-angular-charts/src/smithchart/series.directive.ts","~/@syncfusion/ej2-angular-charts/src/smithchart/smithchart.component.ts","~/@syncfusion/ej2-angular-charts/src/smithchart/smithchart.module.ts","~/@syncfusion/ej2-angular-charts/src/smithchart/smithchart-all.module.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/trendlines.directive.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/series.directive.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/axes.directive.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/rows.directive.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/annotations.directive.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/selecteddataindexes.directive.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/periods.directive.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/stockevents.directive.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/indicators.directive.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/stockchart.component.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/stockchart.module.ts","~/@syncfusion/ej2-angular-charts/src/stock-chart/stockchart-all.module.ts","~/@syncfusion/ej2-angular-charts/src/bullet-chart/ranges.directive.ts","~/@syncfusion/ej2-angular-charts/src/bullet-chart/bulletchart.component.ts","~/@syncfusion/ej2-angular-charts/src/bullet-chart/bulletchart.module.ts","~/@syncfusion/ej2-angular-charts/src/bullet-chart/bulletchart-all.module.ts","~/@syncfusion/ej2-angular-charts/ej2-angular-charts.ts"],"names":["input","outputs","__decorate","__metadata","inputs","twoWays"],"mappings":"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","sourcesContent":["import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animation', 'backwardForecast', 'dashArray', 'enableTooltip', 'fill', 'forwardForecast', 'intercept', 'legendShape', 'marker', 'name', 'period', 'polynomialOrder', 'type', 'visible', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-series-collection>\n * <e-series>\n * <e-trendlines>\n * <e-trendline>\n * </e-trendline>\n * </e-trendlines>\n * </e-series-collection>\n * ```\n */\nexport class TrendlineDirective extends ComplexBase<TrendlineDirective> {\npublic directivePropList: any;\n/**\n * Defines the type of the trendline\n * \\@default 'Linear'\n */\npublic type: any;\n/**\n * Options to customize the animation for trendlines\n */\npublic animation: any;\n/**\n * Defines the period, by which the trend has to backward forecast\n * \\@default 0\n */\npublic backwardForecast: any;\n/**\n * Defines the pattern of dashes and gaps to stroke.\n * \\@default '0'\n */\npublic dashArray: any;\n/**\n * Enables/disables tooltip for trendlines\n * \\@default true\n */\npublic enableTooltip: any;\n/**\n * Defines the fill color of trendline\n * \\@default ''\n */\npublic fill: any;\n/**\n * Defines the period, by which the trend has to forward forecast\n * \\@default 0\n */\npublic forwardForecast: any;\n/**\n * Defines the intercept of the trendline\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic intercept: any;\n/**\n * Sets the legend shape of the trendline\n * \\@default 'SeriesType'\n */\npublic legendShape: any;\n/**\n * Options to customize the marker for trendlines\n * @deprecated\n */\npublic marker: any;\n/**\n * Defines the name of trendline\n * \\@default ''\n */\npublic name: any;\n/**\n * Defines the period, the price changes over which will be considered to predict moving average trend line\n * \\@default 2\n */\npublic period: any;\n/**\n * Defines the polynomial order of the polynomial trendline\n * \\@default 2\n */\npublic polynomialOrder: any;\n/**\n * Specifies the visibility of trendline.\n * \\@default true\n */\npublic visible: any;\n/**\n * Defines the width of the trendline\n * \\@default 1\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-series>e-trendlines>e-trendline',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction TrendlineDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTrendlineDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTrendlineDirective.ctorParameters;\n/** @type {?} */\nTrendlineDirective.prototype.directivePropList;\n/**\n * Defines the type of the trendline\n * \\@default 'Linear'\n * @type {?}\n */\nTrendlineDirective.prototype.type;\n/**\n * Options to customize the animation for trendlines\n * @type {?}\n */\nTrendlineDirective.prototype.animation;\n/**\n * Defines the period, by which the trend has to backward forecast\n * \\@default 0\n * @type {?}\n */\nTrendlineDirective.prototype.backwardForecast;\n/**\n * Defines the pattern of dashes and gaps to stroke.\n * \\@default '0'\n * @type {?}\n */\nTrendlineDirective.prototype.dashArray;\n/**\n * Enables/disables tooltip for trendlines\n * \\@default true\n * @type {?}\n */\nTrendlineDirective.prototype.enableTooltip;\n/**\n * Defines the fill color of trendline\n * \\@default ''\n * @type {?}\n */\nTrendlineDirective.prototype.fill;\n/**\n * Defines the period, by which the trend has to forward forecast\n * \\@default 0\n * @type {?}\n */\nTrendlineDirective.prototype.forwardForecast;\n/**\n * Defines the intercept of the trendline\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nTrendlineDirective.prototype.intercept;\n/**\n * Sets the legend shape of the trendline\n * \\@default 'SeriesType'\n * @type {?}\n */\nTrendlineDirective.prototype.legendShape;\n/**\n * Options to customize the marker for trendlines\n * @deprecated\n * @type {?}\n */\nTrendlineDirective.prototype.marker;\n/**\n * Defines the name of trendline\n * \\@default ''\n * @type {?}\n */\nTrendlineDirective.prototype.name;\n/**\n * Defines the period, the price changes over which will be considered to predict moving average trend line\n * \\@default 2\n * @type {?}\n */\nTrendlineDirective.prototype.period;\n/**\n * Defines the polynomial order of the polynomial trendline\n * \\@default 2\n * @type {?}\n */\nTrendlineDirective.prototype.polynomialOrder;\n/**\n * Specifies the visibility of trendline.\n * \\@default true\n * @type {?}\n */\nTrendlineDirective.prototype.visible;\n/**\n * Defines the width of the trendline\n * \\@default 1\n * @type {?}\n */\nTrendlineDirective.prototype.width;\n/** @type {?} */\nTrendlineDirective.prototype.viewContainerRef;\n}\n\n/**\n * Trendline Array Directive\n */\nexport class TrendlinesDirective extends ArrayBase<TrendlinesDirective> {\nconstructor() {\n        super('trendlines');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-series>e-trendlines',\n    queries: {\n        children: new ContentChildren(TrendlineDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TrendlinesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTrendlinesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTrendlinesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['color', 'dashArray', 'value'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-series-collection>\n * <e-series>\n * <e-segments>\n * <e-segment>\n * </e-segment>\n * </e-segments>\n * </e-series-collection>\n * ```\n */\nexport class SegmentDirective extends ComplexBase<SegmentDirective> {\npublic directivePropList: any;\n/**\n * Defines the color of a region.\n * \\@default null\n */\npublic color: any;\n/**\n * Defines the pattern of dashes and gaps to stroke.\n * \\@default '0'\n */\npublic dashArray: any;\n/**\n * Defines the starting point of region.\n * \\@default null\n */\npublic value: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-series>e-segments>e-segment',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction SegmentDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSegmentDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSegmentDirective.ctorParameters;\n/** @type {?} */\nSegmentDirective.prototype.directivePropList;\n/**\n * Defines the color of a region.\n * \\@default null\n * @type {?}\n */\nSegmentDirective.prototype.color;\n/**\n * Defines the pattern of dashes and gaps to stroke.\n * \\@default '0'\n * @type {?}\n */\nSegmentDirective.prototype.dashArray;\n/**\n * Defines the starting point of region.\n * \\@default null\n * @type {?}\n */\nSegmentDirective.prototype.value;\n/** @type {?} */\nSegmentDirective.prototype.viewContainerRef;\n}\n\n/**\n * Segment Array Directive\n */\nexport class SegmentsDirective extends ArrayBase<SegmentsDirective> {\nconstructor() {\n        super('segments');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-series>e-segments',\n    queries: {\n        children: new ContentChildren(SegmentDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SegmentsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSegmentsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSegmentsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { TrendlinesDirective } from './trendlines.directive';\nimport { SegmentsDirective } from './segments.directive';\n\nlet /** @type {?} */ input: string[] = ['animation', 'bearFillColor', 'binInterval', 'border', 'boxPlotMode', 'bullFillColor', 'cardinalSplineTension', 'close', 'columnSpacing', 'columnWidth', 'connector', 'cornerRadius', 'dashArray', 'dataSource', 'dragSettings', 'drawType', 'emptyPointSettings', 'enableComplexProperty', 'enableSolidCandles', 'enableTooltip', 'errorBar', 'fill', 'high', 'intermediateSumIndexes', 'isClosed', 'legendShape', 'low', 'marker', 'maxRadius', 'minRadius', 'name', 'negativeFillColor', 'opacity', 'open', 'pointColorMapping', 'query', 'segmentAxis', 'segments', 'selectionStyle', 'showMean', 'showNormalDistribution', 'size', 'splineType', 'stackingGroup', 'sumIndexes', 'summaryFillColor', 'tooltipFormat', 'tooltipMappingName', 'trendlines', 'type', 'visible', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName', 'yName', 'zOrder'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-series-collection>\n * <e-series></e-series>\n * </e-series-collection>\n * ```\n */\nexport class SeriesDirective extends ComplexBase<SeriesDirective> {\npublic directivePropList: any;\npublic childTrendlines: any;\npublic childSegments: any;\npublic tags: string[] = ['trendlines', 'segments'];\n/**\n * The type of the series are \n * * Line \n * * Column \n * * Area \n * * Bar \n * * Histogram \n * * StackingColumn \n * * StackingArea \n * * StackingBar \n * * StepLine \n * * StepArea \n * * Scatter \n * * Spline \n * * StackingColumn100 \n * * StackingBar100 \n * * StackingArea100 \n * * RangeColumn \n * * Hilo \n * * HiloOpenClose \n * * Waterfall \n * * RangeArea \n * * Bubble \n * * Candle \n * * Polar \n * * Radar \n * * BoxAndWhisker \n * * Pareto\n * \\@default 'Line'\n */\npublic type: any;\n/**\n * Options to customizing animation for the series.\n */\npublic animation: any;\n/**\n * This property is used in financial charts to visualize the price movements in stock. \n * It defines the color of the candle/point, when the opening price is less than the closing price.\n * \\@default '#2ecd71'\n */\npublic bearFillColor: any;\n/**\n * The bin interval of each histogram points.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic binInterval: any;\n/**\n * Options to customizing the border of the series. This is applicable only for `Column` and `Bar` type series.\n */\npublic border: any;\n/**\n * The mode of the box and whisker char series. They are, \n * Exclusive \n * Inclusive \n * Normal\n * \\@default 'Normal'\n */\npublic boxPlotMode: any;\n/**\n * This property is used in financial charts to visualize the price movements in stock. \n * It defines the color of the candle/point, when the opening price is higher than the closing price.\n * \\@default '#e74c3d'\n */\npublic bullFillColor: any;\n/**\n * It defines tension of cardinal spline types\n * \\@default 0.5\n */\npublic cardinalSplineTension: any;\n/**\n * The DataSource field that contains the close value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic close: any;\n/**\n * To render the column series points with particular column spacing. It takes value from 0 - 1.\n * \\@default 0\n */\npublic columnSpacing: any;\n/**\n * To render the column series points with particular column width. If the series type is histogram the \n * default value is 1 otherwise 0.7.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic columnWidth: any;\n/**\n * Defines the appearance of line connecting adjacent points in waterfall charts.\n */\npublic connector: any;\n/**\n * To render the column series points with particular rounded corner.\n */\npublic cornerRadius: any;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n */\npublic dashArray: any;\n/**\n * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n * \n * \\@default ''\n */\npublic dataSource: any;\n/**\n * Options to customize the drag settings for series\n */\npublic dragSettings: any;\n/**\n * Type of series to be drawn in radar or polar series. They are \n *  'Line' \n *  'Column' \n *  'Area' \n *  'Scatter' \n *  'Spline' \n *  'StackingColumn' \n *  'StackingArea' \n *  'RangeColumn' \n *  'SplineArea'\n * \\@default 'Line'\n */\npublic drawType: any;\n/**\n * options to customize the empty points in series\n */\npublic emptyPointSettings: any;\n/**\n * This property used to improve chart performance via data mapping for series dataSource.\n * \\@default false\n */\npublic enableComplexProperty: any;\n/**\n * This property is applicable for candle series. \n * It enables/disables to visually compare the current values with the previous values in stock.\n * \\@default false\n */\npublic enableSolidCandles: any;\n/**\n * If set true, the Tooltip for series will be visible.\n * \\@default true\n */\npublic enableTooltip: any;\n/**\n * Options for displaying and customizing error bar for individual point in a series.\n */\npublic errorBar: any;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n */\npublic fill: any;\n/**\n * The DataSource field that contains the high value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic high: any;\n/**\n * Defines the collection of indexes of the intermediate summary columns in waterfall charts.\n * \\@default []\n * \\@asptype int[]\n */\npublic intermediateSumIndexes: any;\n/**\n * Specifies whether to join start and end point of a line/area series used in polar/radar chart to form a closed path.\n * \\@default true\n */\npublic isClosed: any;\n/**\n * The shape of the legend. Each series has its own legend shape. They are, \n * * Circle \n * * Rectangle \n * * Triangle \n * * Diamond \n * * Cross \n * * HorizontalLine \n * * VerticalLine \n * * Pentagon \n * * InvertedTriangle \n * * SeriesType\n * \\@default 'SeriesType'\n */\npublic legendShape: any;\n/**\n * The DataSource field that contains the low value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic low: any;\n/**\n * Options for displaying and customizing markers for individual points in a series.\n */\npublic marker: any;\n/**\n * Maximum radius\n * \\@default 3\n */\npublic maxRadius: any;\n/**\n * Minimum radius\n * \\@default 1\n */\npublic minRadius: any;\n/**\n * The name of the series visible in legend.\n * \\@default ''\n */\npublic name: any;\n/**\n * Defines the visual representation of the negative changes in waterfall charts.\n * \\@default '#C64E4A'\n */\npublic negativeFillColor: any;\n/**\n * The opacity of the series.\n * \\@default 1\n */\npublic opacity: any;\n/**\n * The DataSource field that contains the open value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic open: any;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n */\npublic pointColorMapping: any;\n/**\n * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n * \\@default ''\n */\npublic query: any;\n/**\n * Defines the axis, based on which the line series will be split.\n */\npublic segmentAxis: any;\n/**\n * Defines the collection of regions that helps to differentiate a line series.\n */\npublic segments: any;\n/**\n * Custom style for the selected series or points.\n * \\@default null\n */\npublic selectionStyle: any;\n/**\n * If set true, the mean value for box and whisker will be visible.\n * \\@default true\n */\npublic showMean: any;\n/**\n * The normal distribution of histogram series.\n * \\@default false\n */\npublic showNormalDistribution: any;\n/**\n * The DataSource field that contains the size value of y\n * \\@default ''\n */\npublic size: any;\n/**\n * Defines type of spline to be rendered.\n * \\@default 'Natural'\n */\npublic splineType: any;\n/**\n * This property allows grouping series in `stacked column / bar` charts. \n * Any string value can be provided to the stackingGroup property. \n * If any two or above series have the same value, those series will be grouped together.\n * \\@default ''\n */\npublic stackingGroup: any;\n/**\n * Defines the collection of indexes of the overall summary columns in waterfall charts.\n * \\@default []\n * \\@asptype int[]\n */\npublic sumIndexes: any;\n/**\n * Defines the visual representation of the summaries in waterfall charts.\n * \\@default '#4E81BC'\n */\npublic summaryFillColor: any;\n/**\n * user can format now each series tooltip format separately.\n * \\@default ''\n */\npublic tooltipFormat: any;\n/**\n * The provided value will be considered as a Tooltip name\n * \\@default ''\n */\npublic tooltipMappingName: any;\n/**\n * Defines the collection of trendlines that are used to predict the trend\n */\npublic trendlines: any;\n/**\n * Specifies the visibility of series.\n * \\@default true\n */\npublic visible: any;\n/**\n * Defines the data source field that contains the volume value in candle charts \n * It is applicable for financial series and technical indicators\n * \\@default ''\n */\npublic volume: any;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n */\npublic width: any;\n/**\n * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n */\npublic xAxisName: any;\n/**\n * The DataSource field that contains the x value. \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic xName: any;\n/**\n * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n */\npublic yAxisName: any;\n/**\n * The DataSource field that contains the y value.\n * \\@default ''\n */\npublic yName: any;\n/**\n * The z order of the series.\n * \\@default 0\n */\npublic zOrder: any;\n    \n    @Template()\npublic dataLabel_template: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-series-collection>e-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childTrendlines: new ContentChild(TrendlinesDirective), \n        childSegments: new ContentChild(SegmentsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataLabel_template': [{ type: ContentChild, args: ['dataLabelTemplate', ] },],\n};\n}\n\nfunction SeriesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSeriesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSeriesDirective.ctorParameters;\n/** @type {?} */\nSeriesDirective.propDecorators;\n/** @type {?} */\nSeriesDirective.prototype.directivePropList;\n/** @type {?} */\nSeriesDirective.prototype.childTrendlines;\n/** @type {?} */\nSeriesDirective.prototype.childSegments;\n/** @type {?} */\nSeriesDirective.prototype.tags;\n/**\n * The type of the series are \n * * Line \n * * Column \n * * Area \n * * Bar \n * * Histogram \n * * StackingColumn \n * * StackingArea \n * * StackingBar \n * * StepLine \n * * StepArea \n * * Scatter \n * * Spline \n * * StackingColumn100 \n * * StackingBar100 \n * * StackingArea100 \n * * RangeColumn \n * * Hilo \n * * HiloOpenClose \n * * Waterfall \n * * RangeArea \n * * Bubble \n * * Candle \n * * Polar \n * * Radar \n * * BoxAndWhisker \n * * Pareto\n * \\@default 'Line'\n * @type {?}\n */\nSeriesDirective.prototype.type;\n/**\n * Options to customizing animation for the series.\n * @type {?}\n */\nSeriesDirective.prototype.animation;\n/**\n * This property is used in financial charts to visualize the price movements in stock. \n * It defines the color of the candle/point, when the opening price is less than the closing price.\n * \\@default '#2ecd71'\n * @type {?}\n */\nSeriesDirective.prototype.bearFillColor;\n/**\n * The bin interval of each histogram points.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nSeriesDirective.prototype.binInterval;\n/**\n * Options to customizing the border of the series. This is applicable only for `Column` and `Bar` type series.\n * @type {?}\n */\nSeriesDirective.prototype.border;\n/**\n * The mode of the box and whisker char series. They are, \n * Exclusive \n * Inclusive \n * Normal\n * \\@default 'Normal'\n * @type {?}\n */\nSeriesDirective.prototype.boxPlotMode;\n/**\n * This property is used in financial charts to visualize the price movements in stock. \n * It defines the color of the candle/point, when the opening price is higher than the closing price.\n * \\@default '#e74c3d'\n * @type {?}\n */\nSeriesDirective.prototype.bullFillColor;\n/**\n * It defines tension of cardinal spline types\n * \\@default 0.5\n * @type {?}\n */\nSeriesDirective.prototype.cardinalSplineTension;\n/**\n * The DataSource field that contains the close value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.close;\n/**\n * To render the column series points with particular column spacing. It takes value from 0 - 1.\n * \\@default 0\n * @type {?}\n */\nSeriesDirective.prototype.columnSpacing;\n/**\n * To render the column series points with particular column width. If the series type is histogram the \n * default value is 1 otherwise 0.7.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nSeriesDirective.prototype.columnWidth;\n/**\n * Defines the appearance of line connecting adjacent points in waterfall charts.\n * @type {?}\n */\nSeriesDirective.prototype.connector;\n/**\n * To render the column series points with particular rounded corner.\n * @type {?}\n */\nSeriesDirective.prototype.cornerRadius;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n * @type {?}\n */\nSeriesDirective.prototype.dashArray;\n/**\n * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n * \n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.dataSource;\n/**\n * Options to customize the drag settings for series\n * @type {?}\n */\nSeriesDirective.prototype.dragSettings;\n/**\n * Type of series to be drawn in radar or polar series. They are \n *  'Line' \n *  'Column' \n *  'Area' \n *  'Scatter' \n *  'Spline' \n *  'StackingColumn' \n *  'StackingArea' \n *  'RangeColumn' \n *  'SplineArea'\n * \\@default 'Line'\n * @type {?}\n */\nSeriesDirective.prototype.drawType;\n/**\n * options to customize the empty points in series\n * @type {?}\n */\nSeriesDirective.prototype.emptyPointSettings;\n/**\n * This property used to improve chart performance via data mapping for series dataSource.\n * \\@default false\n * @type {?}\n */\nSeriesDirective.prototype.enableComplexProperty;\n/**\n * This property is applicable for candle series. \n * It enables/disables to visually compare the current values with the previous values in stock.\n * \\@default false\n * @type {?}\n */\nSeriesDirective.prototype.enableSolidCandles;\n/**\n * If set true, the Tooltip for series will be visible.\n * \\@default true\n * @type {?}\n */\nSeriesDirective.prototype.enableTooltip;\n/**\n * Options for displaying and customizing error bar for individual point in a series.\n * @type {?}\n */\nSeriesDirective.prototype.errorBar;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n * @type {?}\n */\nSeriesDirective.prototype.fill;\n/**\n * The DataSource field that contains the high value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.high;\n/**\n * Defines the collection of indexes of the intermediate summary columns in waterfall charts.\n * \\@default []\n * \\@asptype int[]\n * @type {?}\n */\nSeriesDirective.prototype.intermediateSumIndexes;\n/**\n * Specifies whether to join start and end point of a line/area series used in polar/radar chart to form a closed path.\n * \\@default true\n * @type {?}\n */\nSeriesDirective.prototype.isClosed;\n/**\n * The shape of the legend. Each series has its own legend shape. They are, \n * * Circle \n * * Rectangle \n * * Triangle \n * * Diamond \n * * Cross \n * * HorizontalLine \n * * VerticalLine \n * * Pentagon \n * * InvertedTriangle \n * * SeriesType\n * \\@default 'SeriesType'\n * @type {?}\n */\nSeriesDirective.prototype.legendShape;\n/**\n * The DataSource field that contains the low value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.low;\n/**\n * Options for displaying and customizing markers for individual points in a series.\n * @type {?}\n */\nSeriesDirective.prototype.marker;\n/**\n * Maximum radius\n * \\@default 3\n * @type {?}\n */\nSeriesDirective.prototype.maxRadius;\n/**\n * Minimum radius\n * \\@default 1\n * @type {?}\n */\nSeriesDirective.prototype.minRadius;\n/**\n * The name of the series visible in legend.\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.name;\n/**\n * Defines the visual representation of the negative changes in waterfall charts.\n * \\@default '#C64E4A'\n * @type {?}\n */\nSeriesDirective.prototype.negativeFillColor;\n/**\n * The opacity of the series.\n * \\@default 1\n * @type {?}\n */\nSeriesDirective.prototype.opacity;\n/**\n * The DataSource field that contains the open value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.open;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.pointColorMapping;\n/**\n * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.query;\n/**\n * Defines the axis, based on which the line series will be split.\n * @type {?}\n */\nSeriesDirective.prototype.segmentAxis;\n/**\n * Defines the collection of regions that helps to differentiate a line series.\n * @type {?}\n */\nSeriesDirective.prototype.segments;\n/**\n * Custom style for the selected series or points.\n * \\@default null\n * @type {?}\n */\nSeriesDirective.prototype.selectionStyle;\n/**\n * If set true, the mean value for box and whisker will be visible.\n * \\@default true\n * @type {?}\n */\nSeriesDirective.prototype.showMean;\n/**\n * The normal distribution of histogram series.\n * \\@default false\n * @type {?}\n */\nSeriesDirective.prototype.showNormalDistribution;\n/**\n * The DataSource field that contains the size value of y\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.size;\n/**\n * Defines type of spline to be rendered.\n * \\@default 'Natural'\n * @type {?}\n */\nSeriesDirective.prototype.splineType;\n/**\n * This property allows grouping series in `stacked column / bar` charts. \n * Any string value can be provided to the stackingGroup property. \n * If any two or above series have the same value, those series will be grouped together.\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.stackingGroup;\n/**\n * Defines the collection of indexes of the overall summary columns in waterfall charts.\n * \\@default []\n * \\@asptype int[]\n * @type {?}\n */\nSeriesDirective.prototype.sumIndexes;\n/**\n * Defines the visual representation of the summaries in waterfall charts.\n * \\@default '#4E81BC'\n * @type {?}\n */\nSeriesDirective.prototype.summaryFillColor;\n/**\n * user can format now each series tooltip format separately.\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.tooltipFormat;\n/**\n * The provided value will be considered as a Tooltip name\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.tooltipMappingName;\n/**\n * Defines the collection of trendlines that are used to predict the trend\n * @type {?}\n */\nSeriesDirective.prototype.trendlines;\n/**\n * Specifies the visibility of series.\n * \\@default true\n * @type {?}\n */\nSeriesDirective.prototype.visible;\n/**\n * Defines the data source field that contains the volume value in candle charts \n * It is applicable for financial series and technical indicators\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.volume;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n * @type {?}\n */\nSeriesDirective.prototype.width;\n/**\n * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n * @type {?}\n */\nSeriesDirective.prototype.xAxisName;\n/**\n * The DataSource field that contains the x value. \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.xName;\n/**\n * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n * @type {?}\n */\nSeriesDirective.prototype.yAxisName;\n/**\n * The DataSource field that contains the y value.\n * \\@default ''\n * @type {?}\n */\nSeriesDirective.prototype.yName;\n/**\n * The z order of the series.\n * \\@default 0\n * @type {?}\n */\nSeriesDirective.prototype.zOrder;\n/** @type {?} */\nSeriesDirective.prototype.dataLabel_template;\n/** @type {?} */\nSeriesDirective.prototype.viewContainerRef;\n}\n\n/**\n * Series Array Directive\n */\nexport class SeriesCollectionDirective extends ArrayBase<SeriesCollectionDirective> {\nconstructor() {\n        super('series');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-chart>e-series-collection',\n    queries: {\n        children: new ContentChildren(SeriesDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SeriesCollectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSeriesCollectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSeriesCollectionDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['border', 'color', 'dashArray', 'end', 'horizontalAlignment', 'isRepeat', 'isSegmented', 'opacity', 'repeatEvery', 'repeatUntil', 'rotation', 'segmentAxisName', 'segmentEnd', 'segmentStart', 'size', 'sizeType', 'start', 'startFromAxis', 'text', 'textStyle', 'verticalAlignment', 'visible', 'zIndex'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * StripLine Directive\n * ```html\n * <e-axis>\n * <e-striplines>\n * <e-stripline></e-stripline>\n * </e-striplines>\n * </e-axis>\n * ```\n */\nexport class StripLineDirective extends ComplexBase<StripLineDirective> {\npublic directivePropList: any;\n/**\n * Border of the strip line.\n */\npublic border: any;\n/**\n * Color of the strip line.\n * \\@default '#808080'\n */\npublic color: any;\n/**\n * Dash Array of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic dashArray: any;\n/**\n * End value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic end: any;\n/**\n * Defines the position of the strip line text horizontally. They are, \n * * Start: Places the strip line text at the start. \n * * Middle: Places the strip line text in the middle. \n * * End: Places the strip line text at the end.\n * \\@default 'Middle'\n */\npublic horizontalAlignment: any;\n/**\n * isRepeat value of the strip line.\n * \\@default false\n * \\@aspdefaultvalueignore\n */\npublic isRepeat: any;\n/**\n * isSegmented value of the strip line\n * \\@default false\n * \\@aspdefaultvalueignore\n */\npublic isSegmented: any;\n/**\n * Strip line Opacity\n * \\@default 1\n */\npublic opacity: any;\n/**\n * repeatEvery value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic repeatEvery: any;\n/**\n * repeatUntil value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic repeatUntil: any;\n/**\n * The angle to which the strip line text gets rotated.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic rotation: any;\n/**\n * segmentAxisName of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic segmentAxisName: any;\n/**\n * segmentEnd value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic segmentEnd: any;\n/**\n * segmentStart value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic segmentStart: any;\n/**\n * Size of the strip line, when it starts from the origin.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic size: any;\n/**\n * Size type of the strip line\n * \\@default Auto\n */\npublic sizeType: any;\n/**\n * Start value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic start: any;\n/**\n *  If set true, strip line get render from axis origin. \n *  \\@default false\n */\npublic startFromAxis: any;\n/**\n * Strip line text.\n * \\@default ''\n */\npublic text: any;\n/**\n * Options to customize the strip line text.\n */\npublic textStyle: any;\n/**\n * Defines the position of the strip line text vertically. They are, \n * * Start: Places the strip line text at the start. \n * * Middle: Places the strip line text in the middle. \n * * End: Places the strip line text at the end.\n * \\@default 'Middle'\n */\npublic verticalAlignment: any;\n/**\n * If set true, strip line for axis renders.\n * \\@default true\n */\npublic visible: any;\n/**\n * Specifies the order of the strip line. They are, \n * * Behind: Places the strip line behind the series elements. \n * * Over: Places the strip line over the series elements.\n * \\@default 'Behind'\n */\npublic zIndex: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axis>e-striplines>e-stripline',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StripLineDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStripLineDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStripLineDirective.ctorParameters;\n/** @type {?} */\nStripLineDirective.prototype.directivePropList;\n/**\n * Border of the strip line.\n * @type {?}\n */\nStripLineDirective.prototype.border;\n/**\n * Color of the strip line.\n * \\@default '#808080'\n * @type {?}\n */\nStripLineDirective.prototype.color;\n/**\n * Dash Array of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.dashArray;\n/**\n * End value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.end;\n/**\n * Defines the position of the strip line text horizontally. They are, \n * * Start: Places the strip line text at the start. \n * * Middle: Places the strip line text in the middle. \n * * End: Places the strip line text at the end.\n * \\@default 'Middle'\n * @type {?}\n */\nStripLineDirective.prototype.horizontalAlignment;\n/**\n * isRepeat value of the strip line.\n * \\@default false\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.isRepeat;\n/**\n * isSegmented value of the strip line\n * \\@default false\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.isSegmented;\n/**\n * Strip line Opacity\n * \\@default 1\n * @type {?}\n */\nStripLineDirective.prototype.opacity;\n/**\n * repeatEvery value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.repeatEvery;\n/**\n * repeatUntil value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.repeatUntil;\n/**\n * The angle to which the strip line text gets rotated.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.rotation;\n/**\n * segmentAxisName of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.segmentAxisName;\n/**\n * segmentEnd value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.segmentEnd;\n/**\n * segmentStart value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.segmentStart;\n/**\n * Size of the strip line, when it starts from the origin.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.size;\n/**\n * Size type of the strip line\n * \\@default Auto\n * @type {?}\n */\nStripLineDirective.prototype.sizeType;\n/**\n * Start value of the strip line.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStripLineDirective.prototype.start;\n/**\n *  If set true, strip line get render from axis origin. \n *  \\@default false\n * @type {?}\n */\nStripLineDirective.prototype.startFromAxis;\n/**\n * Strip line text.\n * \\@default ''\n * @type {?}\n */\nStripLineDirective.prototype.text;\n/**\n * Options to customize the strip line text.\n * @type {?}\n */\nStripLineDirective.prototype.textStyle;\n/**\n * Defines the position of the strip line text vertically. They are, \n * * Start: Places the strip line text at the start. \n * * Middle: Places the strip line text in the middle. \n * * End: Places the strip line text at the end.\n * \\@default 'Middle'\n * @type {?}\n */\nStripLineDirective.prototype.verticalAlignment;\n/**\n * If set true, strip line for axis renders.\n * \\@default true\n * @type {?}\n */\nStripLineDirective.prototype.visible;\n/**\n * Specifies the order of the strip line. They are, \n * * Behind: Places the strip line behind the series elements. \n * * Over: Places the strip line over the series elements.\n * \\@default 'Behind'\n * @type {?}\n */\nStripLineDirective.prototype.zIndex;\n/** @type {?} */\nStripLineDirective.prototype.viewContainerRef;\n}\n\n/**\n * StripLine Array Directive\n */\nexport class StripLinesDirective extends ArrayBase<StripLinesDirective> {\nconstructor() {\n        super('striplines');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axis>e-striplines',\n    queries: {\n        children: new ContentChildren(StripLineDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StripLinesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStripLinesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStripLinesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['customAttributes', 'end', 'maximumTextWidth', 'start', 'text', 'type'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * MultiLevelLabels Directive\n * ```html\n * <e-multilevellabels>\n * <e-multilevellabel>\n * <e-Categories>\n * <e-Category>\n * </e-Category>\n * </e-Categories>\n * </e-multilevellabel>\n * </e-multilevellabels>\n * ```\n */\nexport class CategoryDirective extends ComplexBase<CategoryDirective> {\npublic directivePropList: any;\n/**\n * Border type for labels \n * * Rectangle \n * * Without Top Border \n * * Without Top and BottomBorder \n * * Without Border \n * * Brace \n * * CurlyBrace\n * \\@default 'Rectangle'\n * \\@aspdefaultvalueignore\n * \\@blazordefaultvalueignore\n */\npublic type: any;\n/**\n * multi level labels custom data.\n * \\@default null\n */\npublic customAttributes: any;\n/**\n * End value of the multi level labels\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic end: any;\n/**\n * Maximum width of the text for multi level labels.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic maximumTextWidth: any;\n/**\n * Start value of the multi level labels\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic start: any;\n/**\n * multi level labels text.\n * \\@default ''\n */\npublic text: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-multilevellabel>e-categories>e-category',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction CategoryDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCategoryDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCategoryDirective.ctorParameters;\n/** @type {?} */\nCategoryDirective.prototype.directivePropList;\n/**\n * Border type for labels \n * * Rectangle \n * * Without Top Border \n * * Without Top and BottomBorder \n * * Without Border \n * * Brace \n * * CurlyBrace\n * \\@default 'Rectangle'\n * \\@aspdefaultvalueignore\n * \\@blazordefaultvalueignore\n * @type {?}\n */\nCategoryDirective.prototype.type;\n/**\n * multi level labels custom data.\n * \\@default null\n * @type {?}\n */\nCategoryDirective.prototype.customAttributes;\n/**\n * End value of the multi level labels\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nCategoryDirective.prototype.end;\n/**\n * Maximum width of the text for multi level labels.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nCategoryDirective.prototype.maximumTextWidth;\n/**\n * Start value of the multi level labels\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nCategoryDirective.prototype.start;\n/**\n * multi level labels text.\n * \\@default ''\n * @type {?}\n */\nCategoryDirective.prototype.text;\n/** @type {?} */\nCategoryDirective.prototype.viewContainerRef;\n}\n\n/**\n * Category Array Directive\n */\nexport class CategoriesDirective extends ArrayBase<CategoriesDirective> {\nconstructor() {\n        super('categories');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-multilevellabel>e-categories',\n    queries: {\n        children: new ContentChildren(CategoryDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CategoriesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCategoriesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCategoriesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { CategoriesDirective } from './categories.directive';\n\nlet /** @type {?} */ input: string[] = ['alignment', 'border', 'categories', 'overflow', 'textStyle'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * MultiLevelLabel Directive\n * ```html\n * <e-axis>\n * <e-multilevellabels>\n * <e-multilevellabel></e-multilevellabel>\n * </e-multilevellabels>\n * </e-axis>\n * ```\n */\nexport class MultiLevelLabelDirective extends ComplexBase<MultiLevelLabelDirective> {\npublic directivePropList: any;\npublic childCategories: any;\npublic tags: string[] = ['categories'];\n/**\n * Defines the position of the multi level labels. They are, \n * * Near: Places the multi level labels at Near. \n * * Center: Places the multi level labels at Center. \n * * Far: Places the multi level labels at Far.\n * \\@default 'Center'\n */\npublic alignment: any;\n/**\n * Border of the multi level labels.\n */\npublic border: any;\n/**\n * multi level categories for multi level labels.\n */\npublic categories: any;\n/**\n * Defines the textOverFlow for multi level labels. They are, \n * * Trim: Trim textOverflow for multi level labels. \n * * Wrap: Wrap textOverflow for multi level labels. \n * * none: None textOverflow for multi level labels.\n * \\@default 'Wrap'\n */\npublic overflow: any;\n/**\n * Options to customize the multi level labels.\n */\npublic textStyle: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axis>e-multilevellabels>e-multilevellabel',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childCategories: new ContentChild(CategoriesDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction MultiLevelLabelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMultiLevelLabelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMultiLevelLabelDirective.ctorParameters;\n/** @type {?} */\nMultiLevelLabelDirective.prototype.directivePropList;\n/** @type {?} */\nMultiLevelLabelDirective.prototype.childCategories;\n/** @type {?} */\nMultiLevelLabelDirective.prototype.tags;\n/**\n * Defines the position of the multi level labels. They are, \n * * Near: Places the multi level labels at Near. \n * * Center: Places the multi level labels at Center. \n * * Far: Places the multi level labels at Far.\n * \\@default 'Center'\n * @type {?}\n */\nMultiLevelLabelDirective.prototype.alignment;\n/**\n * Border of the multi level labels.\n * @type {?}\n */\nMultiLevelLabelDirective.prototype.border;\n/**\n * multi level categories for multi level labels.\n * @type {?}\n */\nMultiLevelLabelDirective.prototype.categories;\n/**\n * Defines the textOverFlow for multi level labels. They are, \n * * Trim: Trim textOverflow for multi level labels. \n * * Wrap: Wrap textOverflow for multi level labels. \n * * none: None textOverflow for multi level labels.\n * \\@default 'Wrap'\n * @type {?}\n */\nMultiLevelLabelDirective.prototype.overflow;\n/**\n * Options to customize the multi level labels.\n * @type {?}\n */\nMultiLevelLabelDirective.prototype.textStyle;\n/** @type {?} */\nMultiLevelLabelDirective.prototype.viewContainerRef;\n}\n\n/**\n * MultiLevelLabel Array Directive\n */\nexport class MultiLevelLabelsDirective extends ArrayBase<MultiLevelLabelsDirective> {\nconstructor() {\n        super('multilevellabels');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axis>e-multilevellabels',\n    queries: {\n        children: new ContentChildren(MultiLevelLabelDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MultiLevelLabelsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMultiLevelLabelsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMultiLevelLabelsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { StripLinesDirective } from './striplines.directive';\nimport { MultiLevelLabelsDirective } from './multilevellabels.directive';\n\nlet /** @type {?} */ input: string[] = ['border', 'coefficient', 'columnIndex', 'crossesAt', 'crossesInAxis', 'crosshairTooltip', 'description', 'desiredIntervals', 'edgeLabelPlacement', 'enableAutoIntervalOnZooming', 'enableTrim', 'interval', 'intervalType', 'isIndexed', 'isInversed', 'labelFormat', 'labelIntersectAction', 'labelPlacement', 'labelPosition', 'labelRotation', 'labelStyle', 'lineStyle', 'logBase', 'majorGridLines', 'majorTickLines', 'maximum', 'maximumLabelWidth', 'maximumLabels', 'minimum', 'minorGridLines', 'minorTickLines', 'minorTicksPerInterval', 'multiLevelLabels', 'name', 'opposedPosition', 'placeNextToAxisLine', 'plotOffset', 'plotOffsetBottom', 'plotOffsetLeft', 'plotOffsetRight', 'plotOffsetTop', 'rangePadding', 'rowIndex', 'scrollbarSettings', 'skeleton', 'skeletonType', 'span', 'startAngle', 'stripLines', 'tabIndex', 'tickPosition', 'title', 'titleStyle', 'valueType', 'visible', 'zoomFactor', 'zoomPosition'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Axis Directive\n * ```html\n * <e-axes><e-axis></e-axis></e-axes>\n * ```\n */\nexport class AxisDirective extends ComplexBase<AxisDirective> {\npublic directivePropList: any;\npublic childStripLines: any;\npublic childMultiLevelLabels: any;\npublic tags: string[] = ['stripLines', 'multiLevelLabels'];\n/**\n * Border of the multi level labels.\n */\npublic border: any;\n/**\n * The polar radar radius position.\n * \\@default 100\n */\npublic coefficient: any;\n/**\n * Specifies the index of the column where the axis is associated, \n * when the chart area is divided into multiple plot areas by using `columns`. \n * \n * \\@default 0\n */\npublic columnIndex: any;\n/**\n * Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n * \\@default null\n */\npublic crossesAt: any;\n/**\n * Specifies axis name with which the axis line has to be crossed\n * \\@default null\n */\npublic crossesInAxis: any;\n/**\n * Options to customize the crosshair ToolTip.\n */\npublic crosshairTooltip: any;\n/**\n * Description for axis and its element.\n * \\@default null\n */\npublic description: any;\n/**\n * With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic desiredIntervals: any;\n/**\n * Specifies the position of labels at the edge of the axis.They are, \n * * None: No action will be performed. \n * * Hide: Edge label will be hidden. \n * * Shift: Shifts the edge labels.\n * \\@default 'None'\n */\npublic edgeLabelPlacement: any;\n/**\n * If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n * \\@default true\n */\npublic enableAutoIntervalOnZooming: any;\n/**\n * Specifies the Trim property for an axis.\n * \\@default false\n */\npublic enableTrim: any;\n/**\n * Specifies the interval for an axis.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic interval: any;\n/**\n * Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are, \n * * Auto: Defines the interval of the axis based on data. \n * * Years: Defines the interval of the axis in years. \n * * Months: Defines the interval of the axis in months. \n * * Days: Defines the interval of the axis in days. \n * * Hours: Defines the interval of the axis in hours. \n * * Minutes: Defines the interval of the axis in minutes.\n * \\@default 'Auto'\n */\npublic intervalType: any;\n/**\n * Specifies indexed category  axis.\n * \\@default false\n */\npublic isIndexed: any;\n/**\n * It specifies whether the axis to be rendered in inversed manner or not.\n * \\@default false\n */\npublic isInversed: any;\n/**\n * Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc. \n * It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n * \\@default ''\n */\npublic labelFormat: any;\n/**\n * Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90` \n * when the axis labels intersect with each other.They are, \n * * None: Shows all the labels. \n * * Hide: Hides the label when it intersects. \n * * Trim: Trim the label when it intersects. \n * * Wrap: Wrap the label when it intersects. \n * * MultipleRows: Shows the label in MultipleRows when it intersects. \n * * Rotate45: Rotates the label to 45 degree when it intersects. \n * * Rotate90: Rotates the label to 90 degree when it intersects.\n * \\@default Trim\n */\npublic labelIntersectAction: any;\n/**\n * Specifies the placement of a label for category axis. They are, \n * * betweenTicks: Renders the label between the ticks. \n * * onTicks: Renders the label on the ticks.\n * \\@default 'BetweenTicks'\n */\npublic labelPlacement: any;\n/**\n * Specifies the placement of a labels to the axis line. They are, \n * * inside: Renders the labels inside to the axis line. \n * * outside: Renders the labels outside to the axis line.\n * \\@default 'Outside'\n */\npublic labelPosition: any;\n/**\n * The angle to which the axis label gets rotated.\n * \\@default 0\n */\npublic labelRotation: any;\n/**\n * Options to customize the axis label.\n */\npublic labelStyle: any;\n/**\n * Options for customizing axis lines.\n */\npublic lineStyle: any;\n/**\n * The base value for logarithmic axis. It requires `valueType` to be `Logarithmic`.\n * \\@default 10\n */\npublic logBase: any;\n/**\n * Options for customizing major grid lines.\n */\npublic majorGridLines: any;\n/**\n * Options for customizing major tick lines.\n */\npublic majorTickLines: any;\n/**\n * Specifies the maximum range of an axis.\n * \\@default null\n */\npublic maximum: any;\n/**\n * Specifies the maximum width of an axis label.\n * \\@default 34.\n */\npublic maximumLabelWidth: any;\n/**\n * The maximum number of label count per 100 pixels with respect to the axis length.\n * \\@default 3\n */\npublic maximumLabels: any;\n/**\n * Specifies the minimum range of an axis.\n * \\@default null\n */\npublic minimum: any;\n/**\n * Options for customizing minor grid lines.\n */\npublic minorGridLines: any;\n/**\n * Options for customizing minor tick lines.\n */\npublic minorTickLines: any;\n/**\n * Specifies the number of minor ticks per interval.\n * \\@default 0\n */\npublic minorTicksPerInterval: any;\n/**\n * Specifies the multi level labels collection for the axis\n */\npublic multiLevelLabels: any;\n/**\n * Unique identifier of an axis. \n * To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n * \\@default ''\n */\npublic name: any;\n/**\n * If set to true, the axis will render at the opposite side of its default position.\n * \\@default false\n */\npublic opposedPosition: any;\n/**\n * Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line\n * \\@default true\n */\npublic placeNextToAxisLine: any;\n/**\n * Left and right padding for the plot area in pixels.\n * \\@default 0\n */\npublic plotOffset: any;\n/**\n * Bottom padding for the plot area in pixels.\n * \\@default null\n */\npublic plotOffsetBottom: any;\n/**\n * Left padding for the plot area in pixels.\n * \\@default null\n */\npublic plotOffsetLeft: any;\n/**\n * Right padding for the plot area in pixels.\n * \\@default null\n */\npublic plotOffsetRight: any;\n/**\n * Top padding for the plot area in pixels.\n * \\@default null\n */\npublic plotOffsetTop: any;\n/**\n * Specifies the padding for the axis range in terms of interval.They are, \n * * none: Padding cannot be applied to the axis. \n * * normal: Padding is applied to the axis based on the range calculation. \n * * additional: Interval of the axis is added as padding to the minimum and maximum values of the range. \n * * round: Axis range is rounded to the nearest possible value divided by the interval.\n * \\@default 'Auto'\n */\npublic rangePadding: any;\n/**\n * Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `rows`. \n * \n * \\@default 0\n */\npublic rowIndex: any;\n/**\n * Option to customize scrollbar with lazy loading\n */\npublic scrollbarSettings: any;\n/**\n * Specifies the skeleton format in which the dateTime format will process.\n * \\@default ''\n */\npublic skeleton: any;\n/**\n * It specifies the type of format to be used in dateTime format process.\n * \\@default 'DateTime'\n */\npublic skeletonType: any;\n/**\n * Specifies the number of `columns` or `rows` an axis has to span horizontally or vertically.\n * \\@default 1\n */\npublic span: any;\n/**\n * The start angle for the series.\n * \\@default 0\n */\npublic startAngle: any;\n/**\n * Specifies the stripLine collection for the axis\n */\npublic stripLines: any;\n/**\n * TabIndex value for the axis.\n * \\@default 2\n */\npublic tabIndex: any;\n/**\n * Specifies the placement of a ticks to the axis line. They are, \n * * inside: Renders the ticks inside to the axis line. \n * * outside: Renders the ticks outside to the axis line.\n * \\@default 'Outside'\n */\npublic tickPosition: any;\n/**\n * Specifies the title of an axis.\n * \\@default ''\n */\npublic title: any;\n/**\n * Options for customizing the axis title.\n */\npublic titleStyle: any;\n/**\n * Specifies the type of data the axis is handling. \n * * Double:  Renders a numeric axis. \n * * DateTime: Renders a dateTime axis. \n * * Category: Renders a category axis. \n * * Logarithmic: Renders a log axis.\n * \\@default 'Double'\n * \\@blazortype Syncfusion.EJ2.Blazor.Charts.ValueType\n * \\@isenumeration true\n */\npublic valueType: any;\n/**\n * If set to true, axis label will be visible.\n * \\@default true\n */\npublic visible: any;\n/**\n * The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n * \\@default 1\n */\npublic zoomFactor: any;\n/**\n * Position of the zoomed axis. Value ranges from 0 to 1.\n * \\@default 0\n */\npublic zoomPosition: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axes>e-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childStripLines: new ContentChild(StripLinesDirective), \n        childMultiLevelLabels: new ContentChild(MultiLevelLabelsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction AxisDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxisDirective.ctorParameters;\n/** @type {?} */\nAxisDirective.prototype.directivePropList;\n/** @type {?} */\nAxisDirective.prototype.childStripLines;\n/** @type {?} */\nAxisDirective.prototype.childMultiLevelLabels;\n/** @type {?} */\nAxisDirective.prototype.tags;\n/**\n * Border of the multi level labels.\n * @type {?}\n */\nAxisDirective.prototype.border;\n/**\n * The polar radar radius position.\n * \\@default 100\n * @type {?}\n */\nAxisDirective.prototype.coefficient;\n/**\n * Specifies the index of the column where the axis is associated, \n * when the chart area is divided into multiple plot areas by using `columns`. \n * \n * \\@default 0\n * @type {?}\n */\nAxisDirective.prototype.columnIndex;\n/**\n * Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n * \\@default null\n * @type {?}\n */\nAxisDirective.prototype.crossesAt;\n/**\n * Specifies axis name with which the axis line has to be crossed\n * \\@default null\n * @type {?}\n */\nAxisDirective.prototype.crossesInAxis;\n/**\n * Options to customize the crosshair ToolTip.\n * @type {?}\n */\nAxisDirective.prototype.crosshairTooltip;\n/**\n * Description for axis and its element.\n * \\@default null\n * @type {?}\n */\nAxisDirective.prototype.description;\n/**\n * With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nAxisDirective.prototype.desiredIntervals;\n/**\n * Specifies the position of labels at the edge of the axis.They are, \n * * None: No action will be performed. \n * * Hide: Edge label will be hidden. \n * * Shift: Shifts the edge labels.\n * \\@default 'None'\n * @type {?}\n */\nAxisDirective.prototype.edgeLabelPlacement;\n/**\n * If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n * \\@default true\n * @type {?}\n */\nAxisDirective.prototype.enableAutoIntervalOnZooming;\n/**\n * Specifies the Trim property for an axis.\n * \\@default false\n * @type {?}\n */\nAxisDirective.prototype.enableTrim;\n/**\n * Specifies the interval for an axis.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nAxisDirective.prototype.interval;\n/**\n * Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are, \n * * Auto: Defines the interval of the axis based on data. \n * * Years: Defines the interval of the axis in years. \n * * Months: Defines the interval of the axis in months. \n * * Days: Defines the interval of the axis in days. \n * * Hours: Defines the interval of the axis in hours. \n * * Minutes: Defines the interval of the axis in minutes.\n * \\@default 'Auto'\n * @type {?}\n */\nAxisDirective.prototype.intervalType;\n/**\n * Specifies indexed category  axis.\n * \\@default false\n * @type {?}\n */\nAxisDirective.prototype.isIndexed;\n/**\n * It specifies whether the axis to be rendered in inversed manner or not.\n * \\@default false\n * @type {?}\n */\nAxisDirective.prototype.isInversed;\n/**\n * Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc. \n * It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n * \\@default ''\n * @type {?}\n */\nAxisDirective.prototype.labelFormat;\n/**\n * Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90` \n * when the axis labels intersect with each other.They are, \n * * None: Shows all the labels. \n * * Hide: Hides the label when it intersects. \n * * Trim: Trim the label when it intersects. \n * * Wrap: Wrap the label when it intersects. \n * * MultipleRows: Shows the label in MultipleRows when it intersects. \n * * Rotate45: Rotates the label to 45 degree when it intersects. \n * * Rotate90: Rotates the label to 90 degree when it intersects.\n * \\@default Trim\n * @type {?}\n */\nAxisDirective.prototype.labelIntersectAction;\n/**\n * Specifies the placement of a label for category axis. They are, \n * * betweenTicks: Renders the label between the ticks. \n * * onTicks: Renders the label on the ticks.\n * \\@default 'BetweenTicks'\n * @type {?}\n */\nAxisDirective.prototype.labelPlacement;\n/**\n * Specifies the placement of a labels to the axis line. They are, \n * * inside: Renders the labels inside to the axis line. \n * * outside: Renders the labels outside to the axis line.\n * \\@default 'Outside'\n * @type {?}\n */\nAxisDirective.prototype.labelPosition;\n/**\n * The angle to which the axis label gets rotated.\n * \\@default 0\n * @type {?}\n */\nAxisDirective.prototype.labelRotation;\n/**\n * Options to customize the axis label.\n * @type {?}\n */\nAxisDirective.prototype.labelStyle;\n/**\n * Options for customizing axis lines.\n * @type {?}\n */\nAxisDirective.prototype.lineStyle;\n/**\n * The base value for logarithmic axis. It requires `valueType` to be `Logarithmic`.\n * \\@default 10\n * @type {?}\n */\nAxisDirective.prototype.logBase;\n/**\n * Options for customizing major grid lines.\n * @type {?}\n */\nAxisDirective.prototype.majorGridLines;\n/**\n * Options for customizing major tick lines.\n * @type {?}\n */\nAxisDirective.prototype.majorTickLines;\n/**\n * Specifies the maximum range of an axis.\n * \\@default null\n * @type {?}\n */\nAxisDirective.prototype.maximum;\n/**\n * Specifies the maximum width of an axis label.\n * \\@default 34.\n * @type {?}\n */\nAxisDirective.prototype.maximumLabelWidth;\n/**\n * The maximum number of label count per 100 pixels with respect to the axis length.\n * \\@default 3\n * @type {?}\n */\nAxisDirective.prototype.maximumLabels;\n/**\n * Specifies the minimum range of an axis.\n * \\@default null\n * @type {?}\n */\nAxisDirective.prototype.minimum;\n/**\n * Options for customizing minor grid lines.\n * @type {?}\n */\nAxisDirective.prototype.minorGridLines;\n/**\n * Options for customizing minor tick lines.\n * @type {?}\n */\nAxisDirective.prototype.minorTickLines;\n/**\n * Specifies the number of minor ticks per interval.\n * \\@default 0\n * @type {?}\n */\nAxisDirective.prototype.minorTicksPerInterval;\n/**\n * Specifies the multi level labels collection for the axis\n * @type {?}\n */\nAxisDirective.prototype.multiLevelLabels;\n/**\n * Unique identifier of an axis. \n * To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n * \\@default ''\n * @type {?}\n */\nAxisDirective.prototype.name;\n/**\n * If set to true, the axis will render at the opposite side of its default position.\n * \\@default false\n * @type {?}\n */\nAxisDirective.prototype.opposedPosition;\n/**\n * Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line\n * \\@default true\n * @type {?}\n */\nAxisDirective.prototype.placeNextToAxisLine;\n/**\n * Left and right padding for the plot area in pixels.\n * \\@default 0\n * @type {?}\n */\nAxisDirective.prototype.plotOffset;\n/**\n * Bottom padding for the plot area in pixels.\n * \\@default null\n * @type {?}\n */\nAxisDirective.prototype.plotOffsetBottom;\n/**\n * Left padding for the plot area in pixels.\n * \\@default null\n * @type {?}\n */\nAxisDirective.prototype.plotOffsetLeft;\n/**\n * Right padding for the plot area in pixels.\n * \\@default null\n * @type {?}\n */\nAxisDirective.prototype.plotOffsetRight;\n/**\n * Top padding for the plot area in pixels.\n * \\@default null\n * @type {?}\n */\nAxisDirective.prototype.plotOffsetTop;\n/**\n * Specifies the padding for the axis range in terms of interval.They are, \n * * none: Padding cannot be applied to the axis. \n * * normal: Padding is applied to the axis based on the range calculation. \n * * additional: Interval of the axis is added as padding to the minimum and maximum values of the range. \n * * round: Axis range is rounded to the nearest possible value divided by the interval.\n * \\@default 'Auto'\n * @type {?}\n */\nAxisDirective.prototype.rangePadding;\n/**\n * Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `rows`. \n * \n * \\@default 0\n * @type {?}\n */\nAxisDirective.prototype.rowIndex;\n/**\n * Option to customize scrollbar with lazy loading\n * @type {?}\n */\nAxisDirective.prototype.scrollbarSettings;\n/**\n * Specifies the skeleton format in which the dateTime format will process.\n * \\@default ''\n * @type {?}\n */\nAxisDirective.prototype.skeleton;\n/**\n * It specifies the type of format to be used in dateTime format process.\n * \\@default 'DateTime'\n * @type {?}\n */\nAxisDirective.prototype.skeletonType;\n/**\n * Specifies the number of `columns` or `rows` an axis has to span horizontally or vertically.\n * \\@default 1\n * @type {?}\n */\nAxisDirective.prototype.span;\n/**\n * The start angle for the series.\n * \\@default 0\n * @type {?}\n */\nAxisDirective.prototype.startAngle;\n/**\n * Specifies the stripLine collection for the axis\n * @type {?}\n */\nAxisDirective.prototype.stripLines;\n/**\n * TabIndex value for the axis.\n * \\@default 2\n * @type {?}\n */\nAxisDirective.prototype.tabIndex;\n/**\n * Specifies the placement of a ticks to the axis line. They are, \n * * inside: Renders the ticks inside to the axis line. \n * * outside: Renders the ticks outside to the axis line.\n * \\@default 'Outside'\n * @type {?}\n */\nAxisDirective.prototype.tickPosition;\n/**\n * Specifies the title of an axis.\n * \\@default ''\n * @type {?}\n */\nAxisDirective.prototype.title;\n/**\n * Options for customizing the axis title.\n * @type {?}\n */\nAxisDirective.prototype.titleStyle;\n/**\n * Specifies the type of data the axis is handling. \n * * Double:  Renders a numeric axis. \n * * DateTime: Renders a dateTime axis. \n * * Category: Renders a category axis. \n * * Logarithmic: Renders a log axis.\n * \\@default 'Double'\n * \\@blazortype Syncfusion.EJ2.Blazor.Charts.ValueType\n * \\@isenumeration true\n * @type {?}\n */\nAxisDirective.prototype.valueType;\n/**\n * If set to true, axis label will be visible.\n * \\@default true\n * @type {?}\n */\nAxisDirective.prototype.visible;\n/**\n * The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n * \\@default 1\n * @type {?}\n */\nAxisDirective.prototype.zoomFactor;\n/**\n * Position of the zoomed axis. Value ranges from 0 to 1.\n * \\@default 0\n * @type {?}\n */\nAxisDirective.prototype.zoomPosition;\n/** @type {?} */\nAxisDirective.prototype.viewContainerRef;\n}\n\n/**\n * Axis Array Directive\n */\nexport class AxesDirective extends ArrayBase<AxesDirective> {\nconstructor() {\n        super('axes');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-chart>e-axes',\n    queries: {\n        children: new ContentChildren(AxisDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AxesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['border', 'height'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Row Directive\n * ```html\n * <e-rows><e-row></e-row><e-rows>\n * ```\n */\nexport class RowDirective extends ComplexBase<RowDirective> {\npublic directivePropList: any;\n/**\n * Options to customize the border of the rows.\n */\npublic border: any;\n/**\n * The height of the row as a string accept input both as '100px' and '100%'. \n * If specified as '100%, row renders to the full height of its chart.\n * \\@default '100%'\n */\npublic height: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-rows>e-row',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RowDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRowDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRowDirective.ctorParameters;\n/** @type {?} */\nRowDirective.prototype.directivePropList;\n/**\n * Options to customize the border of the rows.\n * @type {?}\n */\nRowDirective.prototype.border;\n/**\n * The height of the row as a string accept input both as '100px' and '100%'. \n * If specified as '100%, row renders to the full height of its chart.\n * \\@default '100%'\n * @type {?}\n */\nRowDirective.prototype.height;\n/** @type {?} */\nRowDirective.prototype.viewContainerRef;\n}\n\n/**\n * Row Array Directive\n */\nexport class RowsDirective extends ArrayBase<RowsDirective> {\nconstructor() {\n        super('rows');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-chart>e-rows',\n    queries: {\n        children: new ContentChildren(RowDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RowsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRowsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRowsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['border', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Column Directive\n * ```html\n * <e-columns><e-column></e-column><e-columns>\n * ```\n */\nexport class ColumnDirective extends ComplexBase<ColumnDirective> {\npublic directivePropList: any;\n/**\n * Options to customize the border of the columns.\n */\npublic border: any;\n/**\n * The width of the column as a string accepts input both as like '100px' or '100%'. \n * If specified as '100%, column renders to the full width of its chart.\n * \\@default '100%'\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-columns>e-column',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction ColumnDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnDirective.ctorParameters;\n/** @type {?} */\nColumnDirective.prototype.directivePropList;\n/**\n * Options to customize the border of the columns.\n * @type {?}\n */\nColumnDirective.prototype.border;\n/**\n * The width of the column as a string accepts input both as like '100px' or '100%'. \n * If specified as '100%, column renders to the full width of its chart.\n * \\@default '100%'\n * @type {?}\n */\nColumnDirective.prototype.width;\n/** @type {?} */\nColumnDirective.prototype.viewContainerRef;\n}\n\n/**\n * Column Array Directive\n */\nexport class ColumnsDirective extends ArrayBase<ColumnsDirective> {\nconstructor() {\n        super('columns');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-chart>e-columns',\n    queries: {\n        children: new ContentChildren(ColumnDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ColumnsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nColumnsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nColumnsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['content', 'coordinateUnits', 'description', 'horizontalAlignment', 'region', 'verticalAlignment', 'x', 'xAxisName', 'y', 'yAxisName'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Annotation Directive\n * ```html\n * <e-annotations><e-annotation></e-annotation><e-annotations>\n * ```\n */\nexport class AnnotationDirective extends ComplexBase<AnnotationDirective> {\npublic directivePropList: any;\n/**\n * Specifies the coordinate units of the annotation. They are \n * * Pixel - Annotation renders based on x and y pixel value. \n * * Point - Annotation renders based on x and y axis value.\n * \\@default 'Pixel'\n */\npublic coordinateUnits: any;\n/**\n * Information about annotation for assistive technology.\n * \\@default null\n */\npublic description: any;\n/**\n * Specifies the alignment of the annotation. They are \n * * Near - Align the annotation element as left side. \n * * Far - Align the annotation element as right side. \n * * Center - Align the annotation element as mid point.\n * \\@default 'Center'\n */\npublic horizontalAlignment: any;\n/**\n * Specifies the regions of the annotation. They are \n * * Chart - Annotation renders based on chart coordinates. \n * * Series - Annotation renders based on series coordinates.\n * \\@default 'Chart'\n */\npublic region: any;\n/**\n * Specifies the position of the annotation. They are \n * * Top - Align the annotation element as top side. \n * * Bottom - Align the annotation element as bottom side. \n * * Middle - Align the annotation element as mid point.\n * \\@default 'Middle'\n */\npublic verticalAlignment: any;\n/**\n * if set coordinateUnit as `Pixel` X specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n */\npublic x: any;\n/**\n * The name of horizontal axis associated with the annotation. \n * It requires `axes` of chart.\n * \\@default null\n */\npublic xAxisName: any;\n/**\n * if set coordinateUnit as `Pixel` Y specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n */\npublic y: any;\n/**\n * The name of vertical axis associated with the annotation. \n * It requires `axes` of chart.\n * \\@default null\n */\npublic yAxisName: any;\n/**\n * Content of the annotation, which accepts the id of the custom element.\n * \\@default null\n */\n@Template()\n    public content: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-annotations>e-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: ['content', ] },],\n};\n}\n\nfunction AnnotationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationDirective.ctorParameters;\n/** @type {?} */\nAnnotationDirective.propDecorators;\n/** @type {?} */\nAnnotationDirective.prototype.directivePropList;\n/**\n * Specifies the coordinate units of the annotation. They are \n * * Pixel - Annotation renders based on x and y pixel value. \n * * Point - Annotation renders based on x and y axis value.\n * \\@default 'Pixel'\n * @type {?}\n */\nAnnotationDirective.prototype.coordinateUnits;\n/**\n * Information about annotation for assistive technology.\n * \\@default null\n * @type {?}\n */\nAnnotationDirective.prototype.description;\n/**\n * Specifies the alignment of the annotation. They are \n * * Near - Align the annotation element as left side. \n * * Far - Align the annotation element as right side. \n * * Center - Align the annotation element as mid point.\n * \\@default 'Center'\n * @type {?}\n */\nAnnotationDirective.prototype.horizontalAlignment;\n/**\n * Specifies the regions of the annotation. They are \n * * Chart - Annotation renders based on chart coordinates. \n * * Series - Annotation renders based on series coordinates.\n * \\@default 'Chart'\n * @type {?}\n */\nAnnotationDirective.prototype.region;\n/**\n * Specifies the position of the annotation. They are \n * * Top - Align the annotation element as top side. \n * * Bottom - Align the annotation element as bottom side. \n * * Middle - Align the annotation element as mid point.\n * \\@default 'Middle'\n * @type {?}\n */\nAnnotationDirective.prototype.verticalAlignment;\n/**\n * if set coordinateUnit as `Pixel` X specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n * @type {?}\n */\nAnnotationDirective.prototype.x;\n/**\n * The name of horizontal axis associated with the annotation. \n * It requires `axes` of chart.\n * \\@default null\n * @type {?}\n */\nAnnotationDirective.prototype.xAxisName;\n/**\n * if set coordinateUnit as `Pixel` Y specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n * @type {?}\n */\nAnnotationDirective.prototype.y;\n/**\n * The name of vertical axis associated with the annotation. \n * It requires `axes` of chart.\n * \\@default null\n * @type {?}\n */\nAnnotationDirective.prototype.yAxisName;\n/**\n * Content of the annotation, which accepts the id of the custom element.\n * \\@default null\n * @type {?}\n */\nAnnotationDirective.prototype.content;\n/** @type {?} */\nAnnotationDirective.prototype.viewContainerRef;\n}\n\n/**\n * Annotation Array Directive\n */\nexport class AnnotationsDirective extends ArrayBase<AnnotationsDirective> {\nconstructor() {\n        super('annotations');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-chart>e-annotations',\n    queries: {\n        children: new ContentChildren(AnnotationDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AnnotationsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['point', 'series'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Selected Data Directive\n * ```html\n * <e-selecteddataindexes><e-selecteddataindex></e-selecteddataindex><e-selecteddataindexes>\n * ```\n */\nexport class SelectedDataIndexDirective extends ComplexBase<SelectedDataIndexDirective> {\npublic directivePropList: any;\n/**\n * Specifies the point index\n * \\@default 0\n * \\@asptype int\n */\npublic point: any;\n/**\n * Specifies the series index\n * \\@default 0\n * \\@asptype int\n */\npublic series: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-selecteddataindexes>e-selecteddataindex',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction SelectedDataIndexDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectedDataIndexDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectedDataIndexDirective.ctorParameters;\n/** @type {?} */\nSelectedDataIndexDirective.prototype.directivePropList;\n/**\n * Specifies the point index\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nSelectedDataIndexDirective.prototype.point;\n/**\n * Specifies the series index\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nSelectedDataIndexDirective.prototype.series;\n/** @type {?} */\nSelectedDataIndexDirective.prototype.viewContainerRef;\n}\n\n/**\n * SelectedDataIndex Array Directive\n */\nexport class SelectedDataIndexesDirective extends ArrayBase<SelectedDataIndexesDirective> {\nconstructor() {\n        super('selecteddataindexes');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-chart>e-selecteddataindexes',\n    queries: {\n        children: new ContentChildren(SelectedDataIndexDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SelectedDataIndexesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectedDataIndexesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectedDataIndexesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animation', 'bandColor', 'close', 'dPeriod', 'dashArray', 'dataSource', 'enableComplexProperty', 'fastPeriod', 'field', 'fill', 'high', 'kPeriod', 'low', 'lowerLine', 'macdLine', 'macdNegativeColor', 'macdPositiveColor', 'macdType', 'open', 'overBought', 'overSold', 'period', 'periodLine', 'pointColorMapping', 'query', 'segmentAxis', 'segments', 'seriesName', 'showZones', 'slowPeriod', 'standardDeviation', 'type', 'upperLine', 'visible', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Indicator Directive\n * ```html\n * <e-indicators>\n * <e-indicator></e-indicator>\n * </e-indicators>\n * ```\n */\nexport class IndicatorDirective extends ComplexBase<IndicatorDirective> {\npublic directivePropList: any;\n/**\n * Defines the type of the technical indicator\n * \\@default 'Sma'\n */\npublic type: any;\n/**\n * Options to customizing animation for the series.\n */\npublic animation: any;\n/**\n * Options for customizing the BollingerBand in the indicator.\n * \\@default 'rgba(211,211,211,0.25)'\n */\npublic bandColor: any;\n/**\n * The DataSource field that contains the close value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic close: any;\n/**\n * Defines the period, the price changes over which will define the %D value in stochastic indicators\n * \\@default 3\n */\npublic dPeriod: any;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n */\npublic dashArray: any;\n/**\n * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n * \n * \\@default ''\n */\npublic dataSource: any;\n/**\n * This property used to improve chart performance via data mapping for series dataSource.\n * \\@default false\n */\npublic enableComplexProperty: any;\n/**\n * Sets the fast period to define the Macd line\n * \\@default 26\n */\npublic fastPeriod: any;\n/**\n * Defines the field to compare the current value with previous values\n * \\@default 'Close'\n */\npublic field: any;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n */\npublic fill: any;\n/**\n * The DataSource field that contains the high value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic high: any;\n/**\n * Defines the look back period, the price changes over which will define the %K value in stochastic indicators\n * \\@default 14\n */\npublic kPeriod: any;\n/**\n * The DataSource field that contains the low value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic low: any;\n/**\n * Defines the appearance of lower line in technical indicators\n */\npublic lowerLine: any;\n/**\n * Defines the appearance of the the MacdLine of Macd indicator\n * \\@default { color: '#ff9933', width: 2 }\n */\npublic macdLine: any;\n/**\n * Defines the color of the negative bars in Macd indicators\n * \\@default '#e74c3d'\n */\npublic macdNegativeColor: any;\n/**\n * Defines the color of the positive bars in Macd indicators\n * \\@default '#2ecd71'\n */\npublic macdPositiveColor: any;\n/**\n * Defines the type of the Macd indicator.\n * \\@default 'Both'\n */\npublic macdType: any;\n/**\n * The DataSource field that contains the open value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic open: any;\n/**\n * Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators\n * \\@default 80\n */\npublic overBought: any;\n/**\n * Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators\n * \\@default 20\n */\npublic overSold: any;\n/**\n * Defines the period, the price changes over which will be considered to predict the trend\n * \\@default 14\n */\npublic period: any;\n/**\n * Defines the appearance of period line in technical indicators\n */\npublic periodLine: any;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n */\npublic pointColorMapping: any;\n/**\n * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n * \\@default ''\n */\npublic query: any;\n/**\n * Defines the axis, based on which the line series will be split.\n */\npublic segmentAxis: any;\n/**\n * Defines the collection of regions that helps to differentiate a line series.\n */\npublic segments: any;\n/**\n * Defines the name of the series, the data of which has to be depicted as indicator\n * \\@default ''\n */\npublic seriesName: any;\n/**\n * Enables/Disables the over-bought and over-sold regions\n * \\@default true\n */\npublic showZones: any;\n/**\n * Sets the slow period to define the Macd line\n * \\@default 12\n */\npublic slowPeriod: any;\n/**\n * Sets the standard deviation values that helps to define the upper and lower bollinger bands\n * \\@default 2\n */\npublic standardDeviation: any;\n/**\n * Defines the appearance of the upper line in technical indicators\n */\npublic upperLine: any;\n/**\n * Specifies the visibility of series.\n * \\@default true\n */\npublic visible: any;\n/**\n * Defines the data source field that contains the volume value in candle charts \n * It is applicable for financial series and technical indicators\n * \\@default ''\n */\npublic volume: any;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n */\npublic width: any;\n/**\n * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n */\npublic xAxisName: any;\n/**\n * The DataSource field that contains the x value. \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic xName: any;\n/**\n * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n */\npublic yAxisName: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-indicators>e-indicator',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction IndicatorDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nIndicatorDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIndicatorDirective.ctorParameters;\n/** @type {?} */\nIndicatorDirective.prototype.directivePropList;\n/**\n * Defines the type of the technical indicator\n * \\@default 'Sma'\n * @type {?}\n */\nIndicatorDirective.prototype.type;\n/**\n * Options to customizing animation for the series.\n * @type {?}\n */\nIndicatorDirective.prototype.animation;\n/**\n * Options for customizing the BollingerBand in the indicator.\n * \\@default 'rgba(211,211,211,0.25)'\n * @type {?}\n */\nIndicatorDirective.prototype.bandColor;\n/**\n * The DataSource field that contains the close value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.close;\n/**\n * Defines the period, the price changes over which will define the %D value in stochastic indicators\n * \\@default 3\n * @type {?}\n */\nIndicatorDirective.prototype.dPeriod;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n * @type {?}\n */\nIndicatorDirective.prototype.dashArray;\n/**\n * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n * \n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.dataSource;\n/**\n * This property used to improve chart performance via data mapping for series dataSource.\n * \\@default false\n * @type {?}\n */\nIndicatorDirective.prototype.enableComplexProperty;\n/**\n * Sets the fast period to define the Macd line\n * \\@default 26\n * @type {?}\n */\nIndicatorDirective.prototype.fastPeriod;\n/**\n * Defines the field to compare the current value with previous values\n * \\@default 'Close'\n * @type {?}\n */\nIndicatorDirective.prototype.field;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n * @type {?}\n */\nIndicatorDirective.prototype.fill;\n/**\n * The DataSource field that contains the high value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.high;\n/**\n * Defines the look back period, the price changes over which will define the %K value in stochastic indicators\n * \\@default 14\n * @type {?}\n */\nIndicatorDirective.prototype.kPeriod;\n/**\n * The DataSource field that contains the low value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.low;\n/**\n * Defines the appearance of lower line in technical indicators\n * @type {?}\n */\nIndicatorDirective.prototype.lowerLine;\n/**\n * Defines the appearance of the the MacdLine of Macd indicator\n * \\@default { color: '#ff9933', width: 2 }\n * @type {?}\n */\nIndicatorDirective.prototype.macdLine;\n/**\n * Defines the color of the negative bars in Macd indicators\n * \\@default '#e74c3d'\n * @type {?}\n */\nIndicatorDirective.prototype.macdNegativeColor;\n/**\n * Defines the color of the positive bars in Macd indicators\n * \\@default '#2ecd71'\n * @type {?}\n */\nIndicatorDirective.prototype.macdPositiveColor;\n/**\n * Defines the type of the Macd indicator.\n * \\@default 'Both'\n * @type {?}\n */\nIndicatorDirective.prototype.macdType;\n/**\n * The DataSource field that contains the open value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.open;\n/**\n * Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators\n * \\@default 80\n * @type {?}\n */\nIndicatorDirective.prototype.overBought;\n/**\n * Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators\n * \\@default 20\n * @type {?}\n */\nIndicatorDirective.prototype.overSold;\n/**\n * Defines the period, the price changes over which will be considered to predict the trend\n * \\@default 14\n * @type {?}\n */\nIndicatorDirective.prototype.period;\n/**\n * Defines the appearance of period line in technical indicators\n * @type {?}\n */\nIndicatorDirective.prototype.periodLine;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.pointColorMapping;\n/**\n * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.query;\n/**\n * Defines the axis, based on which the line series will be split.\n * @type {?}\n */\nIndicatorDirective.prototype.segmentAxis;\n/**\n * Defines the collection of regions that helps to differentiate a line series.\n * @type {?}\n */\nIndicatorDirective.prototype.segments;\n/**\n * Defines the name of the series, the data of which has to be depicted as indicator\n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.seriesName;\n/**\n * Enables/Disables the over-bought and over-sold regions\n * \\@default true\n * @type {?}\n */\nIndicatorDirective.prototype.showZones;\n/**\n * Sets the slow period to define the Macd line\n * \\@default 12\n * @type {?}\n */\nIndicatorDirective.prototype.slowPeriod;\n/**\n * Sets the standard deviation values that helps to define the upper and lower bollinger bands\n * \\@default 2\n * @type {?}\n */\nIndicatorDirective.prototype.standardDeviation;\n/**\n * Defines the appearance of the upper line in technical indicators\n * @type {?}\n */\nIndicatorDirective.prototype.upperLine;\n/**\n * Specifies the visibility of series.\n * \\@default true\n * @type {?}\n */\nIndicatorDirective.prototype.visible;\n/**\n * Defines the data source field that contains the volume value in candle charts \n * It is applicable for financial series and technical indicators\n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.volume;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n * @type {?}\n */\nIndicatorDirective.prototype.width;\n/**\n * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n * @type {?}\n */\nIndicatorDirective.prototype.xAxisName;\n/**\n * The DataSource field that contains the x value. \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nIndicatorDirective.prototype.xName;\n/**\n * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n * @type {?}\n */\nIndicatorDirective.prototype.yAxisName;\n/** @type {?} */\nIndicatorDirective.prototype.viewContainerRef;\n}\n\n/**\n * Indicator Array Directive\n */\nexport class IndicatorsDirective extends ArrayBase<IndicatorsDirective> {\nconstructor() {\n        super('indicators');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-chart>e-indicators',\n    queries: {\n        children: new ContentChildren(IndicatorDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IndicatorsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nIndicatorsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIndicatorsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Chart } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { SeriesCollectionDirective } from './series.directive';\nimport { AxesDirective } from './axes.directive';\nimport { RowsDirective } from './rows.directive';\nimport { ColumnsDirective } from './columns.directive';\nimport { AnnotationsDirective } from './annotations.directive';\nimport { SelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { IndicatorsDirective } from './indicators.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['allowMultiSelection','annotations','axes','background','backgroundImage','border','chartArea','columns','crosshair','currencyCode','dataSource','description','enableAnimation','enableCanvas','enableExport','enablePersistence','enableRtl','enableSideBySidePlacement','height','indicators','isMultiSelect','isTransposed','legendSettings','locale','margin','palettes','primaryXAxis','primaryYAxis','rows','selectedDataIndexes','selectionMode','series','subTitle','subTitleStyle','tabIndex','theme','title','titleStyle','tooltip','useGroupingSeparator','width','zoomSettings'];\nexport const /** @type {?} */ outputs: string[] = ['afterExport','animationComplete','annotationRender','axisLabelRender','axisMultiLabelRender','axisRangeCalculated','beforeExport','beforePrint','chartMouseClick','chartMouseDown','chartMouseLeave','chartMouseMove','chartMouseUp','drag','dragComplete','dragEnd','dragStart','legendClick','legendRender','load','loaded','multiLevelLabelClick','onZooming','pointClick','pointMove','pointRender','resized','scrollChanged','scrollEnd','scrollStart','selectionComplete','seriesRender','textRender','tooltipRender','zoomComplete','dataSourceChange'];\nexport const /** @type {?} */ twoWays: string[] = ['dataSource'];\n/**\n * Chart Component\n * ```html\n * <ejschart></ejschart>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class ChartComponent extends Chart implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childSeries: QueryList<SeriesCollectionDirective>;\npublic childAxes: QueryList<AxesDirective>;\npublic childRows: QueryList<RowsDirective>;\npublic childColumns: QueryList<ColumnsDirective>;\npublic childAnnotations: QueryList<AnnotationsDirective>;\npublic childSelectedDataIndexes: QueryList<SelectedDataIndexesDirective>;\npublic childIndicators: QueryList<IndicatorsDirective>;\npublic tags: string[] = ['series', 'axes', 'rows', 'columns', 'annotations', 'selectedDataIndexes', 'indicators'];\npublic dataSourceChange: any;\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsScatterSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsColumnSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsSplineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsSplineAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStripLine');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsScrollBar');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStepLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStepAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStackingColumnSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStackingLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStackingAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsBarSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStackingBarSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsRangeColumnSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsBubbleSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsCrosshair');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsCategory');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsDateTime');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsLogarithmic');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsZoom');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsDataLabel');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsSelection');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsChartAnnotation');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsHiloSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsHiloOpenCloseSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsWaterfallSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsRangeAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsCandleSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsPolarSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsRadarSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsSmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsTmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsEmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAccumulationDistributionIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsMacdIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAtrIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsRsiIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsMomentumIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStochasticIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsBollingerBands');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsBoxAndWhiskerSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsHistogramSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsErrorBar');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsTrendlines');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsDateTimeCategory');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsMultiColoredLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsMultiColoredAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsMultiLevelLabel');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsParetoSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsDataEditing');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        if (this.childAxes) {\n                    this.tagObjects[1].instance = ( /** @type {?} */((this.childAxes as any))).list[0].childSeries;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childAxes as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childAxes as any))).list[d + 1]) {\n                            this.tagObjects[1].instance.list.push(( /** @type {?} */((this.childAxes as any))).list[d+1].childSeries.list[0]);\n                        }\n                    }\n                }\n        if (this.childRows) {\n                    this.tagObjects[2].instance = ( /** @type {?} */((this.childRows as any))).list[0].childAxes;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childRows as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childRows as any))).list[d + 1]) {\n                            this.tagObjects[2].instance.list.push(( /** @type {?} */((this.childRows as any))).list[d+1].childAxes.list[0]);\n                        }\n                    }\n                }\n        if (this.childColumns) {\n                    this.tagObjects[3].instance = ( /** @type {?} */((this.childColumns as any))).list[0].childRows;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childColumns as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childColumns as any))).list[d + 1]) {\n                            this.tagObjects[3].instance.list.push(( /** @type {?} */((this.childColumns as any))).list[d+1].childRows.list[0]);\n                        }\n                    }\n                }\n        if (this.childAnnotations) {\n                    this.tagObjects[4].instance = ( /** @type {?} */((this.childAnnotations as any))).list[0].childColumns;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childAnnotations as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childAnnotations as any))).list[d + 1]) {\n                            this.tagObjects[4].instance.list.push(( /** @type {?} */((this.childAnnotations as any))).list[d+1].childColumns.list[0]);\n                        }\n                    }\n                }\n        if (this.childSelectedDataIndexes) {\n                    this.tagObjects[5].instance = ( /** @type {?} */((this.childSelectedDataIndexes as any))).list[0].childAnnotations;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childSelectedDataIndexes as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childSelectedDataIndexes as any))).list[d + 1]) {\n                            this.tagObjects[5].instance.list.push(( /** @type {?} */((this.childSelectedDataIndexes as any))).list[d+1].childAnnotations.list[0]);\n                        }\n                    }\n                }\n        if (this.childIndicators) {\n                    this.tagObjects[6].instance = ( /** @type {?} */((this.childIndicators as any))).list[0].childSelectedDataIndexes;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childIndicators as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childIndicators as any))).list[d + 1]) {\n                            this.tagObjects[6].instance.list.push(( /** @type {?} */((this.childIndicators as any))).list[d+1].childSelectedDataIndexes.list[0]);\n                        }\n                    }\n                }\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-chart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(SeriesCollectionDirective), \n        childAxes: new ContentChild(AxesDirective), \n        childRows: new ContentChild(RowsDirective), \n        childColumns: new ContentChild(ColumnsDirective), \n        childAnnotations: new ContentChild(AnnotationsDirective), \n        childSelectedDataIndexes: new ContentChild(SelectedDataIndexesDirective), \n        childIndicators: new ContentChild(IndicatorsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction ChartComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nChartComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChartComponent.ctorParameters;\n/** @type {?} */\nChartComponent.propDecorators;\n/** @type {?} */\nChartComponent.prototype.context;\n/** @type {?} */\nChartComponent.prototype.tagObjects;\n/** @type {?} */\nChartComponent.prototype.childSeries;\n/** @type {?} */\nChartComponent.prototype.childAxes;\n/** @type {?} */\nChartComponent.prototype.childRows;\n/** @type {?} */\nChartComponent.prototype.childColumns;\n/** @type {?} */\nChartComponent.prototype.childAnnotations;\n/** @type {?} */\nChartComponent.prototype.childSelectedDataIndexes;\n/** @type {?} */\nChartComponent.prototype.childIndicators;\n/** @type {?} */\nChartComponent.prototype.tags;\n/** @type {?} */\nChartComponent.prototype.dataSourceChange;\n/** @type {?} */\nChartComponent.prototype.tooltip_template;\n/** @type {?} */\nChartComponent.prototype.registerEvents;\n/** @type {?} */\nChartComponent.prototype.addTwoWay;\n/** @type {?} */\nChartComponent.prototype.ngEle;\n/** @type {?} */\nChartComponent.prototype.srenderer;\n/** @type {?} */\nChartComponent.prototype.viewContainerRef;\n/** @type {?} */\nChartComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TrendlineDirective, TrendlinesDirective } from './trendlines.directive';\nimport { SegmentDirective, SegmentsDirective } from './segments.directive';\nimport { SeriesDirective, SeriesCollectionDirective } from './series.directive';\nimport { StripLineDirective, StripLinesDirective } from './striplines.directive';\nimport { CategoryDirective, CategoriesDirective } from './categories.directive';\nimport { MultiLevelLabelDirective, MultiLevelLabelsDirective } from './multilevellabels.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { RowDirective, RowsDirective } from './rows.directive';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { SelectedDataIndexDirective, SelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { IndicatorDirective, IndicatorsDirective } from './indicators.directive';\nimport { ChartComponent } from './chart.component';\n/**\n * NgModule definition for the Chart component.\n */\nexport class ChartModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        ChartComponent,\n        TrendlineDirective,\n        TrendlinesDirective,\n        SegmentDirective,\n        SegmentsDirective,\n        SeriesDirective,\n        SeriesCollectionDirective,\n        StripLineDirective,\n        StripLinesDirective,\n        CategoryDirective,\n        CategoriesDirective,\n        MultiLevelLabelDirective,\n        MultiLevelLabelsDirective,\n        AxisDirective,\n        AxesDirective,\n        RowDirective,\n        RowsDirective,\n        ColumnDirective,\n        ColumnsDirective,\n        AnnotationDirective,\n        AnnotationsDirective,\n        SelectedDataIndexDirective,\n        SelectedDataIndexesDirective,\n        IndicatorDirective,\n        IndicatorsDirective\n    ],\n    exports: [\n        ChartComponent,\n        TrendlineDirective,\n        TrendlinesDirective,\n        SegmentDirective,\n        SegmentsDirective,\n        SeriesDirective,\n        SeriesCollectionDirective,\n        StripLineDirective,\n        StripLinesDirective,\n        CategoryDirective,\n        CategoriesDirective,\n        MultiLevelLabelDirective,\n        MultiLevelLabelsDirective,\n        AxisDirective,\n        AxesDirective,\n        RowDirective,\n        RowsDirective,\n        ColumnDirective,\n        ColumnsDirective,\n        AnnotationDirective,\n        AnnotationsDirective,\n        SelectedDataIndexDirective,\n        SelectedDataIndexesDirective,\n        IndicatorDirective,\n        IndicatorsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ChartModule_tsickle_Closure_declarations() {\n/** @type {?} */\nChartModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChartModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TrendlineDirective, TrendlinesDirective } from './trendlines.directive';\nimport { SegmentDirective, SegmentsDirective } from './segments.directive';\nimport { SeriesDirective, SeriesCollectionDirective } from './series.directive';\nimport { StripLineDirective, StripLinesDirective } from './striplines.directive';\nimport { CategoryDirective, CategoriesDirective } from './categories.directive';\nimport { MultiLevelLabelDirective, MultiLevelLabelsDirective } from './multilevellabels.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { RowDirective, RowsDirective } from './rows.directive';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { SelectedDataIndexDirective, SelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { IndicatorDirective, IndicatorsDirective } from './indicators.directive';\nimport { ChartComponent } from './chart.component';\nimport { ChartModule } from './chart.module';\nimport {LineSeries, ScatterSeries, ColumnSeries, SplineSeries, SplineAreaSeries, StripLine, AreaSeries, ScrollBar, StepLineSeries, StepAreaSeries, StackingColumnSeries, StackingLineSeries, StackingAreaSeries, BarSeries, StackingBarSeries, RangeColumnSeries, BubbleSeries, Tooltip, Crosshair, Category, DateTime, Logarithmic, Legend, Zoom, DataLabel, Selection, ChartAnnotation, HiloSeries, HiloOpenCloseSeries, WaterfallSeries, RangeAreaSeries, CandleSeries, PolarSeries, RadarSeries, SmaIndicator, TmaIndicator, EmaIndicator, AccumulationDistributionIndicator, MacdIndicator, AtrIndicator, RsiIndicator, MomentumIndicator, StochasticIndicator, BollingerBands, BoxAndWhiskerSeries, HistogramSeries, ErrorBar, Trendlines, DateTimeCategory, MultiColoredLineSeries, MultiColoredAreaSeries, MultiLevelLabel, ParetoSeries, Export, DataEditing} from '@syncfusion/ej2-charts';\n\n\nexport const /** @type {?} */ LineSeriesService: ValueProvider = { provide: 'ChartsLineSeries', useValue: LineSeries};\nexport const /** @type {?} */ ScatterSeriesService: ValueProvider = { provide: 'ChartsScatterSeries', useValue: ScatterSeries};\nexport const /** @type {?} */ ColumnSeriesService: ValueProvider = { provide: 'ChartsColumnSeries', useValue: ColumnSeries};\nexport const /** @type {?} */ SplineSeriesService: ValueProvider = { provide: 'ChartsSplineSeries', useValue: SplineSeries};\nexport const /** @type {?} */ SplineAreaSeriesService: ValueProvider = { provide: 'ChartsSplineAreaSeries', useValue: SplineAreaSeries};\nexport const /** @type {?} */ StripLineService: ValueProvider = { provide: 'ChartsStripLine', useValue: StripLine};\nexport const /** @type {?} */ AreaSeriesService: ValueProvider = { provide: 'ChartsAreaSeries', useValue: AreaSeries};\nexport const /** @type {?} */ ScrollBarService: ValueProvider = { provide: 'ChartsScrollBar', useValue: ScrollBar};\nexport const /** @type {?} */ StepLineSeriesService: ValueProvider = { provide: 'ChartsStepLineSeries', useValue: StepLineSeries};\nexport const /** @type {?} */ StepAreaSeriesService: ValueProvider = { provide: 'ChartsStepAreaSeries', useValue: StepAreaSeries};\nexport const /** @type {?} */ StackingColumnSeriesService: ValueProvider = { provide: 'ChartsStackingColumnSeries', useValue: StackingColumnSeries};\nexport const /** @type {?} */ StackingLineSeriesService: ValueProvider = { provide: 'ChartsStackingLineSeries', useValue: StackingLineSeries};\nexport const /** @type {?} */ StackingAreaSeriesService: ValueProvider = { provide: 'ChartsStackingAreaSeries', useValue: StackingAreaSeries};\nexport const /** @type {?} */ BarSeriesService: ValueProvider = { provide: 'ChartsBarSeries', useValue: BarSeries};\nexport const /** @type {?} */ StackingBarSeriesService: ValueProvider = { provide: 'ChartsStackingBarSeries', useValue: StackingBarSeries};\nexport const /** @type {?} */ RangeColumnSeriesService: ValueProvider = { provide: 'ChartsRangeColumnSeries', useValue: RangeColumnSeries};\nexport const /** @type {?} */ BubbleSeriesService: ValueProvider = { provide: 'ChartsBubbleSeries', useValue: BubbleSeries};\nexport const /** @type {?} */ TooltipService: ValueProvider = { provide: 'ChartsTooltip', useValue: Tooltip};\nexport const /** @type {?} */ CrosshairService: ValueProvider = { provide: 'ChartsCrosshair', useValue: Crosshair};\nexport const /** @type {?} */ CategoryService: ValueProvider = { provide: 'ChartsCategory', useValue: Category};\nexport const /** @type {?} */ DateTimeService: ValueProvider = { provide: 'ChartsDateTime', useValue: DateTime};\nexport const /** @type {?} */ LogarithmicService: ValueProvider = { provide: 'ChartsLogarithmic', useValue: Logarithmic};\nexport const /** @type {?} */ LegendService: ValueProvider = { provide: 'ChartsLegend', useValue: Legend};\nexport const /** @type {?} */ ZoomService: ValueProvider = { provide: 'ChartsZoom', useValue: Zoom};\nexport const /** @type {?} */ DataLabelService: ValueProvider = { provide: 'ChartsDataLabel', useValue: DataLabel};\nexport const /** @type {?} */ SelectionService: ValueProvider = { provide: 'ChartsSelection', useValue: Selection};\nexport const /** @type {?} */ ChartAnnotationService: ValueProvider = { provide: 'ChartsChartAnnotation', useValue: ChartAnnotation};\nexport const /** @type {?} */ HiloSeriesService: ValueProvider = { provide: 'ChartsHiloSeries', useValue: HiloSeries};\nexport const /** @type {?} */ HiloOpenCloseSeriesService: ValueProvider = { provide: 'ChartsHiloOpenCloseSeries', useValue: HiloOpenCloseSeries};\nexport const /** @type {?} */ WaterfallSeriesService: ValueProvider = { provide: 'ChartsWaterfallSeries', useValue: WaterfallSeries};\nexport const /** @type {?} */ RangeAreaSeriesService: ValueProvider = { provide: 'ChartsRangeAreaSeries', useValue: RangeAreaSeries};\nexport const /** @type {?} */ CandleSeriesService: ValueProvider = { provide: 'ChartsCandleSeries', useValue: CandleSeries};\nexport const /** @type {?} */ PolarSeriesService: ValueProvider = { provide: 'ChartsPolarSeries', useValue: PolarSeries};\nexport const /** @type {?} */ RadarSeriesService: ValueProvider = { provide: 'ChartsRadarSeries', useValue: RadarSeries};\nexport const /** @type {?} */ SmaIndicatorService: ValueProvider = { provide: 'ChartsSmaIndicator', useValue: SmaIndicator};\nexport const /** @type {?} */ TmaIndicatorService: ValueProvider = { provide: 'ChartsTmaIndicator', useValue: TmaIndicator};\nexport const /** @type {?} */ EmaIndicatorService: ValueProvider = { provide: 'ChartsEmaIndicator', useValue: EmaIndicator};\nexport const /** @type {?} */ AccumulationDistributionIndicatorService: ValueProvider = { provide: 'ChartsAccumulationDistributionIndicator', useValue: AccumulationDistributionIndicator};\nexport const /** @type {?} */ MacdIndicatorService: ValueProvider = { provide: 'ChartsMacdIndicator', useValue: MacdIndicator};\nexport const /** @type {?} */ AtrIndicatorService: ValueProvider = { provide: 'ChartsAtrIndicator', useValue: AtrIndicator};\nexport const /** @type {?} */ RsiIndicatorService: ValueProvider = { provide: 'ChartsRsiIndicator', useValue: RsiIndicator};\nexport const /** @type {?} */ MomentumIndicatorService: ValueProvider = { provide: 'ChartsMomentumIndicator', useValue: MomentumIndicator};\nexport const /** @type {?} */ StochasticIndicatorService: ValueProvider = { provide: 'ChartsStochasticIndicator', useValue: StochasticIndicator};\nexport const /** @type {?} */ BollingerBandsService: ValueProvider = { provide: 'ChartsBollingerBands', useValue: BollingerBands};\nexport const /** @type {?} */ BoxAndWhiskerSeriesService: ValueProvider = { provide: 'ChartsBoxAndWhiskerSeries', useValue: BoxAndWhiskerSeries};\nexport const /** @type {?} */ HistogramSeriesService: ValueProvider = { provide: 'ChartsHistogramSeries', useValue: HistogramSeries};\nexport const /** @type {?} */ ErrorBarService: ValueProvider = { provide: 'ChartsErrorBar', useValue: ErrorBar};\nexport const /** @type {?} */ TrendlinesService: ValueProvider = { provide: 'ChartsTrendlines', useValue: Trendlines};\nexport const /** @type {?} */ DateTimeCategoryService: ValueProvider = { provide: 'ChartsDateTimeCategory', useValue: DateTimeCategory};\nexport const /** @type {?} */ MultiColoredLineSeriesService: ValueProvider = { provide: 'ChartsMultiColoredLineSeries', useValue: MultiColoredLineSeries};\nexport const /** @type {?} */ MultiColoredAreaSeriesService: ValueProvider = { provide: 'ChartsMultiColoredAreaSeries', useValue: MultiColoredAreaSeries};\nexport const /** @type {?} */ MultiLevelLabelService: ValueProvider = { provide: 'ChartsMultiLevelLabel', useValue: MultiLevelLabel};\nexport const /** @type {?} */ ParetoSeriesService: ValueProvider = { provide: 'ChartsParetoSeries', useValue: ParetoSeries};\nexport const /** @type {?} */ ExportService: ValueProvider = { provide: 'ChartsExport', useValue: Export};\nexport const /** @type {?} */ DataEditingService: ValueProvider = { provide: 'ChartsDataEditing', useValue: DataEditing};\n/**\n * NgModule definition for the Chart component with providers.\n */\nexport class ChartAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ChartModule],\n    exports: [\n        ChartModule\n    ],\n    providers:[\n        LineSeriesService,\n        ScatterSeriesService,\n        ColumnSeriesService,\n        SplineSeriesService,\n        SplineAreaSeriesService,\n        StripLineService,\n        AreaSeriesService,\n        ScrollBarService,\n        StepLineSeriesService,\n        StepAreaSeriesService,\n        StackingColumnSeriesService,\n        StackingLineSeriesService,\n        StackingAreaSeriesService,\n        BarSeriesService,\n        StackingBarSeriesService,\n        RangeColumnSeriesService,\n        BubbleSeriesService,\n        TooltipService,\n        CrosshairService,\n        CategoryService,\n        DateTimeService,\n        LogarithmicService,\n        LegendService,\n        ZoomService,\n        DataLabelService,\n        SelectionService,\n        ChartAnnotationService,\n        HiloSeriesService,\n        HiloOpenCloseSeriesService,\n        WaterfallSeriesService,\n        RangeAreaSeriesService,\n        CandleSeriesService,\n        PolarSeriesService,\n        RadarSeriesService,\n        SmaIndicatorService,\n        TmaIndicatorService,\n        EmaIndicatorService,\n        AccumulationDistributionIndicatorService,\n        MacdIndicatorService,\n        AtrIndicatorService,\n        RsiIndicatorService,\n        MomentumIndicatorService,\n        StochasticIndicatorService,\n        BollingerBandsService,\n        BoxAndWhiskerSeriesService,\n        HistogramSeriesService,\n        ErrorBarService,\n        TrendlinesService,\n        DateTimeCategoryService,\n        MultiColoredLineSeriesService,\n        MultiColoredAreaSeriesService,\n        MultiLevelLabelService,\n        ParetoSeriesService,\n        ExportService,\n        DataEditingService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ChartAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nChartAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nChartAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['animation', 'border', 'dataLabel', 'dataSource', 'emptyPointSettings', 'enableTooltip', 'endAngle', 'explode', 'explodeAll', 'explodeIndex', 'explodeOffset', 'gapRatio', 'groupMode', 'groupTo', 'height', 'innerRadius', 'legendShape', 'name', 'neckHeight', 'neckWidth', 'opacity', 'palettes', 'pointColorMapping', 'pyramidMode', 'query', 'radius', 'selectionStyle', 'startAngle', 'tooltipMappingName', 'type', 'visible', 'width', 'xName', 'yName'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * AccumulationSeries Directive\n * ```html\n * <e-accumulation-series-collection>\n * <e-accumulation-series></e-accumulation-series>\n * </e-accumulation-series-collection>\n * ```\n */\nexport class AccumulationSeriesDirective extends ComplexBase<AccumulationSeriesDirective> {\npublic directivePropList: any;\n/**\n * Specify the type of the series in accumulation chart.\n * \\@default 'Pie'\n */\npublic type: any;\n/**\n * Options for customizing the animation for series.\n */\npublic animation: any;\n/**\n * Options for customizing the border of the series.\n */\npublic border: any;\n/**\n * The data label for the series.\n */\npublic dataLabel: any;\n/**\n * Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n * \n * \\@default ''\n */\npublic dataSource: any;\n/**\n * options to customize the empty points in series\n */\npublic emptyPointSettings: any;\n/**\n * To enable or disable tooltip for a series.\n * \\@default true\n */\npublic enableTooltip: any;\n/**\n * End angle for a series.\n * \\@default null\n */\npublic endAngle: any;\n/**\n * If set true, series points will be exploded on mouse click or touch.\n * \\@default false\n */\npublic explode: any;\n/**\n * If set true, all the points in the series will get exploded on load.\n * \\@default false\n */\npublic explodeAll: any;\n/**\n * Index of the point, to be exploded on load.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic explodeIndex: any;\n/**\n * Distance of the point from the center, which takes values in both pixels and percentage.\n * \\@default '30%'\n */\npublic explodeOffset: any;\n/**\n * Defines the distance between the segments of a funnel/pyramid series. The range will be from 0 to 1\n * \\@default 0\n */\npublic gapRatio: any;\n/**\n * AccumulationSeries y values less than groupMode are combined into single slice named others\n * \\@default Value\n */\npublic groupMode: any;\n/**\n * AccumulationSeries y values less than groupTo are combined into single slice named others\n * \\@default null\n */\npublic groupTo: any;\n/**\n * Defines the height of the funnel/pyramid with respect to the chart area\n * \\@default '80%'\n */\npublic height: any;\n/**\n * When the innerRadius value is greater than 0 percentage, a donut will appear in pie series. It takes values only in percentage.\n * \\@default '0'\n */\npublic innerRadius: any;\n/**\n * The shape of the legend. Each series has its own legend shape. They are \n * * Circle - Renders a circle. \n * * Rectangle - Renders a rectangle. \n * * Triangle - Renders a triangle. \n * * Diamond - Renders a diamond. \n * * Cross - Renders a cross. \n * * HorizontalLine - Renders a horizontalLine. \n * * VerticalLine - Renders a verticalLine. \n * * Pentagon - Renders a pentagon. \n * * InvertedTriangle - Renders a invertedTriangle. \n * * SeriesType -Render a legend shape based on series type.\n * \\@default 'SeriesType'\n */\npublic legendShape: any;\n/**\n * Specifies the series name\n * \\@default ''\n */\npublic name: any;\n/**\n * Defines the height of the funnel neck with respect to the chart area\n * \\@default '20%'\n */\npublic neckHeight: any;\n/**\n * Defines the width of the funnel neck with respect to the chart area\n * \\@default '20%'\n */\npublic neckWidth: any;\n/**\n * The opacity of the series.\n * \\@default 1.\n */\npublic opacity: any;\n/**\n * Palette for series points.\n * \\@default []\n */\npublic palettes: any;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n */\npublic pointColorMapping: any;\n/**\n * Defines how the values have to be reflected, whether through height/surface of the segments\n * \\@default 'Linear'\n */\npublic pyramidMode: any;\n/**\n * Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `ej.DataManager`.\n * \\@default null\n */\npublic query: any;\n/**\n * Radius of the pie series and its values in percentage.\n * \\@default '80%'\n */\npublic radius: any;\n/**\n * Custom style for the selected series or points.\n * \\@default null\n */\npublic selectionStyle: any;\n/**\n * Start angle for a series.\n * \\@default 0\n */\npublic startAngle: any;\n/**\n * The provided value will be considered as a Tooltip Mapping name\n * \\@default ''\n */\npublic tooltipMappingName: any;\n/**\n * Specifies the series visibility.\n * \\@default true\n */\npublic visible: any;\n/**\n * Defines the width of the funnel/pyramid with respect to the chart area\n * \\@default '80%'\n */\npublic width: any;\n/**\n * The DataSource field which contains the x value.\n * \\@default ''\n */\npublic xName: any;\n/**\n * The DataSource field which contains the y value.\n * \\@default ''\n */\npublic yName: any;\n    \n    @Template()\npublic dataLabel_template: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-accumulation-series-collection>e-accumulation-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dataLabel_template': [{ type: ContentChild, args: ['dataLabelTemplate', ] },],\n};\n}\n\nfunction AccumulationSeriesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAccumulationSeriesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAccumulationSeriesDirective.ctorParameters;\n/** @type {?} */\nAccumulationSeriesDirective.propDecorators;\n/** @type {?} */\nAccumulationSeriesDirective.prototype.directivePropList;\n/**\n * Specify the type of the series in accumulation chart.\n * \\@default 'Pie'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.type;\n/**\n * Options for customizing the animation for series.\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.animation;\n/**\n * Options for customizing the border of the series.\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.border;\n/**\n * The data label for the series.\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.dataLabel;\n/**\n * Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n * \n * \\@default ''\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.dataSource;\n/**\n * options to customize the empty points in series\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.emptyPointSettings;\n/**\n * To enable or disable tooltip for a series.\n * \\@default true\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.enableTooltip;\n/**\n * End angle for a series.\n * \\@default null\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.endAngle;\n/**\n * If set true, series points will be exploded on mouse click or touch.\n * \\@default false\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.explode;\n/**\n * If set true, all the points in the series will get exploded on load.\n * \\@default false\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.explodeAll;\n/**\n * Index of the point, to be exploded on load.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.explodeIndex;\n/**\n * Distance of the point from the center, which takes values in both pixels and percentage.\n * \\@default '30%'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.explodeOffset;\n/**\n * Defines the distance between the segments of a funnel/pyramid series. The range will be from 0 to 1\n * \\@default 0\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.gapRatio;\n/**\n * AccumulationSeries y values less than groupMode are combined into single slice named others\n * \\@default Value\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.groupMode;\n/**\n * AccumulationSeries y values less than groupTo are combined into single slice named others\n * \\@default null\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.groupTo;\n/**\n * Defines the height of the funnel/pyramid with respect to the chart area\n * \\@default '80%'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.height;\n/**\n * When the innerRadius value is greater than 0 percentage, a donut will appear in pie series. It takes values only in percentage.\n * \\@default '0'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.innerRadius;\n/**\n * The shape of the legend. Each series has its own legend shape. They are \n * * Circle - Renders a circle. \n * * Rectangle - Renders a rectangle. \n * * Triangle - Renders a triangle. \n * * Diamond - Renders a diamond. \n * * Cross - Renders a cross. \n * * HorizontalLine - Renders a horizontalLine. \n * * VerticalLine - Renders a verticalLine. \n * * Pentagon - Renders a pentagon. \n * * InvertedTriangle - Renders a invertedTriangle. \n * * SeriesType -Render a legend shape based on series type.\n * \\@default 'SeriesType'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.legendShape;\n/**\n * Specifies the series name\n * \\@default ''\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.name;\n/**\n * Defines the height of the funnel neck with respect to the chart area\n * \\@default '20%'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.neckHeight;\n/**\n * Defines the width of the funnel neck with respect to the chart area\n * \\@default '20%'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.neckWidth;\n/**\n * The opacity of the series.\n * \\@default 1.\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.opacity;\n/**\n * Palette for series points.\n * \\@default []\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.palettes;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.pointColorMapping;\n/**\n * Defines how the values have to be reflected, whether through height/surface of the segments\n * \\@default 'Linear'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.pyramidMode;\n/**\n * Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `ej.DataManager`.\n * \\@default null\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.query;\n/**\n * Radius of the pie series and its values in percentage.\n * \\@default '80%'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.radius;\n/**\n * Custom style for the selected series or points.\n * \\@default null\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.selectionStyle;\n/**\n * Start angle for a series.\n * \\@default 0\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.startAngle;\n/**\n * The provided value will be considered as a Tooltip Mapping name\n * \\@default ''\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.tooltipMappingName;\n/**\n * Specifies the series visibility.\n * \\@default true\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.visible;\n/**\n * Defines the width of the funnel/pyramid with respect to the chart area\n * \\@default '80%'\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.width;\n/**\n * The DataSource field which contains the x value.\n * \\@default ''\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.xName;\n/**\n * The DataSource field which contains the y value.\n * \\@default ''\n * @type {?}\n */\nAccumulationSeriesDirective.prototype.yName;\n/** @type {?} */\nAccumulationSeriesDirective.prototype.dataLabel_template;\n/** @type {?} */\nAccumulationSeriesDirective.prototype.viewContainerRef;\n}\n\n/**\n * AccumulationSeries Array Directive\n */\nexport class AccumulationSeriesCollectionDirective extends ArrayBase<AccumulationSeriesCollectionDirective> {\nconstructor() {\n        super('series');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-accumulationchart>e-accumulation-series-collection',\n    queries: {\n        children: new ContentChildren(AccumulationSeriesDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AccumulationSeriesCollectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAccumulationSeriesCollectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAccumulationSeriesCollectionDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['content', 'coordinateUnits', 'description', 'horizontalAlignment', 'region', 'verticalAlignment', 'x', 'y'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * AccumulationAnnotations Directive\n * ```html\n * <e-accumulation-annotations>\n * <e-accumulation-annotation></e-accumulation-annotation>\n * </e-accumulation-annotations>\n * ```\n */\nexport class AccumulationAnnotationDirective extends ComplexBase<AccumulationAnnotationDirective> {\npublic directivePropList: any;\n/**\n * Specifies the coordinate units of the annotation. They are \n * * Pixel - Annotation renders based on x and y pixel value. \n * * Point - Annotation renders based on x and y axis value.\n * \\@default 'Pixel'\n */\npublic coordinateUnits: any;\n/**\n * Information about annotation for assistive technology.\n * \\@default null\n */\npublic description: any;\n/**\n * Specifies the alignment of the annotation. They are \n * * Near - Align the annotation element as top side. \n * * Far - Align the annotation element as bottom side. \n * * Center - Align the annotation element as mid point.\n * \\@default 'Center'\n */\npublic horizontalAlignment: any;\n/**\n * Specifies the regions of the annotation. They are \n * * Chart - Annotation renders based on chart coordinates. \n * * Series - Annotation renders based on series coordinates.\n * \\@default 'Chart'\n */\npublic region: any;\n/**\n * Specifies the position of the annotation. They are \n * * Top - Align the annotation element as top side. \n * * Bottom - Align the annotation element as bottom side. \n * * Middle - Align the annotation element as mid point.\n * \\@default 'Middle'\n */\npublic verticalAlignment: any;\n/**\n * if set coordinateUnit as `Pixel` X specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n */\npublic x: any;\n/**\n * if set coordinateUnit as `Pixel` Y specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n */\npublic y: any;\n/**\n * Content of the annotation, which accepts the id of the custom element.\n * \\@default null\n */\n@Template()\n    public content: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-accumulation-annotations>e-accumulation-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: ['content', ] },],\n};\n}\n\nfunction AccumulationAnnotationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAccumulationAnnotationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAccumulationAnnotationDirective.ctorParameters;\n/** @type {?} */\nAccumulationAnnotationDirective.propDecorators;\n/** @type {?} */\nAccumulationAnnotationDirective.prototype.directivePropList;\n/**\n * Specifies the coordinate units of the annotation. They are \n * * Pixel - Annotation renders based on x and y pixel value. \n * * Point - Annotation renders based on x and y axis value.\n * \\@default 'Pixel'\n * @type {?}\n */\nAccumulationAnnotationDirective.prototype.coordinateUnits;\n/**\n * Information about annotation for assistive technology.\n * \\@default null\n * @type {?}\n */\nAccumulationAnnotationDirective.prototype.description;\n/**\n * Specifies the alignment of the annotation. They are \n * * Near - Align the annotation element as top side. \n * * Far - Align the annotation element as bottom side. \n * * Center - Align the annotation element as mid point.\n * \\@default 'Center'\n * @type {?}\n */\nAccumulationAnnotationDirective.prototype.horizontalAlignment;\n/**\n * Specifies the regions of the annotation. They are \n * * Chart - Annotation renders based on chart coordinates. \n * * Series - Annotation renders based on series coordinates.\n * \\@default 'Chart'\n * @type {?}\n */\nAccumulationAnnotationDirective.prototype.region;\n/**\n * Specifies the position of the annotation. They are \n * * Top - Align the annotation element as top side. \n * * Bottom - Align the annotation element as bottom side. \n * * Middle - Align the annotation element as mid point.\n * \\@default 'Middle'\n * @type {?}\n */\nAccumulationAnnotationDirective.prototype.verticalAlignment;\n/**\n * if set coordinateUnit as `Pixel` X specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n * @type {?}\n */\nAccumulationAnnotationDirective.prototype.x;\n/**\n * if set coordinateUnit as `Pixel` Y specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n * @type {?}\n */\nAccumulationAnnotationDirective.prototype.y;\n/**\n * Content of the annotation, which accepts the id of the custom element.\n * \\@default null\n * @type {?}\n */\nAccumulationAnnotationDirective.prototype.content;\n/** @type {?} */\nAccumulationAnnotationDirective.prototype.viewContainerRef;\n}\n\n/**\n * AccumulationAnnotation Array Directive\n */\nexport class AccumulationAnnotationsDirective extends ArrayBase<AccumulationAnnotationsDirective> {\nconstructor() {\n        super('annotations');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-accumulationchart>e-accumulation-annotations',\n    queries: {\n        children: new ContentChildren(AccumulationAnnotationDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AccumulationAnnotationsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAccumulationAnnotationsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAccumulationAnnotationsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { AccumulationChart } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { AccumulationSeriesCollectionDirective } from './series.directive';\nimport { AccumulationAnnotationsDirective } from './annotations.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['annotations','background','backgroundImage','border','center','currencyCode','dataSource','enableAnimation','enableBorderOnMouseMove','enableExport','enablePersistence','enableRtl','enableSmartLabels','height','isMultiSelect','legendSettings','locale','margin','selectedDataIndexes','selectionMode','series','subTitle','subTitleStyle','theme','title','titleStyle','tooltip','useGroupingSeparator','width'];\nexport const /** @type {?} */ outputs: string[] = ['animationComplete','annotationRender','beforePrint','chartMouseClick','chartMouseDown','chartMouseLeave','chartMouseMove','chartMouseUp','legendRender','load','loaded','pointClick','pointMove','pointRender','resized','seriesRender','textRender','tooltipRender','dataSourceChange'];\nexport const /** @type {?} */ twoWays: string[] = ['dataSource'];\n/**\n * AccumulationChart Component\n * ```html\n * <ejs-accumulationchart></ejs-accumulationchart>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class AccumulationChartComponent extends AccumulationChart implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childSeries: QueryList<AccumulationSeriesCollectionDirective>;\npublic childAnnotations: QueryList<AccumulationAnnotationsDirective>;\npublic tags: string[] = ['series', 'annotations'];\npublic dataSourceChange: any;\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsPieSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsFunnelSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsPyramidSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAccumulationTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAccumulationLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAccumulationSelection');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAccumulationDataLabel');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAccumulationAnnotation');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        if (this.childAnnotations) {\n                    this.tagObjects[1].instance = ( /** @type {?} */((this.childAnnotations as any))).list[0].childSeries;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childAnnotations as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childAnnotations as any))).list[d + 1]) {\n                            this.tagObjects[1].instance.list.push(( /** @type {?} */((this.childAnnotations as any))).list[d+1].childSeries.list[0]);\n                        }\n                    }\n                }\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-accumulationchart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(AccumulationSeriesCollectionDirective), \n        childAnnotations: new ContentChild(AccumulationAnnotationsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction AccumulationChartComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAccumulationChartComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAccumulationChartComponent.ctorParameters;\n/** @type {?} */\nAccumulationChartComponent.propDecorators;\n/** @type {?} */\nAccumulationChartComponent.prototype.context;\n/** @type {?} */\nAccumulationChartComponent.prototype.tagObjects;\n/** @type {?} */\nAccumulationChartComponent.prototype.childSeries;\n/** @type {?} */\nAccumulationChartComponent.prototype.childAnnotations;\n/** @type {?} */\nAccumulationChartComponent.prototype.tags;\n/** @type {?} */\nAccumulationChartComponent.prototype.dataSourceChange;\n/** @type {?} */\nAccumulationChartComponent.prototype.tooltip_template;\n/** @type {?} */\nAccumulationChartComponent.prototype.registerEvents;\n/** @type {?} */\nAccumulationChartComponent.prototype.addTwoWay;\n/** @type {?} */\nAccumulationChartComponent.prototype.ngEle;\n/** @type {?} */\nAccumulationChartComponent.prototype.srenderer;\n/** @type {?} */\nAccumulationChartComponent.prototype.viewContainerRef;\n/** @type {?} */\nAccumulationChartComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccumulationSeriesDirective, AccumulationSeriesCollectionDirective } from './series.directive';\nimport { AccumulationAnnotationDirective, AccumulationAnnotationsDirective } from './annotations.directive';\nimport { AccumulationChartComponent } from './accumulationchart.component';\n/**\n * NgModule definition for the AccumulationChart component.\n */\nexport class AccumulationChartModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        AccumulationChartComponent,\n        AccumulationSeriesDirective,\n        AccumulationSeriesCollectionDirective,\n        AccumulationAnnotationDirective,\n        AccumulationAnnotationsDirective\n    ],\n    exports: [\n        AccumulationChartComponent,\n        AccumulationSeriesDirective,\n        AccumulationSeriesCollectionDirective,\n        AccumulationAnnotationDirective,\n        AccumulationAnnotationsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AccumulationChartModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAccumulationChartModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAccumulationChartModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccumulationSeriesDirective, AccumulationSeriesCollectionDirective } from './series.directive';\nimport { AccumulationAnnotationDirective, AccumulationAnnotationsDirective } from './annotations.directive';\nimport { AccumulationChartComponent } from './accumulationchart.component';\nimport { AccumulationChartModule } from './accumulationchart.module';\nimport {PieSeries, FunnelSeries, PyramidSeries, AccumulationTooltip, AccumulationLegend, AccumulationSelection, AccumulationDataLabel, AccumulationAnnotation} from '@syncfusion/ej2-charts';\n\n\nexport const /** @type {?} */ PieSeriesService: ValueProvider = { provide: 'ChartsPieSeries', useValue: PieSeries};\nexport const /** @type {?} */ FunnelSeriesService: ValueProvider = { provide: 'ChartsFunnelSeries', useValue: FunnelSeries};\nexport const /** @type {?} */ PyramidSeriesService: ValueProvider = { provide: 'ChartsPyramidSeries', useValue: PyramidSeries};\nexport const /** @type {?} */ AccumulationTooltipService: ValueProvider = { provide: 'ChartsAccumulationTooltip', useValue: AccumulationTooltip};\nexport const /** @type {?} */ AccumulationLegendService: ValueProvider = { provide: 'ChartsAccumulationLegend', useValue: AccumulationLegend};\nexport const /** @type {?} */ AccumulationSelectionService: ValueProvider = { provide: 'ChartsAccumulationSelection', useValue: AccumulationSelection};\nexport const /** @type {?} */ AccumulationDataLabelService: ValueProvider = { provide: 'ChartsAccumulationDataLabel', useValue: AccumulationDataLabel};\nexport const /** @type {?} */ AccumulationAnnotationService: ValueProvider = { provide: 'ChartsAccumulationAnnotation', useValue: AccumulationAnnotation};\n/**\n * NgModule definition for the AccumulationChart component with providers.\n */\nexport class AccumulationChartAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, AccumulationChartModule],\n    exports: [\n        AccumulationChartModule\n    ],\n    providers:[\n        PieSeriesService,\n        FunnelSeriesService,\n        PyramidSeriesService,\n        AccumulationTooltipService,\n        AccumulationLegendService,\n        AccumulationSelectionService,\n        AccumulationDataLabelService,\n        AccumulationAnnotationService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AccumulationChartAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAccumulationChartAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAccumulationChartAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animation', 'border', 'dashArray', 'dataSource', 'fill', 'opacity', 'query', 'type', 'width', 'xName', 'yName'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * RangenavigatorSeries Directive\n * ```html\n * <e-rangenavigator-series-collection>\n * <e-rangenavigator-series></e-rangenavigator-series>\n * </e-rangenavigator-series-collection>\n * ```\n */\nexport class RangenavigatorSeriesDirective extends ComplexBase<RangenavigatorSeriesDirective> {\npublic directivePropList: any;\n/**\n * It defines the series type of the range navigator\n * \\@default 'Line'\n */\npublic type: any;\n/**\n * Options to customizing animation for the series.\n */\npublic animation: any;\n/**\n * Options for customizing the color and width of the series border.\n */\npublic border: any;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n */\npublic dashArray: any;\n/**\n * It defines the data source for a series.\n * \\@default null\n */\npublic dataSource: any;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n */\npublic fill: any;\n/**\n * The opacity for the background.\n * \\@default 1\n */\npublic opacity: any;\n/**\n * It defines the query for the data source\n * \\@default null\n */\npublic query: any;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n */\npublic width: any;\n/**\n * It defines the xName for the series\n * \\@default null\n */\npublic xName: any;\n/**\n * It defines the yName for the series\n * \\@default null\n */\npublic yName: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-rangenavigator-series-collection>e-rangenavigator-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RangenavigatorSeriesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangenavigatorSeriesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangenavigatorSeriesDirective.ctorParameters;\n/** @type {?} */\nRangenavigatorSeriesDirective.prototype.directivePropList;\n/**\n * It defines the series type of the range navigator\n * \\@default 'Line'\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.type;\n/**\n * Options to customizing animation for the series.\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.animation;\n/**\n * Options for customizing the color and width of the series border.\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.border;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.dashArray;\n/**\n * It defines the data source for a series.\n * \\@default null\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.dataSource;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.fill;\n/**\n * The opacity for the background.\n * \\@default 1\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.opacity;\n/**\n * It defines the query for the data source\n * \\@default null\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.query;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.width;\n/**\n * It defines the xName for the series\n * \\@default null\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.xName;\n/**\n * It defines the yName for the series\n * \\@default null\n * @type {?}\n */\nRangenavigatorSeriesDirective.prototype.yName;\n/** @type {?} */\nRangenavigatorSeriesDirective.prototype.viewContainerRef;\n}\n\n/**\n * RangenavigatorSeries Array Directive\n */\nexport class RangenavigatorSeriesCollectionDirective extends ArrayBase<RangenavigatorSeriesCollectionDirective> {\nconstructor() {\n        super('series');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-rangenavigator>e-rangenavigator-series-collection',\n    queries: {\n        children: new ContentChildren(RangenavigatorSeriesDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangenavigatorSeriesCollectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangenavigatorSeriesCollectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangenavigatorSeriesCollectionDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { RangeNavigator } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { RangenavigatorSeriesCollectionDirective } from './series.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['allowSnapping','animationDuration','dataSource','disableRangeSelector','enableDeferredUpdate','enableGrouping','enablePersistence','enableRtl','groupBy','height','interval','intervalType','labelFormat','labelIntersectAction','labelPosition','labelStyle','locale','logBase','majorGridLines','majorTickLines','margin','maximum','minimum','navigatorBorder','navigatorStyleSettings','periodSelectorSettings','query','secondaryLabelAlignment','series','skeleton','skeletonType','theme','tickPosition','tooltip','useGroupingSeparator','value','valueType','width','xName','yName'];\nexport const /** @type {?} */ outputs: string[] = ['beforePrint','changed','labelRender','load','loaded','resized','selectorRender','tooltipRender','dataSourceChange'];\nexport const /** @type {?} */ twoWays: string[] = ['dataSource'];\n/**\n * RangeNavigator Component\n * ```html\n * <ejs-rangenavigator></ejs-rangenavigator>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class RangeNavigatorComponent extends RangeNavigator implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childSeries: QueryList<RangenavigatorSeriesCollectionDirective>;\npublic tags: string[] = ['series'];\npublic dataSourceChange: any;\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsRangeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsPeriodSelector');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStepLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsDateTime');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsLogarithmic');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-rangenavigator',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(RangenavigatorSeriesCollectionDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction RangeNavigatorComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeNavigatorComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeNavigatorComponent.ctorParameters;\n/** @type {?} */\nRangeNavigatorComponent.propDecorators;\n/** @type {?} */\nRangeNavigatorComponent.prototype.context;\n/** @type {?} */\nRangeNavigatorComponent.prototype.tagObjects;\n/** @type {?} */\nRangeNavigatorComponent.prototype.childSeries;\n/** @type {?} */\nRangeNavigatorComponent.prototype.tags;\n/** @type {?} */\nRangeNavigatorComponent.prototype.dataSourceChange;\n/** @type {?} */\nRangeNavigatorComponent.prototype.tooltip_template;\n/** @type {?} */\nRangeNavigatorComponent.prototype.registerEvents;\n/** @type {?} */\nRangeNavigatorComponent.prototype.addTwoWay;\n/** @type {?} */\nRangeNavigatorComponent.prototype.ngEle;\n/** @type {?} */\nRangeNavigatorComponent.prototype.srenderer;\n/** @type {?} */\nRangeNavigatorComponent.prototype.viewContainerRef;\n/** @type {?} */\nRangeNavigatorComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangenavigatorSeriesDirective, RangenavigatorSeriesCollectionDirective } from './series.directive';\nimport { RangeNavigatorComponent } from './rangenavigator.component';\n/**\n * NgModule definition for the RangeNavigator component.\n */\nexport class RangeNavigatorModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        RangeNavigatorComponent,\n        RangenavigatorSeriesDirective,\n        RangenavigatorSeriesCollectionDirective\n    ],\n    exports: [\n        RangeNavigatorComponent,\n        RangenavigatorSeriesDirective,\n        RangenavigatorSeriesCollectionDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangeNavigatorModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeNavigatorModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeNavigatorModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangenavigatorSeriesDirective, RangenavigatorSeriesCollectionDirective } from './series.directive';\nimport { RangeNavigatorComponent } from './rangenavigator.component';\nimport { RangeNavigatorModule } from './rangenavigator.module';\nimport {RangeTooltip, PeriodSelector} from '@syncfusion/ej2-charts';\n\n\nexport const /** @type {?} */ RangeTooltipService: ValueProvider = { provide: 'ChartsRangeTooltip', useValue: RangeTooltip};\nexport const /** @type {?} */ PeriodSelectorService: ValueProvider = { provide: 'ChartsPeriodSelector', useValue: PeriodSelector};\n/**\n * NgModule definition for the RangeNavigator component with providers.\n */\nexport class RangeNavigatorAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, RangeNavigatorModule],\n    exports: [\n        RangeNavigatorModule\n    ],\n    providers:[\n        RangeTooltipService,\n        PeriodSelectorService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangeNavigatorAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeNavigatorAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeNavigatorAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['color', 'endRange', 'opacity', 'startRange'];\nlet /** @type {?} */ outputs: string[] = [];\nexport class RangeBandSettingDirective extends ComplexBase<RangeBandSettingDirective> {\npublic directivePropList: any;\n/**\n * To configure sparkline rangeband color\n */\npublic color: any;\n/**\n * To configure sparkline end range\n * \\@aspdefaultvalueignore\n */\npublic endRange: any;\n/**\n * To configure sparkline rangeband opacity\n * \\@default 1\n */\npublic opacity: any;\n/**\n * To configure sparkline start range\n * \\@aspdefaultvalueignore\n */\npublic startRange: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-rangeBandSettings>e-rangeBandSetting',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RangeBandSettingDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeBandSettingDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeBandSettingDirective.ctorParameters;\n/** @type {?} */\nRangeBandSettingDirective.prototype.directivePropList;\n/**\n * To configure sparkline rangeband color\n * @type {?}\n */\nRangeBandSettingDirective.prototype.color;\n/**\n * To configure sparkline end range\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nRangeBandSettingDirective.prototype.endRange;\n/**\n * To configure sparkline rangeband opacity\n * \\@default 1\n * @type {?}\n */\nRangeBandSettingDirective.prototype.opacity;\n/**\n * To configure sparkline start range\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nRangeBandSettingDirective.prototype.startRange;\n/** @type {?} */\nRangeBandSettingDirective.prototype.viewContainerRef;\n}\n\n/**\n * RangeBandSetting Array Directive\n */\nexport class RangeBandSettingsDirective extends ArrayBase<RangeBandSettingsDirective> {\nconstructor() {\n        super('rangebandsettings');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-sparkline>e-rangeBandSettings',\n    queries: {\n        children: new ContentChildren(RangeBandSettingDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangeBandSettingsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeBandSettingsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeBandSettingsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Sparkline } from '@syncfusion/ej2-charts';\n\nimport { RangeBandSettingsDirective } from './rangebandsettings.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['axisSettings','border','containerArea','dataLabelSettings','dataSource','enablePersistence','enableRtl','endPointColor','fill','format','height','highPointColor','lineWidth','locale','lowPointColor','markerSettings','negativePointColor','opacity','padding','palette','query','rangeBandSettings','rangePadding','startPointColor','theme','tiePointColor','tooltipSettings','type','useGroupingSeparator','valueType','width','xName','yName'];\nexport const /** @type {?} */ outputs: string[] = ['axisRendering','dataLabelRendering','load','loaded','markerRendering','pointRegionMouseClick','pointRegionMouseMove','pointRendering','resize','seriesRendering','sparklineMouseClick','sparklineMouseMove','tooltipInitialize'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Sparkline Component\n * ```html\n * <ejs-sparkline></ejs-sparkline>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class SparklineComponent extends Sparkline implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childRangeBandSettings: QueryList<RangeBandSettingsDirective>;\npublic tags: string[] = ['rangeBandSettings'];\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsSparklineTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childRangeBandSettings;\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-sparkline',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childRangeBandSettings: new ContentChild(RangeBandSettingsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction SparklineComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSparklineComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparklineComponent.ctorParameters;\n/** @type {?} */\nSparklineComponent.prototype.context;\n/** @type {?} */\nSparklineComponent.prototype.tagObjects;\n/** @type {?} */\nSparklineComponent.prototype.childRangeBandSettings;\n/** @type {?} */\nSparklineComponent.prototype.tags;\n/** @type {?} */\nSparklineComponent.prototype.registerEvents;\n/** @type {?} */\nSparklineComponent.prototype.addTwoWay;\n/** @type {?} */\nSparklineComponent.prototype.ngEle;\n/** @type {?} */\nSparklineComponent.prototype.srenderer;\n/** @type {?} */\nSparklineComponent.prototype.viewContainerRef;\n/** @type {?} */\nSparklineComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeBandSettingDirective, RangeBandSettingsDirective } from './rangebandsettings.directive';\nimport { SparklineComponent } from './sparkline.component';\n/**\n * NgModule definition for the Sparkline component.\n */\nexport class SparklineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        SparklineComponent,\n        RangeBandSettingDirective,\n        RangeBandSettingsDirective\n    ],\n    exports: [\n        SparklineComponent,\n        RangeBandSettingDirective,\n        RangeBandSettingsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparklineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparklineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparklineModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeBandSettingDirective, RangeBandSettingsDirective } from './rangebandsettings.directive';\nimport { SparklineComponent } from './sparkline.component';\nimport { SparklineModule } from './sparkline.module';\nimport {SparklineTooltip} from '@syncfusion/ej2-charts';\n\n\nexport const /** @type {?} */ SparklineTooltipService: ValueProvider = { provide: 'ChartsSparklineTooltip', useValue: SparklineTooltip};\n/**\n * NgModule definition for the Sparkline component with providers.\n */\nexport class SparklineAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, SparklineModule],\n    exports: [\n        SparklineModule\n    ],\n    providers:[\n        SparklineTooltipService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SparklineAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSparklineAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSparklineAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animationDuration', 'dataSource', 'enableAnimation', 'enableSmartLabels', 'fill', 'marker', 'name', 'opacity', 'points', 'reactance', 'resistance', 'tooltip', 'visibility', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\nexport class SmithchartSeriesDirective extends ComplexBase<SmithchartSeriesDirective> {\npublic directivePropList: any;\n/**\n * perform animation of series based on animation duration.\n * \\@default '2000ms'\n */\npublic animationDuration: any;\n/**\n *  Specifies the dataSource\n * \\@default null\n * \\@isdatamanager false\n */\npublic dataSource: any;\n/**\n * enable or disable the animation of series.\n * \\@default false\n */\npublic enableAnimation: any;\n/**\n * avoid the overlap of dataLabels.\n * \\@default false\n */\npublic enableSmartLabels: any;\n/**\n * color for series.\n * \\@default null\n */\npublic fill: any;\n/**\n *  options for customizing marker\n */\npublic marker: any;\n/**\n * The name of the series visible in legend.\n * \\@default ''\n */\npublic name: any;\n/**\n * opacity for series.\n * \\@default 1\n */\npublic opacity: any;\n/**\n * points for series.\n * \\@default []\n */\npublic points: any;\n/**\n * reactance name for dataSource\n * \\@default ''\n */\npublic reactance: any;\n/**\n * resistance name for dataSource\n * \\@default ''\n */\npublic resistance: any;\n/**\n *  options for customizing tooltip\n */\npublic tooltip: any;\n/**\n * visibility for series.\n * \\@default 'visible'\n */\npublic visibility: any;\n/**\n * width for series.\n * \\@default 1\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-seriesCollection>e-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction SmithchartSeriesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSmithchartSeriesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSmithchartSeriesDirective.ctorParameters;\n/** @type {?} */\nSmithchartSeriesDirective.prototype.directivePropList;\n/**\n * perform animation of series based on animation duration.\n * \\@default '2000ms'\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.animationDuration;\n/**\n *  Specifies the dataSource\n * \\@default null\n * \\@isdatamanager false\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.dataSource;\n/**\n * enable or disable the animation of series.\n * \\@default false\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.enableAnimation;\n/**\n * avoid the overlap of dataLabels.\n * \\@default false\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.enableSmartLabels;\n/**\n * color for series.\n * \\@default null\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.fill;\n/**\n *  options for customizing marker\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.marker;\n/**\n * The name of the series visible in legend.\n * \\@default ''\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.name;\n/**\n * opacity for series.\n * \\@default 1\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.opacity;\n/**\n * points for series.\n * \\@default []\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.points;\n/**\n * reactance name for dataSource\n * \\@default ''\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.reactance;\n/**\n * resistance name for dataSource\n * \\@default ''\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.resistance;\n/**\n *  options for customizing tooltip\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.tooltip;\n/**\n * visibility for series.\n * \\@default 'visible'\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.visibility;\n/**\n * width for series.\n * \\@default 1\n * @type {?}\n */\nSmithchartSeriesDirective.prototype.width;\n/** @type {?} */\nSmithchartSeriesDirective.prototype.viewContainerRef;\n}\n\n/**\n * SmithchartSeries Array Directive\n */\nexport class SmithchartSeriesCollectionDirective extends ArrayBase<SmithchartSeriesCollectionDirective> {\nconstructor() {\n        super('series');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-smithchart>e-seriesCollection',\n    queries: {\n        children: new ContentChildren(SmithchartSeriesDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SmithchartSeriesCollectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSmithchartSeriesCollectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSmithchartSeriesCollectionDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Smithchart } from '@syncfusion/ej2-charts';\n\nimport { SmithchartSeriesCollectionDirective } from './series.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['background','border','elementSpacing','enablePersistence','enableRtl','font','height','horizontalAxis','legendSettings','locale','margin','radialAxis','radius','renderType','series','theme','title','width'];\nexport const /** @type {?} */ outputs: string[] = ['animationComplete','axisLabelRender','beforePrint','legendRender','load','loaded','seriesRender','subtitleRender','textRender','titleRender'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Smithchart Component\n * ```html\n * <ejs-smithchart></ejs-smithchart>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class SmithchartComponent extends Smithchart implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childSeries: QueryList<SmithchartSeriesCollectionDirective>;\npublic tags: string[] = ['series'];\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsSmithchartLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsTooltipRender');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-smithchart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(SmithchartSeriesCollectionDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction SmithchartComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSmithchartComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSmithchartComponent.ctorParameters;\n/** @type {?} */\nSmithchartComponent.prototype.context;\n/** @type {?} */\nSmithchartComponent.prototype.tagObjects;\n/** @type {?} */\nSmithchartComponent.prototype.childSeries;\n/** @type {?} */\nSmithchartComponent.prototype.tags;\n/** @type {?} */\nSmithchartComponent.prototype.registerEvents;\n/** @type {?} */\nSmithchartComponent.prototype.addTwoWay;\n/** @type {?} */\nSmithchartComponent.prototype.ngEle;\n/** @type {?} */\nSmithchartComponent.prototype.srenderer;\n/** @type {?} */\nSmithchartComponent.prototype.viewContainerRef;\n/** @type {?} */\nSmithchartComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SmithchartSeriesDirective, SmithchartSeriesCollectionDirective } from './series.directive';\nimport { SmithchartComponent } from './smithchart.component';\n/**\n * NgModule definition for the Smithchart component.\n */\nexport class SmithchartModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        SmithchartComponent,\n        SmithchartSeriesDirective,\n        SmithchartSeriesCollectionDirective\n    ],\n    exports: [\n        SmithchartComponent,\n        SmithchartSeriesDirective,\n        SmithchartSeriesCollectionDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SmithchartModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSmithchartModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSmithchartModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SmithchartSeriesDirective, SmithchartSeriesCollectionDirective } from './series.directive';\nimport { SmithchartComponent } from './smithchart.component';\nimport { SmithchartModule } from './smithchart.module';\nimport {SmithchartLegend, TooltipRender} from '@syncfusion/ej2-charts';\n\n\nexport const /** @type {?} */ SmithchartLegendService: ValueProvider = { provide: 'ChartsSmithchartLegend', useValue: SmithchartLegend};\nexport const /** @type {?} */ TooltipRenderService: ValueProvider = { provide: 'ChartsTooltipRender', useValue: TooltipRender};\n/**\n * NgModule definition for the Smithchart component with providers.\n */\nexport class SmithchartAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, SmithchartModule],\n    exports: [\n        SmithchartModule\n    ],\n    providers:[\n        SmithchartLegendService,\n        TooltipRenderService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SmithchartAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSmithchartAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSmithchartAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animation', 'backwardForecast', 'dashArray', 'enableTooltip', 'fill', 'forwardForecast', 'intercept', 'legendShape', 'marker', 'name', 'period', 'polynomialOrder', 'type', 'visible', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-stockchart-series-collection>\n * <e-stockchart-series>\n * <e-trendlines>\n * </e-trendline>\n * <e-trendline>\n * </e-trendlines>\n * </e-stockchart-series>\n * </e-stockchart-series-collection>\n * ```\n */\nexport class StockChartTrendlineDirective extends ComplexBase<StockChartTrendlineDirective> {\npublic directivePropList: any;\n/**\n * Defines the type of the trendline\n * \\@default 'Linear'\n */\npublic type: any;\n/**\n * Options to customize the animation for trendlines\n */\npublic animation: any;\n/**\n * Defines the period, by which the trend has to backward forecast\n * \\@default 0\n */\npublic backwardForecast: any;\n/**\n * Defines the pattern of dashes and gaps to stroke.\n * \\@default '0'\n */\npublic dashArray: any;\n/**\n * Enables/disables tooltip for trendlines\n * \\@default true\n */\npublic enableTooltip: any;\n/**\n * Defines the fill color of trendline\n * \\@default ''\n */\npublic fill: any;\n/**\n * Defines the period, by which the trend has to forward forecast\n * \\@default 0\n */\npublic forwardForecast: any;\n/**\n * Defines the intercept of the trendline\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic intercept: any;\n/**\n * Sets the legend shape of the trendline\n * \\@default 'SeriesType'\n */\npublic legendShape: any;\n/**\n * Options to customize the marker for trendlines\n * @deprecated\n */\npublic marker: any;\n/**\n * Defines the name of trendline\n * \\@default ''\n */\npublic name: any;\n/**\n * Defines the period, the price changes over which will be considered to predict moving average trend line\n * \\@default 2\n */\npublic period: any;\n/**\n * Defines the polynomial order of the polynomial trendline\n * \\@default 2\n */\npublic polynomialOrder: any;\n/**\n * Specifies the visibility of trendline.\n * \\@default true\n */\npublic visible: any;\n/**\n * Defines the width of the trendline\n * \\@default 1\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-stockchart-series>e-trendlines>e-trendline',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StockChartTrendlineDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartTrendlineDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartTrendlineDirective.ctorParameters;\n/** @type {?} */\nStockChartTrendlineDirective.prototype.directivePropList;\n/**\n * Defines the type of the trendline\n * \\@default 'Linear'\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.type;\n/**\n * Options to customize the animation for trendlines\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.animation;\n/**\n * Defines the period, by which the trend has to backward forecast\n * \\@default 0\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.backwardForecast;\n/**\n * Defines the pattern of dashes and gaps to stroke.\n * \\@default '0'\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.dashArray;\n/**\n * Enables/disables tooltip for trendlines\n * \\@default true\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.enableTooltip;\n/**\n * Defines the fill color of trendline\n * \\@default ''\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.fill;\n/**\n * Defines the period, by which the trend has to forward forecast\n * \\@default 0\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.forwardForecast;\n/**\n * Defines the intercept of the trendline\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.intercept;\n/**\n * Sets the legend shape of the trendline\n * \\@default 'SeriesType'\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.legendShape;\n/**\n * Options to customize the marker for trendlines\n * @deprecated\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.marker;\n/**\n * Defines the name of trendline\n * \\@default ''\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.name;\n/**\n * Defines the period, the price changes over which will be considered to predict moving average trend line\n * \\@default 2\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.period;\n/**\n * Defines the polynomial order of the polynomial trendline\n * \\@default 2\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.polynomialOrder;\n/**\n * Specifies the visibility of trendline.\n * \\@default true\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.visible;\n/**\n * Defines the width of the trendline\n * \\@default 1\n * @type {?}\n */\nStockChartTrendlineDirective.prototype.width;\n/** @type {?} */\nStockChartTrendlineDirective.prototype.viewContainerRef;\n}\n\n/**\n * StockChartTrendline Array Directive\n */\nexport class StockChartTrendlinesDirective extends ArrayBase<StockChartTrendlinesDirective> {\nconstructor() {\n        super('trendlines');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-stockchart-series>e-trendlines',\n    queries: {\n        children: new ContentChildren(StockChartTrendlineDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartTrendlinesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartTrendlinesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartTrendlinesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { StockChartTrendlinesDirective } from './trendlines.directive';\n\nlet /** @type {?} */ input: string[] = ['animation', 'bearFillColor', 'border', 'bullFillColor', 'cardinalSplineTension', 'close', 'columnSpacing', 'columnWidth', 'cornerRadius', 'dashArray', 'dataSource', 'emptyPointSettings', 'enableSolidCandles', 'enableTooltip', 'fill', 'high', 'low', 'marker', 'name', 'opacity', 'open', 'pointColorMapping', 'query', 'selectionStyle', 'tooltipMappingName', 'trendlines', 'type', 'visible', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName', 'yName'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-stockchart-series-collection>\n * <e-stockchart-series></e-stockchart-series>\n * </e-stockchart-series-collection>\n * ```\n */\nexport class StockChartSeriesDirective extends ComplexBase<StockChartSeriesDirective> {\npublic directivePropList: any;\npublic childTrendlines: any;\npublic tags: string[] = ['trendlines'];\n/**\n * The type of the series are \n * * Line \n * * Column \n * * Area \n * * Spline \n * * Hilo \n * * HiloOpenClose \n * * Candle\n * \\@default 'Candle'\n */\npublic type: any;\n/**\n * Options to customizing animation for the series.\n */\npublic animation: any;\n/**\n * This property is used in stock charts to visualize the price movements in stock. \n * It defines the color of the candle/point, when the opening price is less than the closing price.\n * \\@default '#2ecd71'\n */\npublic bearFillColor: any;\n/**\n * Options to customizing the border of the series. This is applicable only for `Column` and `Bar` type series.\n */\npublic border: any;\n/**\n * This property is used in financial charts to visualize the price movements in stock. \n * It defines the color of the candle/point, when the opening price is higher than the closing price.\n * \\@default '#e74c3d'\n */\npublic bullFillColor: any;\n/**\n * It defines tension of cardinal spline types\n * \\@default 0.5\n */\npublic cardinalSplineTension: any;\n/**\n * The DataSource field that contains the close value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic close: any;\n/**\n * To render the column series points with particular column spacing. It takes value from 0 - 1.\n * \\@default 0\n */\npublic columnSpacing: any;\n/**\n * To render the column series points with particular column width. If the series type is histogram the \n * default value is 1 otherwise 0.7.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic columnWidth: any;\n/**\n * To render the column series points with particular rounded corner.\n */\npublic cornerRadius: any;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n */\npublic dashArray: any;\n/**\n * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n * \\@default ''\n */\npublic dataSource: any;\n/**\n * options to customize the empty points in series\n */\npublic emptyPointSettings: any;\n/**\n * This property is applicable for candle series. \n * It enables/disables to visually compare the current values with the previous values in stock.\n * \\@default false\n */\npublic enableSolidCandles: any;\n/**\n * If set true, the Tooltip for series will be visible.\n * \\@default true\n */\npublic enableTooltip: any;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n */\npublic fill: any;\n/**\n * The DataSource field that contains the high value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic high: any;\n/**\n * The DataSource field that contains the low value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic low: any;\n/**\n * Options for displaying and customizing markers for individual points in a series.\n */\npublic marker: any;\n/**\n * The name of the series visible in legend.\n * \\@default ''\n */\npublic name: any;\n/**\n * The opacity of the series.\n * \\@default 1\n */\npublic opacity: any;\n/**\n * The DataSource field that contains the open value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic open: any;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n */\npublic pointColorMapping: any;\n/**\n * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n * \\@default null\n */\npublic query: any;\n/**\n * Custom style for the selected series or points.\n * \\@default null\n */\npublic selectionStyle: any;\n/**\n * The provided value will be considered as a Tooltip name\n * \\@default ''\n */\npublic tooltipMappingName: any;\n/**\n * Defines the collection of trendlines that are used to predict the trend\n */\npublic trendlines: any;\n/**\n * Specifies the visibility of series.\n * \\@default true\n */\npublic visible: any;\n/**\n * Defines the data source field that contains the volume value in candle charts \n * It is applicable for financial series and technical indicators\n * \\@default ''\n */\npublic volume: any;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n */\npublic width: any;\n/**\n * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators\n * \\@default null\n */\npublic xAxisName: any;\n/**\n * The DataSource field that contains the x value. \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic xName: any;\n/**\n * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators\n * \\@default null\n */\npublic yAxisName: any;\n/**\n * The DataSource field that contains the y value.\n * \\@default ''\n */\npublic yName: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-stockchart-series-collection>e-stockchart-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childTrendlines: new ContentChild(StockChartTrendlinesDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StockChartSeriesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartSeriesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartSeriesDirective.ctorParameters;\n/** @type {?} */\nStockChartSeriesDirective.prototype.directivePropList;\n/** @type {?} */\nStockChartSeriesDirective.prototype.childTrendlines;\n/** @type {?} */\nStockChartSeriesDirective.prototype.tags;\n/**\n * The type of the series are \n * * Line \n * * Column \n * * Area \n * * Spline \n * * Hilo \n * * HiloOpenClose \n * * Candle\n * \\@default 'Candle'\n * @type {?}\n */\nStockChartSeriesDirective.prototype.type;\n/**\n * Options to customizing animation for the series.\n * @type {?}\n */\nStockChartSeriesDirective.prototype.animation;\n/**\n * This property is used in stock charts to visualize the price movements in stock. \n * It defines the color of the candle/point, when the opening price is less than the closing price.\n * \\@default '#2ecd71'\n * @type {?}\n */\nStockChartSeriesDirective.prototype.bearFillColor;\n/**\n * Options to customizing the border of the series. This is applicable only for `Column` and `Bar` type series.\n * @type {?}\n */\nStockChartSeriesDirective.prototype.border;\n/**\n * This property is used in financial charts to visualize the price movements in stock. \n * It defines the color of the candle/point, when the opening price is higher than the closing price.\n * \\@default '#e74c3d'\n * @type {?}\n */\nStockChartSeriesDirective.prototype.bullFillColor;\n/**\n * It defines tension of cardinal spline types\n * \\@default 0.5\n * @type {?}\n */\nStockChartSeriesDirective.prototype.cardinalSplineTension;\n/**\n * The DataSource field that contains the close value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.close;\n/**\n * To render the column series points with particular column spacing. It takes value from 0 - 1.\n * \\@default 0\n * @type {?}\n */\nStockChartSeriesDirective.prototype.columnSpacing;\n/**\n * To render the column series points with particular column width. If the series type is histogram the \n * default value is 1 otherwise 0.7.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStockChartSeriesDirective.prototype.columnWidth;\n/**\n * To render the column series points with particular rounded corner.\n * @type {?}\n */\nStockChartSeriesDirective.prototype.cornerRadius;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n * @type {?}\n */\nStockChartSeriesDirective.prototype.dashArray;\n/**\n * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.dataSource;\n/**\n * options to customize the empty points in series\n * @type {?}\n */\nStockChartSeriesDirective.prototype.emptyPointSettings;\n/**\n * This property is applicable for candle series. \n * It enables/disables to visually compare the current values with the previous values in stock.\n * \\@default false\n * @type {?}\n */\nStockChartSeriesDirective.prototype.enableSolidCandles;\n/**\n * If set true, the Tooltip for series will be visible.\n * \\@default true\n * @type {?}\n */\nStockChartSeriesDirective.prototype.enableTooltip;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n * @type {?}\n */\nStockChartSeriesDirective.prototype.fill;\n/**\n * The DataSource field that contains the high value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.high;\n/**\n * The DataSource field that contains the low value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.low;\n/**\n * Options for displaying and customizing markers for individual points in a series.\n * @type {?}\n */\nStockChartSeriesDirective.prototype.marker;\n/**\n * The name of the series visible in legend.\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.name;\n/**\n * The opacity of the series.\n * \\@default 1\n * @type {?}\n */\nStockChartSeriesDirective.prototype.opacity;\n/**\n * The DataSource field that contains the open value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.open;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.pointColorMapping;\n/**\n * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n * \\@default null\n * @type {?}\n */\nStockChartSeriesDirective.prototype.query;\n/**\n * Custom style for the selected series or points.\n * \\@default null\n * @type {?}\n */\nStockChartSeriesDirective.prototype.selectionStyle;\n/**\n * The provided value will be considered as a Tooltip name\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.tooltipMappingName;\n/**\n * Defines the collection of trendlines that are used to predict the trend\n * @type {?}\n */\nStockChartSeriesDirective.prototype.trendlines;\n/**\n * Specifies the visibility of series.\n * \\@default true\n * @type {?}\n */\nStockChartSeriesDirective.prototype.visible;\n/**\n * Defines the data source field that contains the volume value in candle charts \n * It is applicable for financial series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.volume;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n * @type {?}\n */\nStockChartSeriesDirective.prototype.width;\n/**\n * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators\n * \\@default null\n * @type {?}\n */\nStockChartSeriesDirective.prototype.xAxisName;\n/**\n * The DataSource field that contains the x value. \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.xName;\n/**\n * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators\n * \\@default null\n * @type {?}\n */\nStockChartSeriesDirective.prototype.yAxisName;\n/**\n * The DataSource field that contains the y value.\n * \\@default ''\n * @type {?}\n */\nStockChartSeriesDirective.prototype.yName;\n/** @type {?} */\nStockChartSeriesDirective.prototype.viewContainerRef;\n}\n\n/**\n * StockChartSeries Array Directive\n */\nexport class StockChartSeriesCollectionDirective extends ArrayBase<StockChartSeriesCollectionDirective> {\nconstructor() {\n        super('series');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart>e-stockchart-series-collection',\n    queries: {\n        children: new ContentChildren(StockChartSeriesDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartSeriesCollectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartSeriesCollectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartSeriesCollectionDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['coefficient', 'crossesAt', 'crossesInAxis', 'crosshairTooltip', 'description', 'desiredIntervals', 'edgeLabelPlacement', 'enableAutoIntervalOnZooming', 'enableTrim', 'interval', 'intervalType', 'isInversed', 'labelFormat', 'labelIntersectAction', 'labelPlacement', 'labelPosition', 'labelRotation', 'labelStyle', 'lineStyle', 'logBase', 'majorGridLines', 'majorTickLines', 'maximum', 'maximumLabelWidth', 'maximumLabels', 'minimum', 'minorGridLines', 'minorTickLines', 'minorTicksPerInterval', 'name', 'opposedPosition', 'placeNextToAxisLine', 'plotOffset', 'rangePadding', 'rowIndex', 'skeleton', 'skeletonType', 'span', 'startAngle', 'stripLines', 'tabIndex', 'tickPosition', 'title', 'titleStyle', 'valueType', 'visible', 'zoomFactor', 'zoomPosition'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Axis Directive\n * ```html\n * <e-stockchart-axes><e-stockchart-axis></e-stockchart-axis></e-stockchart-axes>\n * ```\n */\nexport class StockChartAxisDirective extends ComplexBase<StockChartAxisDirective> {\npublic directivePropList: any;\n/**\n * The polar radar radius position.\n * \\@default 100\n */\npublic coefficient: any;\n/**\n * Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n * \\@default null\n */\npublic crossesAt: any;\n/**\n * Specifies axis name with which the axis line has to be crossed\n * \\@default null\n */\npublic crossesInAxis: any;\n/**\n * Options to customize the crosshair ToolTip.\n */\npublic crosshairTooltip: any;\n/**\n * Description for axis and its element.\n * \\@default null\n */\npublic description: any;\n/**\n * With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic desiredIntervals: any;\n/**\n * Specifies the position of labels at the edge of the axis.They are, \n * * None: No action will be performed. \n * * Hide: Edge label will be hidden. \n * * Shift: Shifts the edge labels.\n * \\@default 'None'\n */\npublic edgeLabelPlacement: any;\n/**\n * If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n * \\@default true\n */\npublic enableAutoIntervalOnZooming: any;\n/**\n * Specifies the Trim property for an axis.\n * \\@default false\n */\npublic enableTrim: any;\n/**\n * Specifies the interval for an axis.\n * \\@default null\n * \\@aspdefaultvalueignore\n */\npublic interval: any;\n/**\n * Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are, \n * * Auto: Defines the interval of the axis based on data. \n * * Years: Defines the interval of the axis in years. \n * * Months: Defines the interval of the axis in months. \n * * Days: Defines the interval of the axis in days. \n * * Hours: Defines the interval of the axis in hours. \n * * Minutes: Defines the interval of the axis in minutes.\n * \\@default 'Auto'\n */\npublic intervalType: any;\n/**\n * It specifies whether the axis to be rendered in inversed manner or not.\n * \\@default false\n */\npublic isInversed: any;\n/**\n * Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc. \n * It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n * \\@default ''\n */\npublic labelFormat: any;\n/**\n * Specifies the actions like `Hide`, `Rotate45`, and `Rotate90` when the axis labels intersect with each other.They are, \n * * None: Shows all the labels. \n * * Hide: Hides the label when it intersects. \n * * Rotate45: Rotates the label to 45 degree when it intersects. \n * * Rotate90: Rotates the label to 90 degree when it intersects.\n * \\@default Hide\n */\npublic labelIntersectAction: any;\n/**\n * Specifies the placement of a label for category axis. They are, \n * * betweenTicks: Renders the label between the ticks. \n * * onTicks: Renders the label on the ticks.\n * \\@default 'BetweenTicks'\n */\npublic labelPlacement: any;\n/**\n * Specifies the placement of a labels to the axis line. They are, \n * * inside: Renders the labels inside to the axis line. \n * * outside: Renders the labels outside to the axis line.\n * \\@default 'Outside'\n */\npublic labelPosition: any;\n/**\n * The angle to which the axis label gets rotated.\n * \\@default 0\n */\npublic labelRotation: any;\n/**\n * Options to customize the axis label.\n */\npublic labelStyle: any;\n/**\n * Options for customizing axis lines.\n */\npublic lineStyle: any;\n/**\n * The base value for logarithmic axis. It requires `valueType` to be `Logarithmic`.\n * \\@default 10\n */\npublic logBase: any;\n/**\n * Options for customizing major grid lines.\n */\npublic majorGridLines: any;\n/**\n * Options for customizing major tick lines.\n */\npublic majorTickLines: any;\n/**\n * Specifies the maximum range of an axis.\n * \\@default null\n */\npublic maximum: any;\n/**\n * Specifies the maximum width of an axis label.\n * \\@default 34.\n */\npublic maximumLabelWidth: any;\n/**\n * The maximum number of label count per 100 pixels with respect to the axis length.\n * \\@default 3\n */\npublic maximumLabels: any;\n/**\n * Specifies the minimum range of an axis.\n * \\@default null\n */\npublic minimum: any;\n/**\n * Options for customizing minor grid lines.\n */\npublic minorGridLines: any;\n/**\n * Options for customizing minor tick lines.\n */\npublic minorTickLines: any;\n/**\n * Specifies the number of minor ticks per interval.\n * \\@default 0\n */\npublic minorTicksPerInterval: any;\n/**\n * Unique identifier of an axis. \n * To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n * \\@default ''\n */\npublic name: any;\n/**\n * If set to true, the axis will render at the opposite side of its default position.\n * \\@default false\n */\npublic opposedPosition: any;\n/**\n * Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line\n * \\@default true\n */\npublic placeNextToAxisLine: any;\n/**\n * Left and right padding for the plot area in pixels.\n * \\@default 0\n */\npublic plotOffset: any;\n/**\n * Specifies the padding for the axis range in terms of interval.They are, \n * * none: Padding cannot be applied to the axis. \n * * normal: Padding is applied to the axis based on the range calculation. \n * * additional: Interval of the axis is added as padding to the minimum and maximum values of the range. \n * * round: Axis range is rounded to the nearest possible value divided by the interval.\n * \\@default 'Auto'\n */\npublic rangePadding: any;\n/**\n * Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `rows`. \n * \n * \\@default 0\n */\npublic rowIndex: any;\n/**\n * Specifies the skeleton format in which the dateTime format will process.\n * \\@default ''\n */\npublic skeleton: any;\n/**\n * It specifies the type of format to be used in dateTime format process.\n * \\@default 'DateTime'\n */\npublic skeletonType: any;\n/**\n * Specifies the number of `columns` or `rows` an axis has to span horizontally or vertically.\n * \\@default 1\n */\npublic span: any;\n/**\n * The start angle for the series.\n * \\@default 0\n */\npublic startAngle: any;\n/**\n * Specifies the stripLine collection for the axis\n */\npublic stripLines: any;\n/**\n * TabIndex value for the axis.\n * \\@default 2\n */\npublic tabIndex: any;\n/**\n * Specifies the placement of a ticks to the axis line. They are, \n * * inside: Renders the ticks inside to the axis line. \n * * outside: Renders the ticks outside to the axis line.\n * \\@default 'Outside'\n */\npublic tickPosition: any;\n/**\n * Specifies the title of an axis.\n * \\@default ''\n */\npublic title: any;\n/**\n * Options for customizing the axis title.\n */\npublic titleStyle: any;\n/**\n * Specifies the type of data the axis is handling. \n * * Double:  Renders a numeric axis. \n * * DateTime: Renders a dateTime axis. \n * * Category: Renders a category axis. \n * * Logarithmic: Renders a log axis.\n * \\@default 'Double'\n * \\@blazortype Syncfusion.EJ2.Blazor.Charts.ValueType\n * \\@isenumeration true\n */\npublic valueType: any;\n/**\n * If set to true, axis label will be visible.\n * \\@default true\n */\npublic visible: any;\n/**\n * The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n * \\@default 1\n */\npublic zoomFactor: any;\n/**\n * Position of the zoomed axis. Value ranges from 0 to 1.\n * \\@default 0\n */\npublic zoomPosition: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-stockchart-axes>e-stockchart-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StockChartAxisDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartAxisDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartAxisDirective.ctorParameters;\n/** @type {?} */\nStockChartAxisDirective.prototype.directivePropList;\n/**\n * The polar radar radius position.\n * \\@default 100\n * @type {?}\n */\nStockChartAxisDirective.prototype.coefficient;\n/**\n * Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n * \\@default null\n * @type {?}\n */\nStockChartAxisDirective.prototype.crossesAt;\n/**\n * Specifies axis name with which the axis line has to be crossed\n * \\@default null\n * @type {?}\n */\nStockChartAxisDirective.prototype.crossesInAxis;\n/**\n * Options to customize the crosshair ToolTip.\n * @type {?}\n */\nStockChartAxisDirective.prototype.crosshairTooltip;\n/**\n * Description for axis and its element.\n * \\@default null\n * @type {?}\n */\nStockChartAxisDirective.prototype.description;\n/**\n * With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStockChartAxisDirective.prototype.desiredIntervals;\n/**\n * Specifies the position of labels at the edge of the axis.They are, \n * * None: No action will be performed. \n * * Hide: Edge label will be hidden. \n * * Shift: Shifts the edge labels.\n * \\@default 'None'\n * @type {?}\n */\nStockChartAxisDirective.prototype.edgeLabelPlacement;\n/**\n * If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n * \\@default true\n * @type {?}\n */\nStockChartAxisDirective.prototype.enableAutoIntervalOnZooming;\n/**\n * Specifies the Trim property for an axis.\n * \\@default false\n * @type {?}\n */\nStockChartAxisDirective.prototype.enableTrim;\n/**\n * Specifies the interval for an axis.\n * \\@default null\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nStockChartAxisDirective.prototype.interval;\n/**\n * Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are, \n * * Auto: Defines the interval of the axis based on data. \n * * Years: Defines the interval of the axis in years. \n * * Months: Defines the interval of the axis in months. \n * * Days: Defines the interval of the axis in days. \n * * Hours: Defines the interval of the axis in hours. \n * * Minutes: Defines the interval of the axis in minutes.\n * \\@default 'Auto'\n * @type {?}\n */\nStockChartAxisDirective.prototype.intervalType;\n/**\n * It specifies whether the axis to be rendered in inversed manner or not.\n * \\@default false\n * @type {?}\n */\nStockChartAxisDirective.prototype.isInversed;\n/**\n * Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc. \n * It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n * \\@default ''\n * @type {?}\n */\nStockChartAxisDirective.prototype.labelFormat;\n/**\n * Specifies the actions like `Hide`, `Rotate45`, and `Rotate90` when the axis labels intersect with each other.They are, \n * * None: Shows all the labels. \n * * Hide: Hides the label when it intersects. \n * * Rotate45: Rotates the label to 45 degree when it intersects. \n * * Rotate90: Rotates the label to 90 degree when it intersects.\n * \\@default Hide\n * @type {?}\n */\nStockChartAxisDirective.prototype.labelIntersectAction;\n/**\n * Specifies the placement of a label for category axis. They are, \n * * betweenTicks: Renders the label between the ticks. \n * * onTicks: Renders the label on the ticks.\n * \\@default 'BetweenTicks'\n * @type {?}\n */\nStockChartAxisDirective.prototype.labelPlacement;\n/**\n * Specifies the placement of a labels to the axis line. They are, \n * * inside: Renders the labels inside to the axis line. \n * * outside: Renders the labels outside to the axis line.\n * \\@default 'Outside'\n * @type {?}\n */\nStockChartAxisDirective.prototype.labelPosition;\n/**\n * The angle to which the axis label gets rotated.\n * \\@default 0\n * @type {?}\n */\nStockChartAxisDirective.prototype.labelRotation;\n/**\n * Options to customize the axis label.\n * @type {?}\n */\nStockChartAxisDirective.prototype.labelStyle;\n/**\n * Options for customizing axis lines.\n * @type {?}\n */\nStockChartAxisDirective.prototype.lineStyle;\n/**\n * The base value for logarithmic axis. It requires `valueType` to be `Logarithmic`.\n * \\@default 10\n * @type {?}\n */\nStockChartAxisDirective.prototype.logBase;\n/**\n * Options for customizing major grid lines.\n * @type {?}\n */\nStockChartAxisDirective.prototype.majorGridLines;\n/**\n * Options for customizing major tick lines.\n * @type {?}\n */\nStockChartAxisDirective.prototype.majorTickLines;\n/**\n * Specifies the maximum range of an axis.\n * \\@default null\n * @type {?}\n */\nStockChartAxisDirective.prototype.maximum;\n/**\n * Specifies the maximum width of an axis label.\n * \\@default 34.\n * @type {?}\n */\nStockChartAxisDirective.prototype.maximumLabelWidth;\n/**\n * The maximum number of label count per 100 pixels with respect to the axis length.\n * \\@default 3\n * @type {?}\n */\nStockChartAxisDirective.prototype.maximumLabels;\n/**\n * Specifies the minimum range of an axis.\n * \\@default null\n * @type {?}\n */\nStockChartAxisDirective.prototype.minimum;\n/**\n * Options for customizing minor grid lines.\n * @type {?}\n */\nStockChartAxisDirective.prototype.minorGridLines;\n/**\n * Options for customizing minor tick lines.\n * @type {?}\n */\nStockChartAxisDirective.prototype.minorTickLines;\n/**\n * Specifies the number of minor ticks per interval.\n * \\@default 0\n * @type {?}\n */\nStockChartAxisDirective.prototype.minorTicksPerInterval;\n/**\n * Unique identifier of an axis. \n * To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n * \\@default ''\n * @type {?}\n */\nStockChartAxisDirective.prototype.name;\n/**\n * If set to true, the axis will render at the opposite side of its default position.\n * \\@default false\n * @type {?}\n */\nStockChartAxisDirective.prototype.opposedPosition;\n/**\n * Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line\n * \\@default true\n * @type {?}\n */\nStockChartAxisDirective.prototype.placeNextToAxisLine;\n/**\n * Left and right padding for the plot area in pixels.\n * \\@default 0\n * @type {?}\n */\nStockChartAxisDirective.prototype.plotOffset;\n/**\n * Specifies the padding for the axis range in terms of interval.They are, \n * * none: Padding cannot be applied to the axis. \n * * normal: Padding is applied to the axis based on the range calculation. \n * * additional: Interval of the axis is added as padding to the minimum and maximum values of the range. \n * * round: Axis range is rounded to the nearest possible value divided by the interval.\n * \\@default 'Auto'\n * @type {?}\n */\nStockChartAxisDirective.prototype.rangePadding;\n/**\n * Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `rows`. \n * \n * \\@default 0\n * @type {?}\n */\nStockChartAxisDirective.prototype.rowIndex;\n/**\n * Specifies the skeleton format in which the dateTime format will process.\n * \\@default ''\n * @type {?}\n */\nStockChartAxisDirective.prototype.skeleton;\n/**\n * It specifies the type of format to be used in dateTime format process.\n * \\@default 'DateTime'\n * @type {?}\n */\nStockChartAxisDirective.prototype.skeletonType;\n/**\n * Specifies the number of `columns` or `rows` an axis has to span horizontally or vertically.\n * \\@default 1\n * @type {?}\n */\nStockChartAxisDirective.prototype.span;\n/**\n * The start angle for the series.\n * \\@default 0\n * @type {?}\n */\nStockChartAxisDirective.prototype.startAngle;\n/**\n * Specifies the stripLine collection for the axis\n * @type {?}\n */\nStockChartAxisDirective.prototype.stripLines;\n/**\n * TabIndex value for the axis.\n * \\@default 2\n * @type {?}\n */\nStockChartAxisDirective.prototype.tabIndex;\n/**\n * Specifies the placement of a ticks to the axis line. They are, \n * * inside: Renders the ticks inside to the axis line. \n * * outside: Renders the ticks outside to the axis line.\n * \\@default 'Outside'\n * @type {?}\n */\nStockChartAxisDirective.prototype.tickPosition;\n/**\n * Specifies the title of an axis.\n * \\@default ''\n * @type {?}\n */\nStockChartAxisDirective.prototype.title;\n/**\n * Options for customizing the axis title.\n * @type {?}\n */\nStockChartAxisDirective.prototype.titleStyle;\n/**\n * Specifies the type of data the axis is handling. \n * * Double:  Renders a numeric axis. \n * * DateTime: Renders a dateTime axis. \n * * Category: Renders a category axis. \n * * Logarithmic: Renders a log axis.\n * \\@default 'Double'\n * \\@blazortype Syncfusion.EJ2.Blazor.Charts.ValueType\n * \\@isenumeration true\n * @type {?}\n */\nStockChartAxisDirective.prototype.valueType;\n/**\n * If set to true, axis label will be visible.\n * \\@default true\n * @type {?}\n */\nStockChartAxisDirective.prototype.visible;\n/**\n * The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n * \\@default 1\n * @type {?}\n */\nStockChartAxisDirective.prototype.zoomFactor;\n/**\n * Position of the zoomed axis. Value ranges from 0 to 1.\n * \\@default 0\n * @type {?}\n */\nStockChartAxisDirective.prototype.zoomPosition;\n/** @type {?} */\nStockChartAxisDirective.prototype.viewContainerRef;\n}\n\n/**\n * StockChartAxis Array Directive\n */\nexport class StockChartAxesDirective extends ArrayBase<StockChartAxesDirective> {\nconstructor() {\n        super('axes');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart>e-stockchart-axes',\n    queries: {\n        children: new ContentChildren(StockChartAxisDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartAxesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartAxesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartAxesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['border', 'height'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Row Directive\n * ```html\n * <e-rows><e-row></e-row><e-rows>\n * ```\n */\nexport class StockChartRowDirective extends ComplexBase<StockChartRowDirective> {\npublic directivePropList: any;\n/**\n * Options to customize the border of the rows.\n */\npublic border: any;\n/**\n * The height of the row as a string accept input both as '100px' and '100%'. \n * If specified as '100%, row renders to the full height of its chart.\n * \\@default '100%'\n */\npublic height: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-stockchart-rows>e-stockchart-row',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StockChartRowDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartRowDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartRowDirective.ctorParameters;\n/** @type {?} */\nStockChartRowDirective.prototype.directivePropList;\n/**\n * Options to customize the border of the rows.\n * @type {?}\n */\nStockChartRowDirective.prototype.border;\n/**\n * The height of the row as a string accept input both as '100px' and '100%'. \n * If specified as '100%, row renders to the full height of its chart.\n * \\@default '100%'\n * @type {?}\n */\nStockChartRowDirective.prototype.height;\n/** @type {?} */\nStockChartRowDirective.prototype.viewContainerRef;\n}\n\n/**\n * StockChartRow Array Directive\n */\nexport class StockChartRowsDirective extends ArrayBase<StockChartRowsDirective> {\nconstructor() {\n        super('rows');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart>e-stockchart-rows',\n    queries: {\n        children: new ContentChildren(StockChartRowDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartRowsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartRowsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartRowsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['content', 'coordinateUnits', 'description', 'horizontalAlignment', 'region', 'verticalAlignment', 'x', 'xAxisName', 'y', 'yAxisName'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Annotation Directive\n * ```html\n * <e-stockchart-annotations><e-stockchart-annotation></e-stockchart-annotation><e-stockchart-annotations>\n * ```\n */\nexport class StockChartAnnotationDirective extends ComplexBase<StockChartAnnotationDirective> {\npublic directivePropList: any;\n/**\n * Specifies the coordinate units of the annotation. They are \n * * Pixel - Annotation renders based on x and y pixel value. \n * * Point - Annotation renders based on x and y axis value.\n * \\@default 'Pixel'\n */\npublic coordinateUnits: any;\n/**\n * Information about annotation for assistive technology.\n * \\@default null\n */\npublic description: any;\n/**\n * Specifies the alignment of the annotation. They are \n * * Near - Align the annotation element as left side. \n * * Far - Align the annotation element as right side. \n * * Center - Align the annotation element as mid point.\n * \\@default 'Center'\n */\npublic horizontalAlignment: any;\n/**\n * Specifies the regions of the annotation. They are \n * * Chart - Annotation renders based on chart coordinates. \n * * Series - Annotation renders based on series coordinates.\n * \\@default 'Chart'\n */\npublic region: any;\n/**\n * Specifies the position of the annotation. They are \n * * Top - Align the annotation element as top side. \n * * Bottom - Align the annotation element as bottom side. \n * * Middle - Align the annotation element as mid point.\n * \\@default 'Middle'\n */\npublic verticalAlignment: any;\n/**\n * if set coordinateUnit as `Pixel` X specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n */\npublic x: any;\n/**\n * The name of horizontal axis associated with the annotation. \n * It requires `axes` of chart.\n * \\@default null\n */\npublic xAxisName: any;\n/**\n * if set coordinateUnit as `Pixel` Y specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n */\npublic y: any;\n/**\n * The name of vertical axis associated with the annotation. \n * It requires `axes` of chart.\n * \\@default null\n */\npublic yAxisName: any;\n/**\n * Content of the annotation, which accepts the id of the custom element.\n * \\@default null\n */\n@Template()\n    public content: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart-annotations>e-stockchart-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: ['content', ] },],\n};\n}\n\nfunction StockChartAnnotationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartAnnotationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartAnnotationDirective.ctorParameters;\n/** @type {?} */\nStockChartAnnotationDirective.propDecorators;\n/** @type {?} */\nStockChartAnnotationDirective.prototype.directivePropList;\n/**\n * Specifies the coordinate units of the annotation. They are \n * * Pixel - Annotation renders based on x and y pixel value. \n * * Point - Annotation renders based on x and y axis value.\n * \\@default 'Pixel'\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.coordinateUnits;\n/**\n * Information about annotation for assistive technology.\n * \\@default null\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.description;\n/**\n * Specifies the alignment of the annotation. They are \n * * Near - Align the annotation element as left side. \n * * Far - Align the annotation element as right side. \n * * Center - Align the annotation element as mid point.\n * \\@default 'Center'\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.horizontalAlignment;\n/**\n * Specifies the regions of the annotation. They are \n * * Chart - Annotation renders based on chart coordinates. \n * * Series - Annotation renders based on series coordinates.\n * \\@default 'Chart'\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.region;\n/**\n * Specifies the position of the annotation. They are \n * * Top - Align the annotation element as top side. \n * * Bottom - Align the annotation element as bottom side. \n * * Middle - Align the annotation element as mid point.\n * \\@default 'Middle'\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.verticalAlignment;\n/**\n * if set coordinateUnit as `Pixel` X specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.x;\n/**\n * The name of horizontal axis associated with the annotation. \n * It requires `axes` of chart.\n * \\@default null\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.xAxisName;\n/**\n * if set coordinateUnit as `Pixel` Y specifies the axis value \n * else is specifies pixel or percentage of coordinate\n * \\@default '0'\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.y;\n/**\n * The name of vertical axis associated with the annotation. \n * It requires `axes` of chart.\n * \\@default null\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.yAxisName;\n/**\n * Content of the annotation, which accepts the id of the custom element.\n * \\@default null\n * @type {?}\n */\nStockChartAnnotationDirective.prototype.content;\n/** @type {?} */\nStockChartAnnotationDirective.prototype.viewContainerRef;\n}\n\n/**\n * StockChartAnnotation Array Directive\n */\nexport class StockChartAnnotationsDirective extends ArrayBase<StockChartAnnotationsDirective> {\nconstructor() {\n        super('annotations');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart>e-stockchart-annotations',\n    queries: {\n        children: new ContentChildren(StockChartAnnotationDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartAnnotationsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartAnnotationsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartAnnotationsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['point', 'series'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Selected Data Directive\n * ```html\n * <e-selecteddataindexes><e-selecteddataindex></e-selecteddataindex><e-selecteddataindexes>\n * ```\n */\nexport class StockChartSelectedDataIndexDirective extends ComplexBase<StockChartSelectedDataIndexDirective> {\npublic directivePropList: any;\n/**\n * Specifies index of point\n * \\@default 0\n * \\@asptype int\n */\npublic point: any;\n/**\n * Specifies index of series\n * \\@default 0\n * \\@asptype int\n */\npublic series: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart-selectedDataIndexes>e-stockchart-selectedDataIndex',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StockChartSelectedDataIndexDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartSelectedDataIndexDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartSelectedDataIndexDirective.ctorParameters;\n/** @type {?} */\nStockChartSelectedDataIndexDirective.prototype.directivePropList;\n/**\n * Specifies index of point\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nStockChartSelectedDataIndexDirective.prototype.point;\n/**\n * Specifies index of series\n * \\@default 0\n * \\@asptype int\n * @type {?}\n */\nStockChartSelectedDataIndexDirective.prototype.series;\n/** @type {?} */\nStockChartSelectedDataIndexDirective.prototype.viewContainerRef;\n}\n\n/**\n * StockChartSelectedDataIndex Array Directive\n */\nexport class StockChartSelectedDataIndexesDirective extends ArrayBase<StockChartSelectedDataIndexesDirective> {\nconstructor() {\n        super('selecteddataindexes');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart>e-stockchart-selectedDataIndexes',\n    queries: {\n        children: new ContentChildren(StockChartSelectedDataIndexDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartSelectedDataIndexesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartSelectedDataIndexesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartSelectedDataIndexesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['interval', 'intervalType', 'selected', 'text'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Indicator Directive\n * ```html\n * <e-stockchart-periods>\n * <e-stockchart-period></e-stockchart-period>\n * </e-stockchart-periods>\n * ```\n */\nexport class StockChartPeriodDirective extends ComplexBase<StockChartPeriodDirective> {\npublic directivePropList: any;\n/**\n * Count value for the button\n * \\@default 1\n */\npublic interval: any;\n/**\n * IntervalType of button\n * \\@default 'Years'\n */\npublic intervalType: any;\n/**\n * To select the default period\n * \\@default false\n */\npublic selected: any;\n/**\n * Text to be displayed on the button\n * \\@default null\n */\npublic text: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-stockchart-indicators>e-stockchart-period',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StockChartPeriodDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartPeriodDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartPeriodDirective.ctorParameters;\n/** @type {?} */\nStockChartPeriodDirective.prototype.directivePropList;\n/**\n * Count value for the button\n * \\@default 1\n * @type {?}\n */\nStockChartPeriodDirective.prototype.interval;\n/**\n * IntervalType of button\n * \\@default 'Years'\n * @type {?}\n */\nStockChartPeriodDirective.prototype.intervalType;\n/**\n * To select the default period\n * \\@default false\n * @type {?}\n */\nStockChartPeriodDirective.prototype.selected;\n/**\n * Text to be displayed on the button\n * \\@default null\n * @type {?}\n */\nStockChartPeriodDirective.prototype.text;\n/** @type {?} */\nStockChartPeriodDirective.prototype.viewContainerRef;\n}\n\n/**\n * StockChartPeriod Array Directive\n */\nexport class StockChartPeriodsDirective extends ArrayBase<StockChartPeriodsDirective> {\nconstructor() {\n        super('periods');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart>e-stockchart-periods',\n    queries: {\n        children: new ContentChildren(StockChartPeriodDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartPeriodsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartPeriodsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartPeriodsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['background', 'border', 'date', 'description', 'placeAt', 'showOnSeries', 'text', 'textStyle', 'type'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * StockEvents\n * ```html\n * <e-stockchart-stockevents>\n * <e-stockchart-stockevent></e-stockchart-stockevent>\n * </e-stockchart-stockevents>\n * ```\n */\nexport class StockEventDirective extends ComplexBase<StockEventDirective> {\npublic directivePropList: any;\n/**\n * Specifies type of stock events \n * * Circle \n * * Square \n * * Flag \n * * Text \n * * Sign \n * * Triangle \n * * InvertedTriangle \n * * ArrowUp \n * * ArrowDown \n * * ArrowLeft \n * * ArrowRight\n * \\@default 'Circle'\n */\npublic type: any;\n/**\n * The background of the stock event that accepts value in hex and rgba as a valid CSS color string.\n * \\@default 'transparent'\n */\npublic background: any;\n/**\n * Options to customize the border of the stock events.\n */\npublic border: any;\n/**\n * Date value of stock event in which stock event shows.\n */\npublic date: any;\n/**\n * Specifies the description for the chart which renders in tooltip for stock event.\n */\npublic description: any;\n/**\n * Corresponding values in which stock event placed. \n * * Close \n * * Open \n * * High \n * * Close\n * \\@default 'close'\n */\npublic placeAt: any;\n/**\n * Enables the stock events to be render on series. If it disabled, stock event rendered on primaryXAxis.\n * \\@default true\n */\npublic showOnSeries: any;\n/**\n * Specifies the text for the stock chart text.\n */\npublic text: any;\n/**\n * Options to customize the styles for stock events text.\n */\npublic textStyle: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-stockchart-indicators>e-stockchart-stockevent',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StockEventDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockEventDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockEventDirective.ctorParameters;\n/** @type {?} */\nStockEventDirective.prototype.directivePropList;\n/**\n * Specifies type of stock events \n * * Circle \n * * Square \n * * Flag \n * * Text \n * * Sign \n * * Triangle \n * * InvertedTriangle \n * * ArrowUp \n * * ArrowDown \n * * ArrowLeft \n * * ArrowRight\n * \\@default 'Circle'\n * @type {?}\n */\nStockEventDirective.prototype.type;\n/**\n * The background of the stock event that accepts value in hex and rgba as a valid CSS color string.\n * \\@default 'transparent'\n * @type {?}\n */\nStockEventDirective.prototype.background;\n/**\n * Options to customize the border of the stock events.\n * @type {?}\n */\nStockEventDirective.prototype.border;\n/**\n * Date value of stock event in which stock event shows.\n * @type {?}\n */\nStockEventDirective.prototype.date;\n/**\n * Specifies the description for the chart which renders in tooltip for stock event.\n * @type {?}\n */\nStockEventDirective.prototype.description;\n/**\n * Corresponding values in which stock event placed. \n * * Close \n * * Open \n * * High \n * * Close\n * \\@default 'close'\n * @type {?}\n */\nStockEventDirective.prototype.placeAt;\n/**\n * Enables the stock events to be render on series. If it disabled, stock event rendered on primaryXAxis.\n * \\@default true\n * @type {?}\n */\nStockEventDirective.prototype.showOnSeries;\n/**\n * Specifies the text for the stock chart text.\n * @type {?}\n */\nStockEventDirective.prototype.text;\n/**\n * Options to customize the styles for stock events text.\n * @type {?}\n */\nStockEventDirective.prototype.textStyle;\n/** @type {?} */\nStockEventDirective.prototype.viewContainerRef;\n}\n\n/**\n * StockEvent Array Directive\n */\nexport class StockEventsDirective extends ArrayBase<StockEventsDirective> {\nconstructor() {\n        super('stockevents');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart>e-stockchart-stockevents',\n    queries: {\n        children: new ContentChildren(StockEventDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockEventsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockEventsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockEventsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animation', 'bandColor', 'close', 'dPeriod', 'dashArray', 'dataSource', 'fastPeriod', 'field', 'fill', 'high', 'kPeriod', 'low', 'lowerLine', 'macdLine', 'macdNegativeColor', 'macdPositiveColor', 'macdType', 'open', 'overBought', 'overSold', 'period', 'periodLine', 'pointColorMapping', 'query', 'seriesName', 'showZones', 'slowPeriod', 'standardDeviation', 'type', 'upperLine', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Indicator Directive\n * ```html\n * <e-stockchart-indicators>\n * <e-stockchart-indicator></e-stockchart-indicator>\n * </e-stockchart-indicators>\n * ```\n */\nexport class StockChartIndicatorDirective extends ComplexBase<StockChartIndicatorDirective> {\npublic directivePropList: any;\n/**\n * Defines the type of the technical indicator\n * \\@default 'Sma'\n */\npublic type: any;\n/**\n * Options to customizing animation for the series.\n */\npublic animation: any;\n/**\n * Options for customizing the BollingerBand in the indicator.\n * \\@default 'rgba(211,211,211,0.25)'\n */\npublic bandColor: any;\n/**\n * The DataSource field that contains the close value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic close: any;\n/**\n * Defines the period, the price changes over which will define the %D value in stochastic indicators\n * \\@default 3\n */\npublic dPeriod: any;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n */\npublic dashArray: any;\n/**\n * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n * \n * \\@default ''\n */\npublic dataSource: any;\n/**\n * Sets the fast period to define the Macd line\n * \\@default 26\n */\npublic fastPeriod: any;\n/**\n * Defines the field to compare the current value with previous values\n * \\@default 'Close'\n */\npublic field: any;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n */\npublic fill: any;\n/**\n * The DataSource field that contains the high value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic high: any;\n/**\n * Defines the look back period, the price changes over which will define the %K value in stochastic indicators\n * \\@default 14\n */\npublic kPeriod: any;\n/**\n * The DataSource field that contains the low value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic low: any;\n/**\n * Defines the appearance of lower line in technical indicators\n */\npublic lowerLine: any;\n/**\n * Defines the appearance of the the MacdLine of Macd indicator\n * \\@default { color: '#ff9933', width: 2 }\n */\npublic macdLine: any;\n/**\n * Defines the color of the negative bars in Macd indicators\n * \\@default '#e74c3d'\n */\npublic macdNegativeColor: any;\n/**\n * Defines the color of the positive bars in Macd indicators\n * \\@default '#2ecd71'\n */\npublic macdPositiveColor: any;\n/**\n * Defines the type of the Macd indicator.\n * \\@default 'Both'\n */\npublic macdType: any;\n/**\n * The DataSource field that contains the open value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic open: any;\n/**\n * Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators\n * \\@default 80\n */\npublic overBought: any;\n/**\n * Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators\n * \\@default 20\n */\npublic overSold: any;\n/**\n * Defines the period, the price changes over which will be considered to predict the trend\n * \\@default 14\n */\npublic period: any;\n/**\n * Defines the appearance of period line in technical indicators\n */\npublic periodLine: any;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n */\npublic pointColorMapping: any;\n/**\n * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n * \\@default null\n */\npublic query: any;\n/**\n * Defines the name of the series, the data of which has to be depicted as indicator\n * \\@default ''\n */\npublic seriesName: any;\n/**\n * Enables/Disables the over-bought and over-sold regions\n * \\@default true\n */\npublic showZones: any;\n/**\n * Sets the slow period to define the Macd line\n * \\@default 12\n */\npublic slowPeriod: any;\n/**\n * Sets the standard deviation values that helps to define the upper and lower bollinger bands\n * \\@default 2\n */\npublic standardDeviation: any;\n/**\n * Defines the appearance of the upper line in technical indicators\n */\npublic upperLine: any;\n/**\n * Defines the data source field that contains the volume value in candle charts \n * It is applicable for financial series and technical indicators\n * \\@default ''\n */\npublic volume: any;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n */\npublic width: any;\n/**\n * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n */\npublic xAxisName: any;\n/**\n * The DataSource field that contains the x value. \n * It is applicable for series and technical indicators\n * \\@default ''\n */\npublic xName: any;\n/**\n * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n */\npublic yAxisName: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-stockchart-indicators>e-stockchart-indicator',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction StockChartIndicatorDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartIndicatorDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartIndicatorDirective.ctorParameters;\n/** @type {?} */\nStockChartIndicatorDirective.prototype.directivePropList;\n/**\n * Defines the type of the technical indicator\n * \\@default 'Sma'\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.type;\n/**\n * Options to customizing animation for the series.\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.animation;\n/**\n * Options for customizing the BollingerBand in the indicator.\n * \\@default 'rgba(211,211,211,0.25)'\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.bandColor;\n/**\n * The DataSource field that contains the close value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.close;\n/**\n * Defines the period, the price changes over which will define the %D value in stochastic indicators\n * \\@default 3\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.dPeriod;\n/**\n * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n * \\@default '0'\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.dashArray;\n/**\n * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n * \n * \\@default ''\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.dataSource;\n/**\n * Sets the fast period to define the Macd line\n * \\@default 26\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.fastPeriod;\n/**\n * Defines the field to compare the current value with previous values\n * \\@default 'Close'\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.field;\n/**\n * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n * It also represents the color of the signal lines in technical indicators. \n * For technical indicators, the default value is 'blue' and for series, it has null.\n * \\@default null\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.fill;\n/**\n * The DataSource field that contains the high value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.high;\n/**\n * Defines the look back period, the price changes over which will define the %K value in stochastic indicators\n * \\@default 14\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.kPeriod;\n/**\n * The DataSource field that contains the low value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.low;\n/**\n * Defines the appearance of lower line in technical indicators\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.lowerLine;\n/**\n * Defines the appearance of the the MacdLine of Macd indicator\n * \\@default { color: '#ff9933', width: 2 }\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.macdLine;\n/**\n * Defines the color of the negative bars in Macd indicators\n * \\@default '#e74c3d'\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.macdNegativeColor;\n/**\n * Defines the color of the positive bars in Macd indicators\n * \\@default '#2ecd71'\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.macdPositiveColor;\n/**\n * Defines the type of the Macd indicator.\n * \\@default 'Both'\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.macdType;\n/**\n * The DataSource field that contains the open value of y \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.open;\n/**\n * Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators\n * \\@default 80\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.overBought;\n/**\n * Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators\n * \\@default 20\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.overSold;\n/**\n * Defines the period, the price changes over which will be considered to predict the trend\n * \\@default 14\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.period;\n/**\n * Defines the appearance of period line in technical indicators\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.periodLine;\n/**\n * The DataSource field that contains the color value of point \n * It is applicable for series\n * \\@default ''\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.pointColorMapping;\n/**\n * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n * \\@default null\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.query;\n/**\n * Defines the name of the series, the data of which has to be depicted as indicator\n * \\@default ''\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.seriesName;\n/**\n * Enables/Disables the over-bought and over-sold regions\n * \\@default true\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.showZones;\n/**\n * Sets the slow period to define the Macd line\n * \\@default 12\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.slowPeriod;\n/**\n * Sets the standard deviation values that helps to define the upper and lower bollinger bands\n * \\@default 2\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.standardDeviation;\n/**\n * Defines the appearance of the upper line in technical indicators\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.upperLine;\n/**\n * Defines the data source field that contains the volume value in candle charts \n * It is applicable for financial series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.volume;\n/**\n * The stroke width for the series that is applicable only for `Line` type series. \n * It also represents the stroke width of the signal lines in technical indicators.\n * \\@default 1\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.width;\n/**\n * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.xAxisName;\n/**\n * The DataSource field that contains the x value. \n * It is applicable for series and technical indicators\n * \\@default ''\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.xName;\n/**\n * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n * It is applicable for series and technical indicators \n * \n * \\@default null\n * @type {?}\n */\nStockChartIndicatorDirective.prototype.yAxisName;\n/** @type {?} */\nStockChartIndicatorDirective.prototype.viewContainerRef;\n}\n\n/**\n * StockChartIndicator Array Directive\n */\nexport class StockChartIndicatorsDirective extends ArrayBase<StockChartIndicatorsDirective> {\nconstructor() {\n        super('indicators');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-stockchart>e-stockchart-indicators',\n    queries: {\n        children: new ContentChildren(StockChartIndicatorDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartIndicatorsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartIndicatorsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartIndicatorsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { StockChart } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { StockChartSeriesCollectionDirective } from './series.directive';\nimport { StockChartAxesDirective } from './axes.directive';\nimport { StockChartRowsDirective } from './rows.directive';\nimport { StockChartAnnotationsDirective } from './annotations.directive';\nimport { StockChartSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { StockChartPeriodsDirective } from './periods.directive';\nimport { StockEventsDirective } from './stockevents.directive';\nimport { StockChartIndicatorsDirective } from './indicators.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['annotations','axes','background','border','chartArea','crosshair','dataSource','enableCustomRange','enablePeriodSelector','enablePersistence','enableRtl','enableSelector','exportType','height','indicatorType','indicators','isMultiSelect','isSelect','isTransposed','locale','margin','periods','primaryXAxis','primaryYAxis','rows','selectedDataIndexes','selectionMode','series','seriesType','stockEvents','theme','title','titleStyle','tooltip','trendlineType','width','zoomSettings'];\nexport const /** @type {?} */ outputs: string[] = ['axisLabelRender','load','loaded','onZooming','pointClick','pointMove','rangeChange','selectorRender','seriesRender','stockChartMouseClick','stockChartMouseDown','stockChartMouseLeave','stockChartMouseMove','stockChartMouseUp','stockEventRender','tooltipRender','dataSourceChange'];\nexport const /** @type {?} */ twoWays: string[] = ['dataSource'];\n/**\n * Stock Chart Component\n * ```html\n * <ejs-stockchart></ejs-stockchart>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class StockChartComponent extends StockChart implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childSeries: QueryList<StockChartSeriesCollectionDirective>;\npublic childAxes: QueryList<StockChartAxesDirective>;\npublic childRows: QueryList<StockChartRowsDirective>;\npublic childAnnotations: QueryList<StockChartAnnotationsDirective>;\npublic childSelectedDataIndexes: QueryList<StockChartSelectedDataIndexesDirective>;\npublic childPeriods: QueryList<StockChartPeriodsDirective>;\npublic childStockEvents: QueryList<StockEventsDirective>;\npublic childIndicators: QueryList<StockChartIndicatorsDirective>;\npublic tags: string[] = ['series', 'axes', 'rows', 'annotations', 'selectedDataIndexes', 'periods', 'stockEvents', 'indicators'];\npublic dataSourceChange: any;\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsColumnSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsSplineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsSplineAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStripLine');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsCrosshair');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsDateTime');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsZoom');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsDataLabel');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsSelection');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsChartAnnotation');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsHiloSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsHiloOpenCloseSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsCandleSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsSmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsTmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsEmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAccumulationDistributionIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsMacdIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsAtrIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsRsiIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsMomentumIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsStochasticIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsBollingerBands');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsTrendlines');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsRangeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('ChartsExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        if (this.childAxes) {\n                    this.tagObjects[1].instance = ( /** @type {?} */((this.childAxes as any))).list[0].childSeries;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childAxes as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childAxes as any))).list[d + 1]) {\n                            this.tagObjects[1].instance.list.push(( /** @type {?} */((this.childAxes as any))).list[d+1].childSeries.list[0]);\n                        }\n                    }\n                }\n        if (this.childRows) {\n                    this.tagObjects[2].instance = ( /** @type {?} */((this.childRows as any))).list[0].childAxes;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childRows as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childRows as any))).list[d + 1]) {\n                            this.tagObjects[2].instance.list.push(( /** @type {?} */((this.childRows as any))).list[d+1].childAxes.list[0]);\n                        }\n                    }\n                }\n        if (this.childAnnotations) {\n                    this.tagObjects[3].instance = ( /** @type {?} */((this.childAnnotations as any))).list[0].childRows;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childAnnotations as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childAnnotations as any))).list[d + 1]) {\n                            this.tagObjects[3].instance.list.push(( /** @type {?} */((this.childAnnotations as any))).list[d+1].childRows.list[0]);\n                        }\n                    }\n                }\n        if (this.childSelectedDataIndexes) {\n                    this.tagObjects[4].instance = ( /** @type {?} */((this.childSelectedDataIndexes as any))).list[0].childAnnotations;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childSelectedDataIndexes as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childSelectedDataIndexes as any))).list[d + 1]) {\n                            this.tagObjects[4].instance.list.push(( /** @type {?} */((this.childSelectedDataIndexes as any))).list[d+1].childAnnotations.list[0]);\n                        }\n                    }\n                }\n        if (this.childPeriods) {\n                    this.tagObjects[5].instance = ( /** @type {?} */((this.childPeriods as any))).list[0].childSelectedDataIndexes;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childPeriods as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childPeriods as any))).list[d + 1]) {\n                            this.tagObjects[5].instance.list.push(( /** @type {?} */((this.childPeriods as any))).list[d+1].childSelectedDataIndexes.list[0]);\n                        }\n                    }\n                }\n        if (this.childStockEvents) {\n                    this.tagObjects[6].instance = ( /** @type {?} */((this.childStockEvents as any))).list[0].childPeriods;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childStockEvents as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childStockEvents as any))).list[d + 1]) {\n                            this.tagObjects[6].instance.list.push(( /** @type {?} */((this.childStockEvents as any))).list[d+1].childPeriods.list[0]);\n                        }\n                    }\n                }\n        if (this.childIndicators) {\n                    this.tagObjects[7].instance = ( /** @type {?} */((this.childIndicators as any))).list[0].childStockEvents;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childIndicators as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childIndicators as any))).list[d + 1]) {\n                            this.tagObjects[7].instance.list.push(( /** @type {?} */((this.childIndicators as any))).list[d+1].childStockEvents.list[0]);\n                        }\n                    }\n                }\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-stockchart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(StockChartSeriesCollectionDirective), \n        childAxes: new ContentChild(StockChartAxesDirective), \n        childRows: new ContentChild(StockChartRowsDirective), \n        childAnnotations: new ContentChild(StockChartAnnotationsDirective), \n        childSelectedDataIndexes: new ContentChild(StockChartSelectedDataIndexesDirective), \n        childPeriods: new ContentChild(StockChartPeriodsDirective), \n        childStockEvents: new ContentChild(StockEventsDirective), \n        childIndicators: new ContentChild(StockChartIndicatorsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction StockChartComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartComponent.ctorParameters;\n/** @type {?} */\nStockChartComponent.propDecorators;\n/** @type {?} */\nStockChartComponent.prototype.context;\n/** @type {?} */\nStockChartComponent.prototype.tagObjects;\n/** @type {?} */\nStockChartComponent.prototype.childSeries;\n/** @type {?} */\nStockChartComponent.prototype.childAxes;\n/** @type {?} */\nStockChartComponent.prototype.childRows;\n/** @type {?} */\nStockChartComponent.prototype.childAnnotations;\n/** @type {?} */\nStockChartComponent.prototype.childSelectedDataIndexes;\n/** @type {?} */\nStockChartComponent.prototype.childPeriods;\n/** @type {?} */\nStockChartComponent.prototype.childStockEvents;\n/** @type {?} */\nStockChartComponent.prototype.childIndicators;\n/** @type {?} */\nStockChartComponent.prototype.tags;\n/** @type {?} */\nStockChartComponent.prototype.dataSourceChange;\n/** @type {?} */\nStockChartComponent.prototype.tooltip_template;\n/** @type {?} */\nStockChartComponent.prototype.registerEvents;\n/** @type {?} */\nStockChartComponent.prototype.addTwoWay;\n/** @type {?} */\nStockChartComponent.prototype.ngEle;\n/** @type {?} */\nStockChartComponent.prototype.srenderer;\n/** @type {?} */\nStockChartComponent.prototype.viewContainerRef;\n/** @type {?} */\nStockChartComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockChartTrendlineDirective, StockChartTrendlinesDirective } from './trendlines.directive';\nimport { StockChartSeriesDirective, StockChartSeriesCollectionDirective } from './series.directive';\nimport { StockChartAxisDirective, StockChartAxesDirective } from './axes.directive';\nimport { StockChartRowDirective, StockChartRowsDirective } from './rows.directive';\nimport { StockChartAnnotationDirective, StockChartAnnotationsDirective } from './annotations.directive';\nimport { StockChartSelectedDataIndexDirective, StockChartSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { StockChartPeriodDirective, StockChartPeriodsDirective } from './periods.directive';\nimport { StockEventDirective, StockEventsDirective } from './stockevents.directive';\nimport { StockChartIndicatorDirective, StockChartIndicatorsDirective } from './indicators.directive';\nimport { StockChartComponent } from './stockchart.component';\n/**\n * NgModule definition for the StockChart component.\n */\nexport class StockChartModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        StockChartComponent,\n        StockChartTrendlineDirective,\n        StockChartTrendlinesDirective,\n        StockChartSeriesDirective,\n        StockChartSeriesCollectionDirective,\n        StockChartAxisDirective,\n        StockChartAxesDirective,\n        StockChartRowDirective,\n        StockChartRowsDirective,\n        StockChartAnnotationDirective,\n        StockChartAnnotationsDirective,\n        StockChartSelectedDataIndexDirective,\n        StockChartSelectedDataIndexesDirective,\n        StockChartPeriodDirective,\n        StockChartPeriodsDirective,\n        StockEventDirective,\n        StockEventsDirective,\n        StockChartIndicatorDirective,\n        StockChartIndicatorsDirective\n    ],\n    exports: [\n        StockChartComponent,\n        StockChartTrendlineDirective,\n        StockChartTrendlinesDirective,\n        StockChartSeriesDirective,\n        StockChartSeriesCollectionDirective,\n        StockChartAxisDirective,\n        StockChartAxesDirective,\n        StockChartRowDirective,\n        StockChartRowsDirective,\n        StockChartAnnotationDirective,\n        StockChartAnnotationsDirective,\n        StockChartSelectedDataIndexDirective,\n        StockChartSelectedDataIndexesDirective,\n        StockChartPeriodDirective,\n        StockChartPeriodsDirective,\n        StockEventDirective,\n        StockEventsDirective,\n        StockChartIndicatorDirective,\n        StockChartIndicatorsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockChartTrendlineDirective, StockChartTrendlinesDirective } from './trendlines.directive';\nimport { StockChartSeriesDirective, StockChartSeriesCollectionDirective } from './series.directive';\nimport { StockChartAxisDirective, StockChartAxesDirective } from './axes.directive';\nimport { StockChartRowDirective, StockChartRowsDirective } from './rows.directive';\nimport { StockChartAnnotationDirective, StockChartAnnotationsDirective } from './annotations.directive';\nimport { StockChartSelectedDataIndexDirective, StockChartSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { StockChartPeriodDirective, StockChartPeriodsDirective } from './periods.directive';\nimport { StockEventDirective, StockEventsDirective } from './stockevents.directive';\nimport { StockChartIndicatorDirective, StockChartIndicatorsDirective } from './indicators.directive';\nimport { StockChartComponent } from './stockchart.component';\nimport { StockChartModule } from './stockchart.module';\n/**\n * NgModule definition for the StockChart component with providers.\n */\nexport class StockChartAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, StockChartModule],\n    exports: [\n        StockChartModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StockChartAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStockChartAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStockChartAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['color', 'end', 'opacity'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * BulletRange Directive\n * ```html\n * <e-bullet-range-collection>\n * <e-bullet-range></e-bullet-range>\n * </e-bullet-range-collection>\n * ```\n */\nexport class BulletRangeDirective extends ComplexBase<BulletRangeDirective> {\npublic directivePropList: any;\n/**\n * Default value for qualitative range Color\n * \\@default null\n */\npublic color: any;\n/**\n * Default value for qualitative range end value\n * \\@default null\n */\npublic end: any;\n/**\n * Range opacity\n * \\@default 1\n */\npublic opacity: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-bullet-range-collection>e-bullet-range',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction BulletRangeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nBulletRangeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBulletRangeDirective.ctorParameters;\n/** @type {?} */\nBulletRangeDirective.prototype.directivePropList;\n/**\n * Default value for qualitative range Color\n * \\@default null\n * @type {?}\n */\nBulletRangeDirective.prototype.color;\n/**\n * Default value for qualitative range end value\n * \\@default null\n * @type {?}\n */\nBulletRangeDirective.prototype.end;\n/**\n * Range opacity\n * \\@default 1\n * @type {?}\n */\nBulletRangeDirective.prototype.opacity;\n/** @type {?} */\nBulletRangeDirective.prototype.viewContainerRef;\n}\n\n/**\n * BulletRange Array Directive\n */\nexport class BulletRangeCollectionDirective extends ArrayBase<BulletRangeCollectionDirective> {\nconstructor() {\n        super('ranges');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-bulletchart>e-bullet-range-collection',\n    queries: {\n        children: new ContentChildren(BulletRangeDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BulletRangeCollectionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nBulletRangeCollectionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBulletRangeCollectionDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { BulletChart } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { BulletRangeCollectionDirective } from './ranges.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['animation','border','categoryField','categoryLabelStyle','dataLabel','dataSource','enableGroupSeparator','enablePersistence','enableRtl','height','interval','labelFormat','labelPosition','labelStyle','locale','majorTickLines','margin','maximum','minimum','minorTickLines','minorTicksPerInterval','opposedPosition','orientation','query','ranges','subtitle','subtitleStyle','tabIndex','targetColor','targetField','targetTypes','targetWidth','theme','tickPosition','title','titlePosition','titleStyle','tooltip','type','valueBorder','valueField','valueFill','valueHeight','width'];\nexport const /** @type {?} */ outputs: string[] = ['barRender','beforePrint','load','loaded','tooltipRender','dataSourceChange'];\nexport const /** @type {?} */ twoWays: string[] = ['dataSource'];\n/**\n * BulletChart Component\n * ```html\n * <ejs-bulletchart></ejs-bulletchart>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class BulletChartComponent extends BulletChart implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childRanges: QueryList<BulletRangeCollectionDirective>;\npublic tags: string[] = ['ranges'];\npublic dataSourceChange: any;\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsBulletTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childRanges;\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-bulletchart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childRanges: new ContentChild(BulletRangeCollectionDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction BulletChartComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nBulletChartComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBulletChartComponent.ctorParameters;\n/** @type {?} */\nBulletChartComponent.propDecorators;\n/** @type {?} */\nBulletChartComponent.prototype.context;\n/** @type {?} */\nBulletChartComponent.prototype.tagObjects;\n/** @type {?} */\nBulletChartComponent.prototype.childRanges;\n/** @type {?} */\nBulletChartComponent.prototype.tags;\n/** @type {?} */\nBulletChartComponent.prototype.dataSourceChange;\n/** @type {?} */\nBulletChartComponent.prototype.tooltip_template;\n/** @type {?} */\nBulletChartComponent.prototype.registerEvents;\n/** @type {?} */\nBulletChartComponent.prototype.addTwoWay;\n/** @type {?} */\nBulletChartComponent.prototype.ngEle;\n/** @type {?} */\nBulletChartComponent.prototype.srenderer;\n/** @type {?} */\nBulletChartComponent.prototype.viewContainerRef;\n/** @type {?} */\nBulletChartComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BulletRangeDirective, BulletRangeCollectionDirective } from './ranges.directive';\nimport { BulletChartComponent } from './bulletchart.component';\n/**\n * NgModule definition for the BulletChart component.\n */\nexport class BulletChartModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        BulletChartComponent,\n        BulletRangeDirective,\n        BulletRangeCollectionDirective\n    ],\n    exports: [\n        BulletChartComponent,\n        BulletRangeDirective,\n        BulletRangeCollectionDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BulletChartModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBulletChartModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBulletChartModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BulletRangeDirective, BulletRangeCollectionDirective } from './ranges.directive';\nimport { BulletChartComponent } from './bulletchart.component';\nimport { BulletChartModule } from './bulletchart.module';\nimport {BulletTooltip} from '@syncfusion/ej2-charts';\n\n\nexport const /** @type {?} */ BulletTooltipService: ValueProvider = { provide: 'ChartsBulletTooltip', useValue: BulletTooltip};\n/**\n * NgModule definition for the BulletChart component with providers.\n */\nexport class BulletChartAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, BulletChartModule],\n    exports: [\n        BulletChartModule\n    ],\n    providers:[\n        BulletTooltipService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BulletChartAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBulletChartAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBulletChartAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {TrendlineDirective,TrendlinesDirective,SegmentDirective,SegmentsDirective,SeriesDirective,SeriesCollectionDirective,StripLineDirective,StripLinesDirective,CategoryDirective,CategoriesDirective,MultiLevelLabelDirective,MultiLevelLabelsDirective,AxisDirective,AxesDirective,RowDirective,RowsDirective,ColumnDirective,ColumnsDirective,AnnotationDirective,AnnotationsDirective,SelectedDataIndexDirective,SelectedDataIndexesDirective,IndicatorDirective,IndicatorsDirective,ChartComponent,ChartModule,ChartAllModule,LineSeriesService,ScatterSeriesService,ColumnSeriesService,SplineSeriesService,SplineAreaSeriesService,StripLineService,AreaSeriesService,ScrollBarService,StepLineSeriesService,StepAreaSeriesService,StackingColumnSeriesService,StackingLineSeriesService,StackingAreaSeriesService,BarSeriesService,StackingBarSeriesService,RangeColumnSeriesService,BubbleSeriesService,TooltipService,CrosshairService,CategoryService,DateTimeService,LogarithmicService,LegendService,ZoomService,DataLabelService,SelectionService,ChartAnnotationService,HiloSeriesService,HiloOpenCloseSeriesService,WaterfallSeriesService,RangeAreaSeriesService,CandleSeriesService,PolarSeriesService,RadarSeriesService,SmaIndicatorService,TmaIndicatorService,EmaIndicatorService,AccumulationDistributionIndicatorService,MacdIndicatorService,AtrIndicatorService,RsiIndicatorService,MomentumIndicatorService,StochasticIndicatorService,BollingerBandsService,BoxAndWhiskerSeriesService,HistogramSeriesService,ErrorBarService,TrendlinesService,DateTimeCategoryService,MultiColoredLineSeriesService,MultiColoredAreaSeriesService,MultiLevelLabelService,ParetoSeriesService,ExportService,DataEditingService,AccumulationSeriesDirective,AccumulationSeriesCollectionDirective,AccumulationAnnotationDirective,AccumulationAnnotationsDirective,AccumulationChartComponent,AccumulationChartModule,AccumulationChartAllModule,PieSeriesService,FunnelSeriesService,PyramidSeriesService,AccumulationTooltipService,AccumulationLegendService,AccumulationSelectionService,AccumulationDataLabelService,AccumulationAnnotationService,RangenavigatorSeriesDirective,RangenavigatorSeriesCollectionDirective,RangeNavigatorComponent,RangeNavigatorModule,RangeNavigatorAllModule,RangeTooltipService,PeriodSelectorService,RangeBandSettingDirective,RangeBandSettingsDirective,SparklineComponent,SparklineModule,SparklineAllModule,SparklineTooltipService,SmithchartSeriesDirective,SmithchartSeriesCollectionDirective,SmithchartComponent,SmithchartModule,SmithchartAllModule,SmithchartLegendService,TooltipRenderService,StockChartTrendlineDirective,StockChartTrendlinesDirective,StockChartSeriesDirective,StockChartSeriesCollectionDirective,StockChartAxisDirective,StockChartAxesDirective,StockChartRowDirective,StockChartRowsDirective,StockChartAnnotationDirective,StockChartAnnotationsDirective,StockChartSelectedDataIndexDirective,StockChartSelectedDataIndexesDirective,StockChartPeriodDirective,StockChartPeriodsDirective,StockEventDirective,StockEventsDirective,StockChartIndicatorDirective,StockChartIndicatorsDirective,StockChartComponent,StockChartModule,StockChartAllModule,BulletRangeDirective,BulletRangeCollectionDirective,BulletChartComponent,BulletChartModule,BulletChartAllModule,BulletTooltipService,CrosshairSettings,ZoomSettings,Chart,CrosshairSettingsModel,ZoomSettingsModel,ChartModel,Row,Column,MajorGridLines,MinorGridLines,AxisLine,MajorTickLines,MinorTickLines,CrosshairTooltip,Axis,VisibleRangeModel,VisibleLabels,DateTime,Category,Logarithmic,DateTimeCategory,NiceInterval,StripLine,Connector,Font,Border,Offset,ChartArea,Margin,Animation,Indexes,CornerRadius,Index,EmptyPointSettings,DragSettings,TooltipSettings,Periods,PeriodSelectorSettings,LineSeries,ColumnSeries,AreaSeries,BarSeries,PolarSeries,RadarSeries,StackingBarSeries,CandleSeries,StackingColumnSeries,StepLineSeries,StepAreaSeries,StackingAreaSeries,StackingLineSeries,ScatterSeries,RangeColumnSeries,WaterfallSeries,HiloSeries,HiloOpenCloseSeries,RangeAreaSeries,BubbleSeries,SplineSeries,HistogramSeries,SplineAreaSeries,TechnicalIndicator,TechnicalIndicatorModel,SmaIndicator,EmaIndicator,TmaIndicator,AccumulationDistributionIndicator,AtrIndicator,MomentumIndicator,RsiIndicator,StochasticIndicator,BollingerBands,MacdIndicator,Trendlines,SlopeIntercept,Orientation,ChartAreaType,SeriesValueType,ChartRangePadding,Segment,SizeType,ChartSeriesType,ChartDrawType,EdgeLabelPlacement,LabelPlacement,ChartShape,ValueType,ErrorBarType,ErrorBarDirection,ErrorBarMode,IntervalType,LineType,MacdType,LegendPosition,LegendShape,ZoomMode,ToolbarItems,SelectionMode,LabelPosition,LabelIntersectAction,AxisPosition,ChartTheme,ZIndex,Anchor,EmptyPointMode,TechnicalIndicators,TrendlineTypes,FinancialDataFields,SplineType,BoxPlotMode,SkeletonType,BorderType,sort,isBreakLabel,rotateTextSize,removeElement,logBase,showTooltip,inside,withIn,logWithIn,withInRange,sum,subArraySum,subtractThickness,subtractRect,degreeToLocation,degreeToRadian,getRotatedRectangleCoordinates,isRotatedRectIntersect,getAngle,subArray,valueToCoefficient,TransformToVisible,indexFinder,CoefficientToVector,valueToPolarCoefficient,Mean,PolarArc,createTooltip,createZoomingLabels,withInBounds,getValueXByPoint,getValueYByPoint,findClipRect,firstToLowerCase,getTransform,getMinPointsDelta,getAnimationFunction,linear,markerAnimate,animateRectElement,pathAnimation,appendClipElement,triggerLabelRender,setRange,getActualDesiredIntervalsCount,templateAnimate,drawSymbol,calculateShapes,getRectLocation,minMax,getElement,getTemplateFunction,createTemplate,getFontStyle,measureElementRect,findlElement,getPoint,appendElement,appendChildElement,getDraggedRectLocation,checkBounds,getLabelText,stopTimer,isCollide,isOverlap,containsRect,calculateRect,convertToHexCode,componentToHex,convertHexToColor,colorNameToHex,getSaturationColor,getMedian,calculateLegendShapes,textTrim,lineBreakLabelTrim,stringToNumber,redrawElement,animateRedrawElement,textElement,calculateSize,createSvg,getTitle,titlePositionX,textWrap,getUnicodeText,blazorTemplatesReset,CustomizeOption,StackValues,RectOption,ImageOption,CircleOption,PolygonOption,ChartLocation,Thickness,ColorValue,PointData,AccPointData,ControlPoints,IHistogramValues,Crosshair,Tooltip,Zoom,Selection,DataEditing,DataLabel,ErrorBar,DataLabelSettings,MarkerSettings,Points,Trendline,ErrorBarCapSettings,ChartSegment,ErrorBarSettings,SeriesBase,Series,ISelectorRenderArgs,IFontMapping,IShapes,IScrollbarThemeStyle,ILegendRegions,IPeriodSelectorControl,IChartEventArgs,IAnimationCompleteEventArgs,IAxisMultiLabelRenderEventArgs,IMultiLevelLabelClickEventArgs,IPointEventArgs,IScrollEventArgs,IZoomCompleteEventArgs,ITooltipRenderEventArgs,IPointInformation,IAxisLabelRenderEventArgs,ILegendRenderEventArgs,ILegendClickEventArgs,ITextRenderEventArgs,IAnnotationRenderEventArgs,IPointRenderEventArgs,ISeriesRenderEventArgs,IAxisRangeCalculatedEventArgs,IMouseEventArgs,IDragCompleteEventArgs,ISelectionCompleteEventArgs,ILoadedEventArgs,IZoomingEventArgs,IPrintEventArgs,IExportEventArgs,IAfterExportEventArgs,IBoxPlotQuartile,IAxisData,IThemeStyle,IRangeSelectorRenderEventArgs,ITouches,IZoomAxisRange,IResizeEventArgs,IDataEditingEventArgs,IChartTemplate,RowModel,ColumnModel,MajorGridLinesModel,MinorGridLinesModel,AxisLineModel,MajorTickLinesModel,MinorTickLinesModel,CrosshairTooltipModel,AxisModel,VisibleLabelsModel,Legend,DataLabelSettingsModel,MarkerSettingsModel,PointsModel,TrendlineModel,ErrorBarCapSettingsModel,ChartSegmentModel,ErrorBarSettingsModel,SeriesBaseModel,SeriesModel,ConnectorModel,FontModel,BorderModel,OffsetModel,ChartAreaModel,MarginModel,AnimationModel,IndexesModel,CornerRadiusModel,IndexModel,EmptyPointSettingsModel,DragSettingsModel,TooltipSettingsModel,PeriodsModel,PeriodSelectorSettingsModel,ChartAnnotation,ChartAnnotationSettings,LabelBorder,MultiLevelCategories,StripLineSettings,MultiLevelLabels,ScrollbarSettingsRange,ScrollbarSettings,ChartAnnotationSettingsModel,LabelBorderModel,MultiLevelCategoriesModel,StripLineSettingsModel,MultiLevelLabelsModel,ScrollbarSettingsRangeModel,ScrollbarSettingsModel,Units,Alignment,SeriesCategories,Regions,Position,ExportType,TextOverflow,RangeIntervalType,PeriodSelectorPosition,FlagType,TooltipPosition,BoxAndWhiskerSeries,MultiColoredAreaSeries,MultiColoredLineSeries,MultiColoredSeries,MultiLevelLabel,ScrollBar,ParetoSeries,Export,AccumulationChart,AccumulationChartModel,AccumulationAnnotationSettings,AccumulationDataLabelSettings,PieCenter,AccPoints,AccumulationSeries,getSeriesFromIndex,pointByIndex,AccumulationAnnotationSettingsModel,AccumulationDataLabelSettingsModel,PieCenterModel,AccPointsModel,AccumulationSeriesModel,IAccSeriesRenderEventArgs,IAccTextRenderEventArgs,IAccTooltipRenderEventArgs,IAccAnimationCompleteEventArgs,IAccResizeEventArgs,IAccPointRenderEventArgs,IAccLoadedEventArgs,IAccLegendRenderEventArgs,IAccumulationChartTemplate,PieSeries,FunnelSeries,PyramidSeries,AccumulationLegend,AccumulationDataLabel,AccumulationTooltip,AccumulationSelection,AccumulationType,AccumulationLabelPosition,ConnectorType,AccumulationSelectionMode,AccumulationTheme,AccEmptyPointMode,PyramidModes,GroupModes,AccumulationAnnotation,StockChart,StockChartModel,StockChartFont,StockChartBorder,StockChartArea,StockMargin,StockChartStripLineSettings,StockEmptyPointSettings,StockChartConnector,StockSeries,IStockChartEventArgs,IRangeChangeEventArgs,IStockEventRenderArgs,StockChartIndicator,StockChartAxis,StockChartRow,StockChartTrendline,StockChartAnnotationSettings,StockChartIndexes,StockEventsSettings,StockChartFontModel,StockChartBorderModel,StockChartAreaModel,StockMarginModel,StockChartStripLineSettingsModel,StockEmptyPointSettingsModel,StockChartConnectorModel,StockSeriesModel,StockChartIndicatorModel,StockChartAxisModel,StockChartRowModel,StockChartTrendlineModel,StockChartAnnotationSettingsModel,StockChartIndexesModel,StockEventsSettingsModel,LegendSettingsModel,LocationModel,loaded,legendClick,load,animationComplete,legendRender,textRender,pointRender,seriesRender,axisLabelRender,axisRangeCalculated,axisMultiLabelRender,tooltipRender,chartMouseMove,chartMouseClick,pointClick,pointMove,chartMouseLeave,chartMouseDown,chartMouseUp,zoomComplete,onZooming,dragComplete,selectionComplete,resized,beforePrint,annotationRender,scrollStart,scrollEnd,scrollChanged,stockEventRender,multiLevelLabelClick,dragStart,drag,dragEnd,regSub,regSup,beforeExport,afterExport,barRender,Theme,getSeriesColor,getThemeColor,getScrollbarThemeColor,PeriodSelector,RangeNavigator,RangeNavigatorModel,RangeNavigatorType,ThumbType,TooltipDisplayMode,RangeValueType,LabelAlignment,RangeLabelIntersectAction,rangeValueToCoefficient,getXLocation,getRangeValueXByPoint,getExactData,getNearestValue,DataPoint,RangeNavigatorTheme,getRangeThemeColor,RangeNavigatorAxis,RangeSeries,RangeSlider,RangeNavigatorSeries,ThumbSettings,StyleSettings,RangeTooltipSettings,RangeNavigatorSeriesModel,ThumbSettingsModel,StyleSettingsModel,RangeTooltipSettingsModel,ILoadEventArgs,IRangeLoadedEventArgs,IRangeTooltipRenderEventArgs,ILabelRenderEventsArgs,IRangeStyle,IRangeEventArgs,IChangedEventArgs,IResizeRangeNavigatorEventArgs,Double,RangeTooltip,BulletChart,BulletChartModel,Range,MajorTickLinesSettings,MinorTickLinesSettings,BulletLabelStyle,BulletTooltipSettings,BulletDataLabel,RangeModel,MajorTickLinesSettingsModel,MinorTickLinesSettingsModel,BulletLabelStyleModel,BulletTooltipSettingsModel,BulletDataLabelModel,OrientationType,FlowType,TickPlacement,FeatureType,TickPosition,LabelsPlacement,LabelsPosition,TextAnchor,TextPosition,TargetType,BulletChartTheme,getBulletThemeColor,BulletTooltip,IBulletStyle,IBulletChartEventArgs,IBulletResizeEventArgs,IBarRenderEventArgs,IBulletScaleBounds,IBulletBounds,IVerticalBulletBounds,IFeatureBarBounds,IBulletTooltipContent,IBulletLoadedEventArgs,IBulletchartTooltipEventArgs,IBulletTemplate,Smithchart,SmithchartModel,SmithchartMajorGridLines,SmithchartMinorGridLines,SmithchartAxisLine,SmithchartAxis,SmithchartMajorGridLinesModel,SmithchartMinorGridLinesModel,SmithchartAxisLineModel,SmithchartAxisModel,ISmithchartEventArgs,ISmithchartPrintEventArgs,ISmithchartLoadEventArgs,ISmithchartLoadedEventArgs,ISmithchartAnimationCompleteEventArgs,ISmithchartLegendRenderEventArgs,ITitleRenderEventArgs,ISubTitleRenderEventArgs,ISmithchartTextRenderEventArgs,ISmithchartAxisLabelRenderEventArgs,ISmithchartSeriesRenderEventArgs,ISmithchartFontMapping,ISmithchartThemeStyle,LegendTitle,LegendLocation,LegendItemStyleBorder,LegendItemStyle,LegendBorder,SmithchartLegendSettings,LegendTitleModel,LegendLocationModel,LegendItemStyleBorderModel,LegendItemStyleModel,LegendBorderModel,SmithchartLegendSettingsModel,SeriesTooltipBorder,SeriesTooltip,SeriesMarkerBorder,SeriesMarkerDataLabelBorder,SeriesMarkerDataLabelConnectorLine,SeriesMarkerDataLabel,SeriesMarker,SmithchartSeries,SeriesTooltipBorderModel,SeriesTooltipModel,SeriesMarkerBorderModel,SeriesMarkerDataLabelBorderModel,SeriesMarkerDataLabelConnectorLineModel,SeriesMarkerDataLabelModel,SeriesMarkerModel,SmithchartSeriesModel,TooltipRender,Subtitle,Title,SubtitleModel,TitleModel,SmithchartFont,SmithchartMargin,SmithchartBorder,SmithchartRect,LabelCollection,LegendSeries,LabelRegion,HorizontalLabelCollection,RadialLabelCollections,LineSegment,PointRegion,Point,ClosestPoint,MarkerOptions,SmithchartLabelPosition,Direction,DataLabelTextOptions,LabelOption,SmithchartSize,GridArcPoints,SmithchartFontModel,SmithchartMarginModel,SmithchartBorderModel,SmithchartRectModel,LabelCollectionModel,LegendSeriesModel,LabelRegionModel,HorizontalLabelCollectionModel,RadialLabelCollectionsModel,LineSegmentModel,PointRegionModel,PointModel,ClosestPointModel,MarkerOptionsModel,SmithchartLabelPositionModel,DirectionModel,DataLabelTextOptionsModel,LabelOptionModel,SmithchartSizeModel,GridArcPointsModel,SmithchartTheme,RenderType,AxisLabelPosition,SmithchartLabelIntersectAction,SmithchartAlignment,SmithchartExportType,smithchartBeforePrint,SmithchartLegend,Sparkline,SparklineModel,SparklineTooltip,SparklineBorder,SparklineFont,TrackLineSettings,SparklineTooltipSettings,ContainerArea,LineSettings,RangeBandSettings,AxisSettings,Padding,SparklineMarkerSettings,LabelOffset,SparklineDataLabelSettings,SparklineBorderModel,SparklineFontModel,TrackLineSettingsModel,SparklineTooltipSettingsModel,ContainerAreaModel,LineSettingsModel,RangeBandSettingsModel,AxisSettingsModel,PaddingModel,SparklineMarkerSettingsModel,LabelOffsetModel,SparklineDataLabelSettingsModel,SparklineType,SparklineRangePadding,SparklineValueType,VisibleType,SparklineTheme,EdgeLabelMode,ISparklineEventArgs,IThemes,ISparklineLoadedEventArgs,ISparklineLoadEventArgs,IAxisRenderingEventArgs,ISeriesRenderingEventArgs,ISparklinePointEventArgs,ISparklineMouseEventArgs,IPointRegionEventArgs,IDataLabelRenderingEventArgs,IMarkerRenderingEventArgs,ISparklineResizeEventArgs,ITooltipRenderingEventArgs} from './public_api';\n\nexport {inputs as ɵc,outputs as ɵd} from './src/accumulation-chart/accumulationchart.component';\nexport {inputs as ɵm,outputs as ɵn} from './src/bullet-chart/bulletchart.component';\nexport {inputs as ɵa,outputs as ɵb} from './src/chart/chart.component';\nexport {inputs as ɵe,outputs as ɵf} from './src/range-navigator/rangenavigator.component';\nexport {inputs as ɵi,outputs as ɵj} from './src/smithchart/smithchart.component';\nexport {inputs as ɵg,outputs as ɵh} from './src/sparkline/sparkline.component';\nexport {inputs as ɵk,outputs as ɵl} from './src/stock-chart/stockchart.component';"]}