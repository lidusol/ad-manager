import { ElementRef, ViewContainerRef, QueryList, Renderer2, Injector } from '@angular/core';
import { IComponentBase } from '@syncfusion/ej2-angular-base';
import { BulletChart } from '@syncfusion/ej2-charts';
import { BulletRangeCollectionDirective } from './ranges.directive';
import * as ɵngcc0 from '@angular/core';
export declare const inputs: string[];
export declare const outputs: string[];
export declare const twoWays: string[];
/**
 * BulletChart Component
 * ```html
 * <ejs-bulletchart></ejs-bulletchart>
 * ```
 */
export declare class BulletChartComponent extends BulletChart implements IComponentBase {
    private ngEle;
    private srenderer;
    private viewContainerRef;
    private injector;
    context: any;
    tagObjects: any;
    childRanges: QueryList<BulletRangeCollectionDirective>;
    tags: string[];
    dataSourceChange: any;
    tooltip_template: any;
    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    registerEvents: (eventList: string[]) => void;
    addTwoWay: (propList: string[]) => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BulletChartComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BulletChartComponent, "ejs-bulletchart", never, { "animation": "animation"; "border": "border"; "categoryField": "categoryField"; "categoryLabelStyle": "categoryLabelStyle"; "dataLabel": "dataLabel"; "dataSource": "dataSource"; "enableGroupSeparator": "enableGroupSeparator"; "enablePersistence": "enablePersistence"; "enableRtl": "enableRtl"; "height": "height"; "interval": "interval"; "labelFormat": "labelFormat"; "labelPosition": "labelPosition"; "labelStyle": "labelStyle"; "locale": "locale"; "majorTickLines": "majorTickLines"; "margin": "margin"; "maximum": "maximum"; "minimum": "minimum"; "minorTickLines": "minorTickLines"; "minorTicksPerInterval": "minorTicksPerInterval"; "opposedPosition": "opposedPosition"; "orientation": "orientation"; "query": "query"; "ranges": "ranges"; "subtitle": "subtitle"; "subtitleStyle": "subtitleStyle"; "tabIndex": "tabIndex"; "targetColor": "targetColor"; "targetField": "targetField"; "targetTypes": "targetTypes"; "targetWidth": "targetWidth"; "theme": "theme"; "tickPosition": "tickPosition"; "title": "title"; "titlePosition": "titlePosition"; "titleStyle": "titleStyle"; "tooltip": "tooltip"; "type": "type"; "valueBorder": "valueBorder"; "valueField": "valueField"; "valueFill": "valueFill"; "valueHeight": "valueHeight"; "width": "width"; }, { "barRender": "barRender"; "beforePrint": "beforePrint"; "load": "load"; "loaded": "loaded"; "tooltipRender": "tooltipRender"; "dataSourceChange": "dataSourceChange"; }, ["tooltip_template", "childRanges"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsbGV0Y2hhcnQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImJ1bGxldGNoYXJ0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBWaWV3Q29udGFpbmVyUmVmLCBRdWVyeUxpc3QsIFJlbmRlcmVyMiwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElDb21wb25lbnRCYXNlIH0gZnJvbSAnQHN5bmNmdXNpb24vZWoyLWFuZ3VsYXItYmFzZSc7XG5pbXBvcnQgeyBCdWxsZXRDaGFydCB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1jaGFydHMnO1xuaW1wb3J0IHsgQnVsbGV0UmFuZ2VDb2xsZWN0aW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9yYW5nZXMuZGlyZWN0aXZlJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IGlucHV0czogc3RyaW5nW107XG5leHBvcnQgZGVjbGFyZSBjb25zdCBvdXRwdXRzOiBzdHJpbmdbXTtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IHR3b1dheXM6IHN0cmluZ1tdO1xuLyoqXG4gKiBCdWxsZXRDaGFydCBDb21wb25lbnRcbiAqIGBgYGh0bWxcbiAqIDxlanMtYnVsbGV0Y2hhcnQ+PC9lanMtYnVsbGV0Y2hhcnQ+XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQnVsbGV0Q2hhcnRDb21wb25lbnQgZXh0ZW5kcyBCdWxsZXRDaGFydCBpbXBsZW1lbnRzIElDb21wb25lbnRCYXNlIHtcbiAgICBwcml2YXRlIG5nRWxlO1xuICAgIHByaXZhdGUgc3JlbmRlcmVyO1xuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjtcbiAgICBwcml2YXRlIGluamVjdG9yO1xuICAgIGNvbnRleHQ6IGFueTtcbiAgICB0YWdPYmplY3RzOiBhbnk7XG4gICAgY2hpbGRSYW5nZXM6IFF1ZXJ5TGlzdDxCdWxsZXRSYW5nZUNvbGxlY3Rpb25EaXJlY3RpdmU+O1xuICAgIHRhZ3M6IHN0cmluZ1tdO1xuICAgIGRhdGFTb3VyY2VDaGFuZ2U6IGFueTtcbiAgICB0b29sdGlwX3RlbXBsYXRlOiBhbnk7XG4gICAgY29uc3RydWN0b3IobmdFbGU6IEVsZW1lbnRSZWYsIHNyZW5kZXJlcjogUmVuZGVyZXIyLCB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCBpbmplY3RvcjogSW5qZWN0b3IpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKTogdm9pZDtcbiAgICByZWdpc3RlckV2ZW50czogKGV2ZW50TGlzdDogc3RyaW5nW10pID0+IHZvaWQ7XG4gICAgYWRkVHdvV2F5OiAocHJvcExpc3Q6IHN0cmluZ1tdKSA9PiB2b2lkO1xufVxuIl19