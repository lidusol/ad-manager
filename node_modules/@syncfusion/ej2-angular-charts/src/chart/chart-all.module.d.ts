import { ValueProvider } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './chart.module';
export declare const LineSeriesService: ValueProvider;
export declare const ScatterSeriesService: ValueProvider;
export declare const ColumnSeriesService: ValueProvider;
export declare const SplineSeriesService: ValueProvider;
export declare const SplineAreaSeriesService: ValueProvider;
export declare const StripLineService: ValueProvider;
export declare const AreaSeriesService: ValueProvider;
export declare const ScrollBarService: ValueProvider;
export declare const StepLineSeriesService: ValueProvider;
export declare const StepAreaSeriesService: ValueProvider;
export declare const StackingColumnSeriesService: ValueProvider;
export declare const StackingLineSeriesService: ValueProvider;
export declare const StackingAreaSeriesService: ValueProvider;
export declare const BarSeriesService: ValueProvider;
export declare const StackingBarSeriesService: ValueProvider;
export declare const RangeColumnSeriesService: ValueProvider;
export declare const BubbleSeriesService: ValueProvider;
export declare const TooltipService: ValueProvider;
export declare const CrosshairService: ValueProvider;
export declare const CategoryService: ValueProvider;
export declare const DateTimeService: ValueProvider;
export declare const LogarithmicService: ValueProvider;
export declare const LegendService: ValueProvider;
export declare const ZoomService: ValueProvider;
export declare const DataLabelService: ValueProvider;
export declare const SelectionService: ValueProvider;
export declare const ChartAnnotationService: ValueProvider;
export declare const HiloSeriesService: ValueProvider;
export declare const HiloOpenCloseSeriesService: ValueProvider;
export declare const WaterfallSeriesService: ValueProvider;
export declare const RangeAreaSeriesService: ValueProvider;
export declare const CandleSeriesService: ValueProvider;
export declare const PolarSeriesService: ValueProvider;
export declare const RadarSeriesService: ValueProvider;
export declare const SmaIndicatorService: ValueProvider;
export declare const TmaIndicatorService: ValueProvider;
export declare const EmaIndicatorService: ValueProvider;
export declare const AccumulationDistributionIndicatorService: ValueProvider;
export declare const MacdIndicatorService: ValueProvider;
export declare const AtrIndicatorService: ValueProvider;
export declare const RsiIndicatorService: ValueProvider;
export declare const MomentumIndicatorService: ValueProvider;
export declare const StochasticIndicatorService: ValueProvider;
export declare const BollingerBandsService: ValueProvider;
export declare const BoxAndWhiskerSeriesService: ValueProvider;
export declare const HistogramSeriesService: ValueProvider;
export declare const ErrorBarService: ValueProvider;
export declare const TrendlinesService: ValueProvider;
export declare const DateTimeCategoryService: ValueProvider;
export declare const MultiColoredLineSeriesService: ValueProvider;
export declare const MultiColoredAreaSeriesService: ValueProvider;
export declare const MultiLevelLabelService: ValueProvider;
export declare const ParetoSeriesService: ValueProvider;
export declare const ExportService: ValueProvider;
export declare const DataEditingService: ValueProvider;
/**
 * NgModule definition for the Chart component with providers.
 */
export declare class ChartAllModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ChartAllModule, never, [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ChartModule], [typeof ɵngcc2.ChartModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ChartAllModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtYWxsLm1vZHVsZS5kLnRzIiwic291cmNlcyI6WyJjaGFydC1hbGwubW9kdWxlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZhbHVlUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IExpbmVTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgU2NhdHRlclNlcmllc1NlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBDb2x1bW5TZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgU3BsaW5lU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFNwbGluZUFyZWFTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgU3RyaXBMaW5lU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEFyZWFTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgU2Nyb2xsQmFyU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFN0ZXBMaW5lU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFN0ZXBBcmVhU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFN0YWNraW5nQ29sdW1uU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFN0YWNraW5nTGluZVNlcmllc1NlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBTdGFja2luZ0FyZWFTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgQmFyU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFN0YWNraW5nQmFyU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFJhbmdlQ29sdW1uU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEJ1YmJsZVNlcmllc1NlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBUb29sdGlwU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IENyb3NzaGFpclNlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBDYXRlZ29yeVNlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBEYXRlVGltZVNlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBMb2dhcml0aG1pY1NlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBMZWdlbmRTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgWm9vbVNlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBEYXRhTGFiZWxTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgU2VsZWN0aW9uU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IENoYXJ0QW5ub3RhdGlvblNlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBIaWxvU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEhpbG9PcGVuQ2xvc2VTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgV2F0ZXJmYWxsU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFJhbmdlQXJlYVNlcmllc1NlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBDYW5kbGVTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgUG9sYXJTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgUmFkYXJTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgU21hSW5kaWNhdG9yU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFRtYUluZGljYXRvclNlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBFbWFJbmRpY2F0b3JTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgQWNjdW11bGF0aW9uRGlzdHJpYnV0aW9uSW5kaWNhdG9yU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IE1hY2RJbmRpY2F0b3JTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgQXRySW5kaWNhdG9yU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFJzaUluZGljYXRvclNlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBNb21lbnR1bUluZGljYXRvclNlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBTdG9jaGFzdGljSW5kaWNhdG9yU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEJvbGxpbmdlckJhbmRzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEJveEFuZFdoaXNrZXJTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgSGlzdG9ncmFtU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEVycm9yQmFyU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFRyZW5kbGluZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgRGF0ZVRpbWVDYXRlZ29yeVNlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBNdWx0aUNvbG9yZWRMaW5lU2VyaWVzU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IE11bHRpQ29sb3JlZEFyZWFTZXJpZXNTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgTXVsdGlMZXZlbExhYmVsU2VydmljZTogVmFsdWVQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFBhcmV0b1Nlcmllc1NlcnZpY2U6IFZhbHVlUHJvdmlkZXI7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBFeHBvcnRTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgRGF0YUVkaXRpbmdTZXJ2aWNlOiBWYWx1ZVByb3ZpZGVyO1xuLyoqXG4gKiBOZ01vZHVsZSBkZWZpbml0aW9uIGZvciB0aGUgQ2hhcnQgY29tcG9uZW50IHdpdGggcHJvdmlkZXJzLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDaGFydEFsbE1vZHVsZSB7XG59XG4iXX0=