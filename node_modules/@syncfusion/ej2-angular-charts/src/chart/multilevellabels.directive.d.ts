import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * MultiLevelLabel Directive
 * ```html
 * <e-axis>
 * <e-multilevellabels>
 * <e-multilevellabel></e-multilevellabel>
 * </e-multilevellabels>
 * </e-axis>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class MultiLevelLabelDirective extends ComplexBase<MultiLevelLabelDirective> {
    private viewContainerRef;
    directivePropList: any;
    childCategories: any;
    tags: string[];
    /**
     * Defines the position of the multi level labels. They are,
     * * Near: Places the multi level labels at Near.
     * * Center: Places the multi level labels at Center.
     * * Far: Places the multi level labels at Far.
     * @default 'Center'
     */
    alignment: any;
    /**
     * Border of the multi level labels.
     */
    border: any;
    /**
     * multi level categories for multi level labels.
     */
    categories: any;
    /**
     * Defines the textOverFlow for multi level labels. They are,
     * * Trim: Trim textOverflow for multi level labels.
     * * Wrap: Wrap textOverflow for multi level labels.
     * * none: None textOverflow for multi level labels.
     * @default 'Wrap'
     */
    overflow: any;
    /**
     * Options to customize the multi level labels.
     */
    textStyle: any;
    constructor(viewContainerRef: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MultiLevelLabelDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MultiLevelLabelDirective, "e-axis>e-multilevellabels>e-multilevellabel", never, { "alignment": "alignment"; "border": "border"; "categories": "categories"; "overflow": "overflow"; "textStyle": "textStyle"; }, {}, ["childCategories"]>;
}
/**
 * MultiLevelLabel Array Directive
 * @private
 */
export declare class MultiLevelLabelsDirective extends ArrayBase<MultiLevelLabelsDirective> {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MultiLevelLabelsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MultiLevelLabelsDirective, "e-axis>e-multilevellabels", never, {}, {}, ["children"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlsZXZlbGxhYmVscy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsibXVsdGlsZXZlbGxhYmVscy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbXBsZXhCYXNlLCBBcnJheUJhc2UgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYW5ndWxhci1iYXNlJztcbi8qKlxuICogTXVsdGlMZXZlbExhYmVsIERpcmVjdGl2ZVxuICogYGBgaHRtbFxuICogPGUtYXhpcz5cbiAqIDxlLW11bHRpbGV2ZWxsYWJlbHM+XG4gKiA8ZS1tdWx0aWxldmVsbGFiZWw+PC9lLW11bHRpbGV2ZWxsYWJlbD5cbiAqIDwvZS1tdWx0aWxldmVsbGFiZWxzPlxuICogPC9lLWF4aXM+XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTXVsdGlMZXZlbExhYmVsRGlyZWN0aXZlIGV4dGVuZHMgQ29tcGxleEJhc2U8TXVsdGlMZXZlbExhYmVsRGlyZWN0aXZlPiB7XG4gICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmO1xuICAgIGRpcmVjdGl2ZVByb3BMaXN0OiBhbnk7XG4gICAgY2hpbGRDYXRlZ29yaWVzOiBhbnk7XG4gICAgdGFnczogc3RyaW5nW107XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyB0aGUgcG9zaXRpb24gb2YgdGhlIG11bHRpIGxldmVsIGxhYmVscy4gVGhleSBhcmUsXG4gICAgICogKiBOZWFyOiBQbGFjZXMgdGhlIG11bHRpIGxldmVsIGxhYmVscyBhdCBOZWFyLlxuICAgICAqICogQ2VudGVyOiBQbGFjZXMgdGhlIG11bHRpIGxldmVsIGxhYmVscyBhdCBDZW50ZXIuXG4gICAgICogKiBGYXI6IFBsYWNlcyB0aGUgbXVsdGkgbGV2ZWwgbGFiZWxzIGF0IEZhci5cbiAgICAgKiBAZGVmYXVsdCAnQ2VudGVyJ1xuICAgICAqL1xuICAgIGFsaWdubWVudDogYW55O1xuICAgIC8qKlxuICAgICAqIEJvcmRlciBvZiB0aGUgbXVsdGkgbGV2ZWwgbGFiZWxzLlxuICAgICAqL1xuICAgIGJvcmRlcjogYW55O1xuICAgIC8qKlxuICAgICAqIG11bHRpIGxldmVsIGNhdGVnb3JpZXMgZm9yIG11bHRpIGxldmVsIGxhYmVscy5cbiAgICAgKi9cbiAgICBjYXRlZ29yaWVzOiBhbnk7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyB0aGUgdGV4dE92ZXJGbG93IGZvciBtdWx0aSBsZXZlbCBsYWJlbHMuIFRoZXkgYXJlLFxuICAgICAqICogVHJpbTogVHJpbSB0ZXh0T3ZlcmZsb3cgZm9yIG11bHRpIGxldmVsIGxhYmVscy5cbiAgICAgKiAqIFdyYXA6IFdyYXAgdGV4dE92ZXJmbG93IGZvciBtdWx0aSBsZXZlbCBsYWJlbHMuXG4gICAgICogKiBub25lOiBOb25lIHRleHRPdmVyZmxvdyBmb3IgbXVsdGkgbGV2ZWwgbGFiZWxzLlxuICAgICAqIEBkZWZhdWx0ICdXcmFwJ1xuICAgICAqL1xuICAgIG92ZXJmbG93OiBhbnk7XG4gICAgLyoqXG4gICAgICogT3B0aW9ucyB0byBjdXN0b21pemUgdGhlIG11bHRpIGxldmVsIGxhYmVscy5cbiAgICAgKi9cbiAgICB0ZXh0U3R5bGU6IGFueTtcbiAgICBjb25zdHJ1Y3Rvcih2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmKTtcbn1cbi8qKlxuICogTXVsdGlMZXZlbExhYmVsIEFycmF5IERpcmVjdGl2ZVxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTXVsdGlMZXZlbExhYmVsc0RpcmVjdGl2ZSBleHRlbmRzIEFycmF5QmFzZTxNdWx0aUxldmVsTGFiZWxzRGlyZWN0aXZlPiB7XG4gICAgY29uc3RydWN0b3IoKTtcbn1cbiJdfQ==