import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * Indicator Directive
 * ```html
 * <e-stockchart-periods>
 * <e-stockchart-period></e-stockchart-period>
 * </e-stockchart-periods>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class StockChartPeriodDirective extends ComplexBase<StockChartPeriodDirective> {
    private viewContainerRef;
    directivePropList: any;
    /**
     * Count value for the button
     * @default 1
     */
    interval: any;
    /**
     * IntervalType of button
     * @default 'Years'
     */
    intervalType: any;
    /**
     * To select the default period
     * @default false
     */
    selected: any;
    /**
     * Text to be displayed on the button
     * @default null
     */
    text: any;
    constructor(viewContainerRef: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StockChartPeriodDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<StockChartPeriodDirective, "e-stockchart-indicators>e-stockchart-period", never, { "interval": "interval"; "intervalType": "intervalType"; "selected": "selected"; "text": "text"; }, {}, never>;
}
/**
 * StockChartPeriod Array Directive
 * @private
 */
export declare class StockChartPeriodsDirective extends ArrayBase<StockChartPeriodsDirective> {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StockChartPeriodsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<StockChartPeriodsDirective, "ejs-stockchart>e-stockchart-periods", never, {}, {}, ["children"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyaW9kcy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicGVyaW9kcy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbXBsZXhCYXNlLCBBcnJheUJhc2UgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYW5ndWxhci1iYXNlJztcbi8qKlxuICogSW5kaWNhdG9yIERpcmVjdGl2ZVxuICogYGBgaHRtbFxuICogPGUtc3RvY2tjaGFydC1wZXJpb2RzPlxuICogPGUtc3RvY2tjaGFydC1wZXJpb2Q+PC9lLXN0b2NrY2hhcnQtcGVyaW9kPlxuICogPC9lLXN0b2NrY2hhcnQtcGVyaW9kcz5cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTdG9ja0NoYXJ0UGVyaW9kRGlyZWN0aXZlIGV4dGVuZHMgQ29tcGxleEJhc2U8U3RvY2tDaGFydFBlcmlvZERpcmVjdGl2ZT4ge1xuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjtcbiAgICBkaXJlY3RpdmVQcm9wTGlzdDogYW55O1xuICAgIC8qKlxuICAgICAqIENvdW50IHZhbHVlIGZvciB0aGUgYnV0dG9uXG4gICAgICogQGRlZmF1bHQgMVxuICAgICAqL1xuICAgIGludGVydmFsOiBhbnk7XG4gICAgLyoqXG4gICAgICogSW50ZXJ2YWxUeXBlIG9mIGJ1dHRvblxuICAgICAqIEBkZWZhdWx0ICdZZWFycydcbiAgICAgKi9cbiAgICBpbnRlcnZhbFR5cGU6IGFueTtcbiAgICAvKipcbiAgICAgKiBUbyBzZWxlY3QgdGhlIGRlZmF1bHQgcGVyaW9kXG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cbiAgICBzZWxlY3RlZDogYW55O1xuICAgIC8qKlxuICAgICAqIFRleHQgdG8gYmUgZGlzcGxheWVkIG9uIHRoZSBidXR0b25cbiAgICAgKiBAZGVmYXVsdCBudWxsXG4gICAgICovXG4gICAgdGV4dDogYW55O1xuICAgIGNvbnN0cnVjdG9yKHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYpO1xufVxuLyoqXG4gKiBTdG9ja0NoYXJ0UGVyaW9kIEFycmF5IERpcmVjdGl2ZVxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU3RvY2tDaGFydFBlcmlvZHNEaXJlY3RpdmUgZXh0ZW5kcyBBcnJheUJhc2U8U3RvY2tDaGFydFBlcmlvZHNEaXJlY3RpdmU+IHtcbiAgICBjb25zdHJ1Y3RvcigpO1xufVxuIl19