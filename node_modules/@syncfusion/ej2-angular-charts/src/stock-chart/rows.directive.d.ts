import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * Row Directive
 * ```html
 * <e-rows><e-row></e-row><e-rows>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class StockChartRowDirective extends ComplexBase<StockChartRowDirective> {
    private viewContainerRef;
    directivePropList: any;
    /**
     * Options to customize the border of the rows.
     */
    border: any;
    /**
     * The height of the row as a string accept input both as '100px' and '100%'.
     * If specified as '100%, row renders to the full height of its chart.
     * @default '100%'
     */
    height: any;
    constructor(viewContainerRef: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StockChartRowDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<StockChartRowDirective, "e-stockchart-rows>e-stockchart-row", never, { "border": "border"; "height": "height"; }, {}, never>;
}
/**
 * StockChartRow Array Directive
 * @private
 */
export declare class StockChartRowsDirective extends ArrayBase<StockChartRowsDirective> {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StockChartRowsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<StockChartRowsDirective, "ejs-stockchart>e-stockchart-rows", never, {}, {}, ["children"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93cy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicm93cy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbXBsZXhCYXNlLCBBcnJheUJhc2UgfSBmcm9tICdAc3luY2Z1c2lvbi9lajItYW5ndWxhci1iYXNlJztcbi8qKlxuICogUm93IERpcmVjdGl2ZVxuICogYGBgaHRtbFxuICogPGUtcm93cz48ZS1yb3c+PC9lLXJvdz48ZS1yb3dzPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFN0b2NrQ2hhcnRSb3dEaXJlY3RpdmUgZXh0ZW5kcyBDb21wbGV4QmFzZTxTdG9ja0NoYXJ0Um93RGlyZWN0aXZlPiB7XG4gICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmO1xuICAgIGRpcmVjdGl2ZVByb3BMaXN0OiBhbnk7XG4gICAgLyoqXG4gICAgICogT3B0aW9ucyB0byBjdXN0b21pemUgdGhlIGJvcmRlciBvZiB0aGUgcm93cy5cbiAgICAgKi9cbiAgICBib3JkZXI6IGFueTtcbiAgICAvKipcbiAgICAgKiBUaGUgaGVpZ2h0IG9mIHRoZSByb3cgYXMgYSBzdHJpbmcgYWNjZXB0IGlucHV0IGJvdGggYXMgJzEwMHB4JyBhbmQgJzEwMCUnLlxuICAgICAqIElmIHNwZWNpZmllZCBhcyAnMTAwJSwgcm93IHJlbmRlcnMgdG8gdGhlIGZ1bGwgaGVpZ2h0IG9mIGl0cyBjaGFydC5cbiAgICAgKiBAZGVmYXVsdCAnMTAwJSdcbiAgICAgKi9cbiAgICBoZWlnaHQ6IGFueTtcbiAgICBjb25zdHJ1Y3Rvcih2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmKTtcbn1cbi8qKlxuICogU3RvY2tDaGFydFJvdyBBcnJheSBEaXJlY3RpdmVcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFN0b2NrQ2hhcnRSb3dzRGlyZWN0aXZlIGV4dGVuZHMgQXJyYXlCYXNlPFN0b2NrQ2hhcnRSb3dzRGlyZWN0aXZlPiB7XG4gICAgY29uc3RydWN0b3IoKTtcbn1cbiJdfQ==