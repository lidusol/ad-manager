import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * 'e-accordionitem' directive represent a item of the Angular Accordion.
 * It must be contained in a Accordion component(`ejs-accordion`).
 * ```html
 * <ejs-accordion>
 *   <e-accordionitems>
 *    <e-accordionitem header='Header1'></e-accordionitem>
 *    <e-accordionitem header='Header2' content='Content2'></e-accordionitem>
 *   </e-accordionitems>
 * </ejs-accordion>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class AccordionItemDirective extends ComplexBase<AccordionItemDirective> {
    private viewContainerRef;
    directivePropList: any;
    /**
     * Defines single/multiple classes (separated by a space) are to be used for Accordion item customization.
     * @default null
     */
    cssClass: any;
    /**
     * Sets the expand (true) or collapse (false) state of the Accordion item. By default, all the items are in a collapsed state.
     * @default false
     */
    expanded: any;
    /**
     * Defines an icon with the given custom CSS class that is to be rendered before the header text.
     * Add the css classes to the `iconCss` property and write the css styles to the defined class to set images/icons.
     * Adding icon is applicable only to the header.
     *
     * @default null
     */
    iconCss: any;
    /**
     * Sets the header text to be displayed for the Accordion item.
     * You can set the title of the Accordion item using `header` property.
     * It also supports to include the title as `HTML element`, `string`, or `query selector`.
     *
     * @default null
     */
    header: any;
    /**
     * Sets the text content to be displayed for the Accordion item.
     * You can set the content of the Accordion item using `content` property.
     * It also supports to include the title as `HTML element`, `string`, or `query selector`.
     *
     * @default null
     */
    content: any;
    constructor(viewContainerRef: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AccordionItemDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AccordionItemDirective, "e-accordionitems>e-accordionitem", never, { "content": "content"; "cssClass": "cssClass"; "expanded": "expanded"; "header": "header"; "iconCss": "iconCss"; }, {}, ["header", "content"]>;
}
/**
 * AccordionItem Array Directive
 * @private
 */
export declare class AccordionItemsDirective extends ArrayBase<AccordionItemsDirective> {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AccordionItemsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<AccordionItemsDirective, "ejs-accordion>e-accordionitems", never, {}, {}, ["children"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbXMuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbIml0ZW1zLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tcGxleEJhc2UsIEFycmF5QmFzZSB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1hbmd1bGFyLWJhc2UnO1xuLyoqXG4gKiAnZS1hY2NvcmRpb25pdGVtJyBkaXJlY3RpdmUgcmVwcmVzZW50IGEgaXRlbSBvZiB0aGUgQW5ndWxhciBBY2NvcmRpb24uXG4gKiBJdCBtdXN0IGJlIGNvbnRhaW5lZCBpbiBhIEFjY29yZGlvbiBjb21wb25lbnQoYGVqcy1hY2NvcmRpb25gKS5cbiAqIGBgYGh0bWxcbiAqIDxlanMtYWNjb3JkaW9uPlxuICogICA8ZS1hY2NvcmRpb25pdGVtcz5cbiAqICAgIDxlLWFjY29yZGlvbml0ZW0gaGVhZGVyPSdIZWFkZXIxJz48L2UtYWNjb3JkaW9uaXRlbT5cbiAqICAgIDxlLWFjY29yZGlvbml0ZW0gaGVhZGVyPSdIZWFkZXIyJyBjb250ZW50PSdDb250ZW50Mic+PC9lLWFjY29yZGlvbml0ZW0+XG4gKiAgIDwvZS1hY2NvcmRpb25pdGVtcz5cbiAqIDwvZWpzLWFjY29yZGlvbj5cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBY2NvcmRpb25JdGVtRGlyZWN0aXZlIGV4dGVuZHMgQ29tcGxleEJhc2U8QWNjb3JkaW9uSXRlbURpcmVjdGl2ZT4ge1xuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjtcbiAgICBkaXJlY3RpdmVQcm9wTGlzdDogYW55O1xuICAgIC8qKlxuICAgICAqIERlZmluZXMgc2luZ2xlL211bHRpcGxlIGNsYXNzZXMgKHNlcGFyYXRlZCBieSBhIHNwYWNlKSBhcmUgdG8gYmUgdXNlZCBmb3IgQWNjb3JkaW9uIGl0ZW0gY3VzdG9taXphdGlvbi5cbiAgICAgKiBAZGVmYXVsdCBudWxsXG4gICAgICovXG4gICAgY3NzQ2xhc3M6IGFueTtcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBleHBhbmQgKHRydWUpIG9yIGNvbGxhcHNlIChmYWxzZSkgc3RhdGUgb2YgdGhlIEFjY29yZGlvbiBpdGVtLiBCeSBkZWZhdWx0LCBhbGwgdGhlIGl0ZW1zIGFyZSBpbiBhIGNvbGxhcHNlZCBzdGF0ZS5cbiAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAqL1xuICAgIGV4cGFuZGVkOiBhbnk7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBhbiBpY29uIHdpdGggdGhlIGdpdmVuIGN1c3RvbSBDU1MgY2xhc3MgdGhhdCBpcyB0byBiZSByZW5kZXJlZCBiZWZvcmUgdGhlIGhlYWRlciB0ZXh0LlxuICAgICAqIEFkZCB0aGUgY3NzIGNsYXNzZXMgdG8gdGhlIGBpY29uQ3NzYCBwcm9wZXJ0eSBhbmQgd3JpdGUgdGhlIGNzcyBzdHlsZXMgdG8gdGhlIGRlZmluZWQgY2xhc3MgdG8gc2V0IGltYWdlcy9pY29ucy5cbiAgICAgKiBBZGRpbmcgaWNvbiBpcyBhcHBsaWNhYmxlIG9ubHkgdG8gdGhlIGhlYWRlci5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IG51bGxcbiAgICAgKi9cbiAgICBpY29uQ3NzOiBhbnk7XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgaGVhZGVyIHRleHQgdG8gYmUgZGlzcGxheWVkIGZvciB0aGUgQWNjb3JkaW9uIGl0ZW0uXG4gICAgICogWW91IGNhbiBzZXQgdGhlIHRpdGxlIG9mIHRoZSBBY2NvcmRpb24gaXRlbSB1c2luZyBgaGVhZGVyYCBwcm9wZXJ0eS5cbiAgICAgKiBJdCBhbHNvIHN1cHBvcnRzIHRvIGluY2x1ZGUgdGhlIHRpdGxlIGFzIGBIVE1MIGVsZW1lbnRgLCBgc3RyaW5nYCwgb3IgYHF1ZXJ5IHNlbGVjdG9yYC5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IG51bGxcbiAgICAgKi9cbiAgICBoZWFkZXI6IGFueTtcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSB0ZXh0IGNvbnRlbnQgdG8gYmUgZGlzcGxheWVkIGZvciB0aGUgQWNjb3JkaW9uIGl0ZW0uXG4gICAgICogWW91IGNhbiBzZXQgdGhlIGNvbnRlbnQgb2YgdGhlIEFjY29yZGlvbiBpdGVtIHVzaW5nIGBjb250ZW50YCBwcm9wZXJ0eS5cbiAgICAgKiBJdCBhbHNvIHN1cHBvcnRzIHRvIGluY2x1ZGUgdGhlIHRpdGxlIGFzIGBIVE1MIGVsZW1lbnRgLCBgc3RyaW5nYCwgb3IgYHF1ZXJ5IHNlbGVjdG9yYC5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IG51bGxcbiAgICAgKi9cbiAgICBjb250ZW50OiBhbnk7XG4gICAgY29uc3RydWN0b3Iodmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZik7XG59XG4vKipcbiAqIEFjY29yZGlvbkl0ZW0gQXJyYXkgRGlyZWN0aXZlXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBY2NvcmRpb25JdGVtc0RpcmVjdGl2ZSBleHRlbmRzIEFycmF5QmFzZTxBY2NvcmRpb25JdGVtc0RpcmVjdGl2ZT4ge1xuICAgIGNvbnN0cnVjdG9yKCk7XG59XG4iXX0=