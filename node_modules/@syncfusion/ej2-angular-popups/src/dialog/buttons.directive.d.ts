import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * 'e-button' directive represent a button of angular dialog
 * It must be contained in a Dialog component(`ej-dialog`).
 * ```html
 * <ejs-dialog id='dialog' showCloseIcon=true>
 *   <e-buttons>
 *    <e-dialogbutton [buttonModal]='okButton'></e-button>
 *    <e-dialogbutton [buttonModal]='cancelButton'></e-button>
 *   </e-buttons>
 * </ejs-dialog>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class DialogButtonDirective extends ComplexBase<DialogButtonDirective> {
    private viewContainerRef;
    directivePropList: any;
    /**
     * Specify the type of the button.
     * Possible values are Button, Submit and Reset.
     * @default 'Button'
     * @asptype string
     * @blazortype string
     */
    type: any;
    /**
     * Specifies the button component properties to render the dialog buttons.
     */
    buttonModel: any;
    constructor(viewContainerRef: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DialogButtonDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DialogButtonDirective, "e-buttons>e-dialogbutton", never, { "buttonModel": "buttonModel"; "type": "type"; }, { "click": "click"; }, never>;
}
/**
 * DialogButton Array Directive
 * @private
 */
export declare class ButtonsDirective extends ArrayBase<ButtonsDirective> {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ButtonsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ButtonsDirective, "ejs-dialog>e-buttons", never, {}, {}, ["children"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9ucy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiYnV0dG9ucy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21wbGV4QmFzZSwgQXJyYXlCYXNlIH0gZnJvbSAnQHN5bmNmdXNpb24vZWoyLWFuZ3VsYXItYmFzZSc7XG4vKipcbiAqICdlLWJ1dHRvbicgZGlyZWN0aXZlIHJlcHJlc2VudCBhIGJ1dHRvbiBvZiBhbmd1bGFyIGRpYWxvZ1xuICogSXQgbXVzdCBiZSBjb250YWluZWQgaW4gYSBEaWFsb2cgY29tcG9uZW50KGBlai1kaWFsb2dgKS5cbiAqIGBgYGh0bWxcbiAqIDxlanMtZGlhbG9nIGlkPSdkaWFsb2cnIHNob3dDbG9zZUljb249dHJ1ZT5cbiAqICAgPGUtYnV0dG9ucz5cbiAqICAgIDxlLWRpYWxvZ2J1dHRvbiBbYnV0dG9uTW9kYWxdPSdva0J1dHRvbic+PC9lLWJ1dHRvbj5cbiAqICAgIDxlLWRpYWxvZ2J1dHRvbiBbYnV0dG9uTW9kYWxdPSdjYW5jZWxCdXR0b24nPjwvZS1idXR0b24+XG4gKiAgIDwvZS1idXR0b25zPlxuICogPC9lanMtZGlhbG9nPlxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERpYWxvZ0J1dHRvbkRpcmVjdGl2ZSBleHRlbmRzIENvbXBsZXhCYXNlPERpYWxvZ0J1dHRvbkRpcmVjdGl2ZT4ge1xuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjtcbiAgICBkaXJlY3RpdmVQcm9wTGlzdDogYW55O1xuICAgIC8qKlxuICAgICAqIFNwZWNpZnkgdGhlIHR5cGUgb2YgdGhlIGJ1dHRvbi5cbiAgICAgKiBQb3NzaWJsZSB2YWx1ZXMgYXJlIEJ1dHRvbiwgU3VibWl0IGFuZCBSZXNldC5cbiAgICAgKiBAZGVmYXVsdCAnQnV0dG9uJ1xuICAgICAqIEBhc3B0eXBlIHN0cmluZ1xuICAgICAqIEBibGF6b3J0eXBlIHN0cmluZ1xuICAgICAqL1xuICAgIHR5cGU6IGFueTtcbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIGJ1dHRvbiBjb21wb25lbnQgcHJvcGVydGllcyB0byByZW5kZXIgdGhlIGRpYWxvZyBidXR0b25zLlxuICAgICAqL1xuICAgIGJ1dHRvbk1vZGVsOiBhbnk7XG4gICAgY29uc3RydWN0b3Iodmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZik7XG59XG4vKipcbiAqIERpYWxvZ0J1dHRvbiBBcnJheSBEaXJlY3RpdmVcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJ1dHRvbnNEaXJlY3RpdmUgZXh0ZW5kcyBBcnJheUJhc2U8QnV0dG9uc0RpcmVjdGl2ZT4ge1xuICAgIGNvbnN0cnVjdG9yKCk7XG59XG4iXX0=