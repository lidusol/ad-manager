import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';
import { IComponentBase } from '@syncfusion/ej2-angular-base';
import { ProgressButton } from '@syncfusion/ej2-splitbuttons';
import * as ɵngcc0 from '@angular/core';
export declare const inputs: string[];
export declare const outputs: string[];
export declare const twoWays: string[];
/**
 * Represents the Angular ProgressButton Component.
 * ```html
 * <button ejs-progressbutton content='Progress Button'></button>
 * ```
 */
export declare class ProgressButtonComponent extends ProgressButton implements IComponentBase {
    private ngEle;
    private srenderer;
    private viewContainerRef;
    private injector;
    containerContext: any;
    tagObjects: any;
    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngAfterContentChecked(): void;
    registerEvents: (eventList: string[]) => void;
    addTwoWay: (propList: string[]) => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ProgressButtonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ProgressButtonComponent, "[ejs-progressbutton]", never, { "animationSettings": "animationSettings"; "content": "content"; "cssClass": "cssClass"; "disabled": "disabled"; "duration": "duration"; "enableHtmlSanitizer": "enableHtmlSanitizer"; "enableProgress": "enableProgress"; "iconCss": "iconCss"; "iconPosition": "iconPosition"; "isPrimary": "isPrimary"; "isToggle": "isToggle"; "spinSettings": "spinSettings"; }, { "begin": "begin"; "created": "created"; "end": "end"; "fail": "fail"; "progress": "progress"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3NidXR0b24uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInByb2dyZXNzYnV0dG9uLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIFZpZXdDb250YWluZXJSZWYsIFJlbmRlcmVyMiwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElDb21wb25lbnRCYXNlIH0gZnJvbSAnQHN5bmNmdXNpb24vZWoyLWFuZ3VsYXItYmFzZSc7XG5pbXBvcnQgeyBQcm9ncmVzc0J1dHRvbiB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1zcGxpdGJ1dHRvbnMnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgaW5wdXRzOiBzdHJpbmdbXTtcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IG91dHB1dHM6IHN0cmluZ1tdO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgdHdvV2F5czogc3RyaW5nW107XG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIEFuZ3VsYXIgUHJvZ3Jlc3NCdXR0b24gQ29tcG9uZW50LlxuICogYGBgaHRtbFxuICogPGJ1dHRvbiBlanMtcHJvZ3Jlc3NidXR0b24gY29udGVudD0nUHJvZ3Jlc3MgQnV0dG9uJz48L2J1dHRvbj5cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQcm9ncmVzc0J1dHRvbkNvbXBvbmVudCBleHRlbmRzIFByb2dyZXNzQnV0dG9uIGltcGxlbWVudHMgSUNvbXBvbmVudEJhc2Uge1xuICAgIHByaXZhdGUgbmdFbGU7XG4gICAgcHJpdmF0ZSBzcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSB2aWV3Q29udGFpbmVyUmVmO1xuICAgIHByaXZhdGUgaW5qZWN0b3I7XG4gICAgY29udGFpbmVyQ29udGV4dDogYW55O1xuICAgIHRhZ09iamVjdHM6IGFueTtcbiAgICBjb25zdHJ1Y3RvcihuZ0VsZTogRWxlbWVudFJlZiwgc3JlbmRlcmVyOiBSZW5kZXJlcjIsIHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsIGluamVjdG9yOiBJbmplY3Rvcik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpOiB2b2lkO1xuICAgIHJlZ2lzdGVyRXZlbnRzOiAoZXZlbnRMaXN0OiBzdHJpbmdbXSkgPT4gdm9pZDtcbiAgICBhZGRUd29XYXk6IChwcm9wTGlzdDogc3RyaW5nW10pID0+IHZvaWQ7XG59XG4iXX0=