/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
var NgNumberFormatterComponent = /** @class */ (function () {
    function NgNumberFormatterComponent() {
    }
    /**
     * @return {?}
     */
    NgNumberFormatterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var incomingNumber = parseInt(this.ngNumber);
        if (isNaN(incomingNumber)) {
            this.ngOutputNumber = (this.ngNumber).toString();
        }
        else {
            this.ngOutputNumber = (incomingNumber > 0) ? '' : '-';
            this.ngOutputNumber += this.nFormatter(Math.abs(incomingNumber));
        }
    };
    /**
     * @param {?} num
     * @param {?=} digits
     * @return {?}
     */
    NgNumberFormatterComponent.prototype.nFormatter = /**
     * @param {?} num
     * @param {?=} digits
     * @return {?}
     */
    function (num, digits) {
        if (digits === void 0) { digits = 1; }
        /** @type {?} */
        var si = [
            { value: 1E18, symbol: "E" },
            { value: 1E15, symbol: "P" },
            { value: 1E12, symbol: "T" },
            { value: 1E9, symbol: "B" },
            { value: 1E6, symbol: "M" },
            { value: 1E3, symbol: "K" }
        ];
        /** @type {?} */
        var rx = /\.0+$|(\.[0-9]*[1-9])0+$/;
        /** @type {?} */
        var i;
        for (i = 0; i < si.length; i++) {
            if (num >= si[i].value) {
                return (num / si[i].value).toFixed(digits).replace(rx, "$1") + si[i].symbol;
            }
        }
        return num.toFixed(digits).replace(rx, "$1");
    };
    NgNumberFormatterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-number-formatter',
                    inputs: ['ngNumber'],
                    template: '<span>{{ngOutputNumber}}</span>',
                },] },
    ];
    /** @nocollapse */
    NgNumberFormatterComponent.ctorParameters = function () { return []; };
    return NgNumberFormatterComponent;
}());
export { NgNumberFormatterComponent };
if (false) {
    /** @type {?} */
    NgNumberFormatterComponent.prototype.ngNumber;
    /** @type {?} */
    NgNumberFormatterComponent.prototype.ngOutputNumber;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctbnVtYmVyLWZvcm1hdHRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1udW1iZXItZm9ybWF0dGVyLyIsInNvdXJjZXMiOlsic3JjL2FwcC9tb2R1bGVzL25nLW51bWJlci1mb3JtYXR0ZXIvbmctbnVtYmVyLWZvcm1hdHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7O0lBWWhEO0tBQWlCOzs7O0lBRWpCLDZDQUFROzs7SUFBUjs7UUFDRSxJQUFNLGNBQWMsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQy9DLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQ3pCLElBQUksQ0FBQyxjQUFjLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDbEQ7YUFBTTtZQUNMLElBQUksQ0FBQyxjQUFjLEdBQUcsQ0FBQyxjQUFjLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO1lBQ3RELElBQUksQ0FBQyxjQUFjLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7U0FDbEU7S0FDRjs7Ozs7O0lBRUQsK0NBQVU7Ozs7O0lBQVYsVUFBVyxHQUFHLEVBQUUsTUFBVTtRQUFWLHVCQUFBLEVBQUEsVUFBVTs7UUFDeEIsSUFBSSxFQUFFLEdBQUc7WUFDUCxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtZQUM1QixFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtZQUM1QixFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtZQUM1QixFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtZQUMzQixFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtZQUMzQixFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtTQUM1QixDQUFxQzs7UUFQdEMsSUFPRyxFQUFFLEdBQUcsMEJBQTBCLENBQUk7O1FBUHRDLElBT29DLENBQUMsQ0FBQztRQUN0QyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUIsSUFBSSxHQUFHLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRTtnQkFDdEIsT0FBTyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQzthQUM3RTtTQUNGO1FBQ0QsT0FBTyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDOUM7O2dCQXJDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsTUFBTSxFQUFFLENBQUMsVUFBVSxDQUFDO29CQUNwQixRQUFRLEVBQUUsaUNBQWlDO2lCQUM1Qzs7OztxQ0FORDs7U0FRYSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZy1udW1iZXItZm9ybWF0dGVyJyxcbiAgaW5wdXRzOiBbJ25nTnVtYmVyJ10sXG4gIHRlbXBsYXRlOiAnPHNwYW4+e3tuZ091dHB1dE51bWJlcn19PC9zcGFuPicsXG59KVxuXG5leHBvcnQgY2xhc3MgTmdOdW1iZXJGb3JtYXR0ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBuZ051bWJlcjogc3RyaW5nO1xuICBuZ091dHB1dE51bWJlcjogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgY29uc3QgaW5jb21pbmdOdW1iZXIgPSBwYXJzZUludCh0aGlzLm5nTnVtYmVyKTtcbiAgICBpZiAoaXNOYU4oaW5jb21pbmdOdW1iZXIpKSB7XG4gICAgICB0aGlzLm5nT3V0cHV0TnVtYmVyID0gKHRoaXMubmdOdW1iZXIpLnRvU3RyaW5nKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubmdPdXRwdXROdW1iZXIgPSAoaW5jb21pbmdOdW1iZXIgPiAwKSA/ICcnIDogJy0nO1xuICAgICAgdGhpcy5uZ091dHB1dE51bWJlciArPSB0aGlzLm5Gb3JtYXR0ZXIoTWF0aC5hYnMoaW5jb21pbmdOdW1iZXIpKTtcbiAgICB9XG4gIH1cblxuICBuRm9ybWF0dGVyKG51bSwgZGlnaXRzID0gMSkge1xuICAgIHZhciBzaSA9IFtcbiAgICAgIHsgdmFsdWU6IDFFMTgsIHN5bWJvbDogXCJFXCIgfSxcbiAgICAgIHsgdmFsdWU6IDFFMTUsIHN5bWJvbDogXCJQXCIgfSxcbiAgICAgIHsgdmFsdWU6IDFFMTIsIHN5bWJvbDogXCJUXCIgfSxcbiAgICAgIHsgdmFsdWU6IDFFOSwgc3ltYm9sOiBcIkJcIiB9LFxuICAgICAgeyB2YWx1ZTogMUU2LCBzeW1ib2w6IFwiTVwiIH0sXG4gICAgICB7IHZhbHVlOiAxRTMsIHN5bWJvbDogXCJLXCIgfVxuICAgIF0sIHJ4ID0gL1xcLjArJHwoXFwuWzAtOV0qWzEtOV0pMCskLywgaTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgc2kubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChudW0gPj0gc2lbaV0udmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIChudW0gLyBzaVtpXS52YWx1ZSkudG9GaXhlZChkaWdpdHMpLnJlcGxhY2UocngsIFwiJDFcIikgKyBzaVtpXS5zeW1ib2w7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudW0udG9GaXhlZChkaWdpdHMpLnJlcGxhY2UocngsIFwiJDFcIik7XG4gIH1cbn1cbiJdfQ==