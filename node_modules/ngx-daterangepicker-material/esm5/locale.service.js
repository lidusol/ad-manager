import { __assign, __decorate, __param } from "tslib";
import { Injectable, Inject } from '@angular/core';
import { LOCALE_CONFIG, DefaultLocaleConfig } from './daterangepicker.config';
import * as ɵngcc0 from '@angular/core';
var LocaleService = /** @class */ (function () {
    function LocaleService(_config) {
        this._config = _config;
    }
    Object.defineProperty(LocaleService.prototype, "config", {
        get: function () {
            if (!this._config) {
                return DefaultLocaleConfig;
            }
            return __assign(__assign({}, DefaultLocaleConfig), this._config);
        },
        enumerable: true,
        configurable: true
    });
    LocaleService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [LOCALE_CONFIG,] }] }
    ]; };
    LocaleService = __decorate([ __param(0, Inject(LOCALE_CONFIG))
    ], LocaleService);
LocaleService.ɵfac = function LocaleService_Factory(t) { return new (t || LocaleService)(ɵngcc0.ɵɵinject(LOCALE_CONFIG)); };
LocaleService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LocaleService, factory: function (t) { return LocaleService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LocaleService, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [LOCALE_CONFIG]
            }] }]; }, null); })();
    return LocaleService;
}());
export { LocaleService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxlLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtZGF0ZXJhbmdlcGlja2VyLW1hdGVyaWFsL2xvY2FsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQUUsYUFBYSxFQUFFLG1CQUFtQixFQUFnQixNQUFNLDBCQUEwQixDQUFDOztBQUc1RjtBQUNvQixJQUFoQix1QkFBMkMsT0FBcUI7QUFBSSxRQUF6QixZQUFPLEdBQVAsT0FBTyxDQUFjO0FBQUMsSUFBRSxDQUFDO0FBQ3hFLElBQ0ksc0JBQUksaUNBQU07QUFBSSxhQUFkO0FBQWMsWUFDVixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtBQUMzQixnQkFBWSxPQUFPLG1CQUFtQixDQUFDO0FBQ3ZDLGFBQVM7QUFDVCxZQUNRLDZCQUFZLG1CQUFtQixHQUFLLElBQUksQ0FBQyxPQUFPLEVBQUc7QUFDM0QsUUFBSSxDQUFDO0FBQ0o7QUFDd0I7QUFBMkIsT0FGL0M7QUFDTDtBQUN3RCxnREFWdkMsTUFBTSxTQUFDLGFBQWE7QUFBUTtBQUFVLElBRDFDLGFBQWEsd0JBRHpCLFVBQVUsRUFBRSxyQkFDTCxDQUNTLFdBQUEsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFBO0FBQUMsT0FEMUIsYUFBYSxDQVV6Qjs7Ozs7Ozs7a0NBQ0Q7QUFBQyxJQURELG9CQUFDO0FBQ0EsQ0FEQSxBQVZELElBVUM7QUFDRCxTQVhhLGFBQWE7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExPQ0FMRV9DT05GSUcsIERlZmF1bHRMb2NhbGVDb25maWcsIExvY2FsZUNvbmZpZyB9IGZyb20gJy4vZGF0ZXJhbmdlcGlja2VyLmNvbmZpZyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBMb2NhbGVTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcihASW5qZWN0KExPQ0FMRV9DT05GSUcpIHByaXZhdGUgX2NvbmZpZzogTG9jYWxlQ29uZmlnKSB7fVxuXG4gICAgZ2V0IGNvbmZpZygpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9jb25maWcpIHtcbiAgICAgICAgICAgIHJldHVybiBEZWZhdWx0TG9jYWxlQ29uZmlnO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHsgLi4uRGVmYXVsdExvY2FsZUNvbmZpZywgLi4udGhpcy5fY29uZmlnIH07XG4gICAgfVxufVxuIl19