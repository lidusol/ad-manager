import { ReTree } from './retree';
import * as ɵngcc0 from '@angular/core';
export interface DeviceInfo {
    userAgent: string;
    os: string;
    browser: string;
    device: string;
    os_version: string;
    browser_version: string;
}
export declare class DeviceDetectorService {
    private platformId;
    ua: string;
    userAgent: string;
    os: string;
    browser: string;
    device: string;
    os_version: string;
    browser_version: string;
    reTree: ReTree;
    constructor(platformId: any);
    /**
     * @author Ahsan Ayaz
     * @desc Sets the initial value of the device when the service is initiated.
     * This value is later accessible for usage
     */
    setDeviceInfo(ua?: string): void;
    /**
     * @author Ahsan Ayaz
     * @desc Returns the device information
     * @returns the device information object.
     */
    getDeviceInfo(): DeviceInfo;
    /**
     * @author Ahsan Ayaz
     * @desc Compares the current device info with the mobile devices to check
     * if the current device is a mobile and also check current device is tablet so it will return false.
     * @returns whether the current device is a mobile
     */
    isMobile(userAgent?: string): boolean;
    /**
     * @author Ahsan Ayaz
     * @desc Compares the current device info with the tablet devices to check
     * if the current device is a tablet.
     * @returns whether the current device is a tablet
     */
    isTablet(userAgent?: string): boolean;
    /**
     * @author Ahsan Ayaz
     * @desc Compares the current device info with the desktop devices to check
     * if the current device is a desktop device.
     * @returns whether the current device is a desktop device
     */
    isDesktop(userAgent?: string): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DeviceDetectorService, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWRldGVjdG9yLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiZGV2aWNlLWRldGVjdG9yLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlVHJlZSB9IGZyb20gJy4vcmV0cmVlJztcbmV4cG9ydCBpbnRlcmZhY2UgRGV2aWNlSW5mbyB7XG4gICAgdXNlckFnZW50OiBzdHJpbmc7XG4gICAgb3M6IHN0cmluZztcbiAgICBicm93c2VyOiBzdHJpbmc7XG4gICAgZGV2aWNlOiBzdHJpbmc7XG4gICAgb3NfdmVyc2lvbjogc3RyaW5nO1xuICAgIGJyb3dzZXJfdmVyc2lvbjogc3RyaW5nO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGV2aWNlRGV0ZWN0b3JTZXJ2aWNlIHtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgdWE6IHN0cmluZztcbiAgICB1c2VyQWdlbnQ6IHN0cmluZztcbiAgICBvczogc3RyaW5nO1xuICAgIGJyb3dzZXI6IHN0cmluZztcbiAgICBkZXZpY2U6IHN0cmluZztcbiAgICBvc192ZXJzaW9uOiBzdHJpbmc7XG4gICAgYnJvd3Nlcl92ZXJzaW9uOiBzdHJpbmc7XG4gICAgcmVUcmVlOiBSZVRyZWU7XG4gICAgY29uc3RydWN0b3IocGxhdGZvcm1JZDogYW55KTtcbiAgICAvKipcbiAgICAgKiBAYXV0aG9yIEFoc2FuIEF5YXpcbiAgICAgKiBAZGVzYyBTZXRzIHRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSBkZXZpY2Ugd2hlbiB0aGUgc2VydmljZSBpcyBpbml0aWF0ZWQuXG4gICAgICogVGhpcyB2YWx1ZSBpcyBsYXRlciBhY2Nlc3NpYmxlIGZvciB1c2FnZVxuICAgICAqL1xuICAgIHNldERldmljZUluZm8odWE/OiBzdHJpbmcpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBhdXRob3IgQWhzYW4gQXlhelxuICAgICAqIEBkZXNjIFJldHVybnMgdGhlIGRldmljZSBpbmZvcm1hdGlvblxuICAgICAqIEByZXR1cm5zIHRoZSBkZXZpY2UgaW5mb3JtYXRpb24gb2JqZWN0LlxuICAgICAqL1xuICAgIGdldERldmljZUluZm8oKTogRGV2aWNlSW5mbztcbiAgICAvKipcbiAgICAgKiBAYXV0aG9yIEFoc2FuIEF5YXpcbiAgICAgKiBAZGVzYyBDb21wYXJlcyB0aGUgY3VycmVudCBkZXZpY2UgaW5mbyB3aXRoIHRoZSBtb2JpbGUgZGV2aWNlcyB0byBjaGVja1xuICAgICAqIGlmIHRoZSBjdXJyZW50IGRldmljZSBpcyBhIG1vYmlsZSBhbmQgYWxzbyBjaGVjayBjdXJyZW50IGRldmljZSBpcyB0YWJsZXQgc28gaXQgd2lsbCByZXR1cm4gZmFsc2UuXG4gICAgICogQHJldHVybnMgd2hldGhlciB0aGUgY3VycmVudCBkZXZpY2UgaXMgYSBtb2JpbGVcbiAgICAgKi9cbiAgICBpc01vYmlsZSh1c2VyQWdlbnQ/OiBzdHJpbmcpOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEBhdXRob3IgQWhzYW4gQXlhelxuICAgICAqIEBkZXNjIENvbXBhcmVzIHRoZSBjdXJyZW50IGRldmljZSBpbmZvIHdpdGggdGhlIHRhYmxldCBkZXZpY2VzIHRvIGNoZWNrXG4gICAgICogaWYgdGhlIGN1cnJlbnQgZGV2aWNlIGlzIGEgdGFibGV0LlxuICAgICAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIGN1cnJlbnQgZGV2aWNlIGlzIGEgdGFibGV0XG4gICAgICovXG4gICAgaXNUYWJsZXQodXNlckFnZW50Pzogc3RyaW5nKTogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBAYXV0aG9yIEFoc2FuIEF5YXpcbiAgICAgKiBAZGVzYyBDb21wYXJlcyB0aGUgY3VycmVudCBkZXZpY2UgaW5mbyB3aXRoIHRoZSBkZXNrdG9wIGRldmljZXMgdG8gY2hlY2tcbiAgICAgKiBpZiB0aGUgY3VycmVudCBkZXZpY2UgaXMgYSBkZXNrdG9wIGRldmljZS5cbiAgICAgKiBAcmV0dXJucyB3aGV0aGVyIHRoZSBjdXJyZW50IGRldmljZSBpcyBhIGRlc2t0b3AgZGV2aWNlXG4gICAgICovXG4gICAgaXNEZXNrdG9wKHVzZXJBZ2VudD86IHN0cmluZyk6IGJvb2xlYW47XG59XG4iXX0=