/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, HostBinding, HostListener } from '@angular/core';
import { coerceBooleanProperty } from '../helpers';
import { DomSanitizer } from '@angular/platform-browser';
/** @enum {number} */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from './ngx-dropzone-remove-badge/ngx-dropzone-remove-badge.component';

function NgxDropzonePreviewComponent_ngx_dropzone_remove_badge_1_Template(rf, ctx) { if (rf & 1) {
    var _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ngx-dropzone-remove-badge", 1);
    ɵngcc0.ɵɵlistener("click", function NgxDropzonePreviewComponent_ngx_dropzone_remove_badge_1_Template_ngx_dropzone_remove_badge_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); var ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._remove($event); });
    ɵngcc0.ɵɵelementEnd();
} }
var _c0 = [[["ngx-dropzone-label"]]];
var _c1 = ["ngx-dropzone-label"];
var KEY_CODE = {
    BACKSPACE: 8,
    DELETE: 46,
};
KEY_CODE[KEY_CODE.BACKSPACE] = 'BACKSPACE';
KEY_CODE[KEY_CODE.DELETE] = 'DELETE';
var NgxDropzonePreviewComponent = /** @class */ (function () {
    function NgxDropzonePreviewComponent(sanitizer) {
        this.sanitizer = sanitizer;
        this._removable = false;
        /**
         * Emitted when the element should be removed.
         */
        this.removed = new EventEmitter();
        /**
         * Make the preview item focusable using the tab key.
         */
        this.tabIndex = 0;
    }
    Object.defineProperty(NgxDropzonePreviewComponent.prototype, "removable", {
        /** Allow the user to remove files. */
        get: /**
         * Allow the user to remove files.
         * @return {?}
         */
        function () {
            return this._removable;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._removable = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    NgxDropzonePreviewComponent.prototype.keyEvent = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        switch (event.keyCode) {
            case KEY_CODE.BACKSPACE:
            case KEY_CODE.DELETE:
                this.remove();
                break;
            default:
                break;
        }
    };
    Object.defineProperty(NgxDropzonePreviewComponent.prototype, "hostStyle", {
        /** We use the HostBinding to pass these common styles to child components. */
        get: /**
         * We use the HostBinding to pass these common styles to child components.
         * @return {?}
         */
        function () {
            /** @type {?} */
            var styles = "\n\t\t\tdisplay: flex;\n\t\t\theight: 140px;\n\t\t\tmin-height: 140px;\n\t\t\tmin-width: 180px;\n\t\t\tmax-width: 180px;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tpadding: 0 20px;\n\t\t\tmargin: 10px;\n\t\t\tborder-radius: 5px;\n\t\t\tposition: relative;\n\t\t";
            return this.sanitizer.bypassSecurityTrustStyle(styles);
        },
        enumerable: true,
        configurable: true
    });
    /** Remove method to be used from the template. */
    /**
     * Remove method to be used from the template.
     * @param {?} event
     * @return {?}
     */
    NgxDropzonePreviewComponent.prototype._remove = /**
     * Remove method to be used from the template.
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.stopPropagation();
        this.remove();
    };
    /** Remove the preview item (use from component code). */
    /**
     * Remove the preview item (use from component code).
     * @return {?}
     */
    NgxDropzonePreviewComponent.prototype.remove = /**
     * Remove the preview item (use from component code).
     * @return {?}
     */
    function () {
        if (this._removable) {
            this.removed.next(this.file);
        }
    };
    /**
     * @protected
     * @return {?}
     */
    NgxDropzonePreviewComponent.prototype.readFile = /**
     * @protected
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, new Promise((/**
                     * @param {?} resolve
                     * @param {?} reject
                     * @return {?}
                     */
                    function (resolve, reject) {
                        /** @type {?} */
                        var reader = new FileReader();
                        reader.onload = (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            resolve(((/** @type {?} */ (e.target))).result);
                        });
                        reader.onerror = (/**
                         * @param {?} e
                         * @return {?}
                         */
                        function (e) {
                            console.error("FileReader failed on file " + _this.file.name + ".");
                            reject(e);
                        });
                        if (!_this.file) {
                            return reject('No file to read. Please provide a file using the [file] Input property.');
                        }
                        reader.readAsDataURL(_this.file);
                    }))];
            });
        });
    };
    /** @nocollapse */
    NgxDropzonePreviewComponent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    NgxDropzonePreviewComponent.propDecorators = {
        file: [{ type: Input }],
        removable: [{ type: Input }],
        removed: [{ type: Output }],
        keyEvent: [{ type: HostListener, args: ['keyup', ['$event'],] }],
        hostStyle: [{ type: HostBinding, args: ['style',] }],
        tabIndex: [{ type: HostBinding, args: ['tabindex',] }]
    };
NgxDropzonePreviewComponent.ɵfac = function NgxDropzonePreviewComponent_Factory(t) { return new (t || NgxDropzonePreviewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
NgxDropzonePreviewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxDropzonePreviewComponent, selectors: [["ngx-dropzone-preview"]], hostVars: 3, hostBindings: function NgxDropzonePreviewComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup", function NgxDropzonePreviewComponent_keyup_HostBindingHandler($event) { return ctx.keyEvent($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("tabindex", ctx.tabIndex);
        ɵngcc0.ɵɵstyleMap(ctx.hostStyle);
    } }, inputs: { removable: "removable", file: "file" }, outputs: { removed: "removed" }, ngContentSelectors: _c1, decls: 2, vars: 1, consts: [[3, "click", 4, "ngIf"], [3, "click"]], template: function NgxDropzonePreviewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵtemplate(1, NgxDropzonePreviewComponent_ngx_dropzone_remove_badge_1_Template, 1, 0, "ngx-dropzone-remove-badge", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.removable);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.NgxDropzoneRemoveBadgeComponent], styles: ["[_nghost-%COMP%]{background-image:linear-gradient(to top,#ededed,#efefef,#f1f1f1,#f4f4f4,#f6f6f6)}[_nghost-%COMP%]:focus, [_nghost-%COMP%]:hover{background-image:linear-gradient(to top,#e3e3e3,#ebeaea,#e8e7e7,#ebeaea,#f4f4f4);outline:0}[_nghost-%COMP%]:focus   ngx-dropzone-remove-badge[_ngcontent-%COMP%], [_nghost-%COMP%]:hover   ngx-dropzone-remove-badge[_ngcontent-%COMP%]{opacity:1}[_nghost-%COMP%]   ngx-dropzone-remove-badge[_ngcontent-%COMP%]{opacity:0}[_nghost-%COMP%]     ngx-dropzone-label{overflow-wrap:break-word}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxDropzonePreviewComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-dropzone-preview',
                template: "\n\t\t<ng-content select=\"ngx-dropzone-label\"></ng-content>\n\t\t<ngx-dropzone-remove-badge *ngIf=\"removable\" (click)=\"_remove($event)\">\n\t\t</ngx-dropzone-remove-badge>\n\t",
                styles: [":host(){background-image:linear-gradient(to top,#ededed,#efefef,#f1f1f1,#f4f4f4,#f6f6f6)}:host():focus,:host():hover{background-image:linear-gradient(to top,#e3e3e3,#ebeaea,#e8e7e7,#ebeaea,#f4f4f4);outline:0}:host():focus ngx-dropzone-remove-badge,:host():hover ngx-dropzone-remove-badge{opacity:1}:host() ngx-dropzone-remove-badge{opacity:0}:host() ::ng-deep ngx-dropzone-label{overflow-wrap:break-word}"]
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, { removed: [{
            type: Output
        }], tabIndex: [{
            type: HostBinding,
            args: ['tabindex']
        }], removable: [{
            type: Input
        }], keyEvent: [{
            type: HostListener,
            args: ['keyup', ['$event']]
        }], hostStyle: [{
            type: HostBinding,
            args: ['style']
        }], file: [{
            type: Input
        }] }); })();
    return NgxDropzonePreviewComponent;
}());
export { NgxDropzonePreviewComponent };
if (false) {
    /**
     * The file to preview.
     * @type {?}
     */
    NgxDropzonePreviewComponent.prototype.file;
    /**
     * @type {?}
     * @protected
     */
    NgxDropzonePreviewComponent.prototype._removable;
    /**
     * Emitted when the element should be removed.
     * @type {?}
     */
    NgxDropzonePreviewComponent.prototype.removed;
    /**
     * Make the preview item focusable using the tab key.
     * @type {?}
     */
    NgxDropzonePreviewComponent.prototype.tabIndex;
    /**
     * @type {?}
     * @protected
     */
    NgxDropzonePreviewComponent.prototype.sanitizer;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,