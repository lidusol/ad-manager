import * as ɵngcc0 from '@angular/core';
export interface FileSelectResult {
    /** The added files, emitted in the filesAdded event. */
    addedFiles: File[];
    /** The rejected files, emitted in the filesRejected event. */
    rejectedFiles: RejectedFile[];
}
export interface RejectedFile extends File {
    /** The reason the file was rejected. */
    reason?: RejectReason;
}
export declare type RejectReason = 'type' | 'size' | 'no_multiple';
/**
 * This service contains the filtering logic to be applied to
 * any dropped or selected file. If a file matches all criteria
 * like maximum size or accept type, it will be emitted in the
 * addedFiles array, otherwise in the rejectedFiles array.
 */
export declare class NgxDropzoneService {
    parseFileList(files: FileList, accept: string, maxFileSize: number, multiple: boolean): FileSelectResult;
    private isAccepted;
    private rejectFile;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxDropzoneService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NgxDropzoneService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRyb3B6b25lLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsibmd4LWRyb3B6b25lLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgRmlsZVNlbGVjdFJlc3VsdCB7XG4gICAgLyoqIFRoZSBhZGRlZCBmaWxlcywgZW1pdHRlZCBpbiB0aGUgZmlsZXNBZGRlZCBldmVudC4gKi9cbiAgICBhZGRlZEZpbGVzOiBGaWxlW107XG4gICAgLyoqIFRoZSByZWplY3RlZCBmaWxlcywgZW1pdHRlZCBpbiB0aGUgZmlsZXNSZWplY3RlZCBldmVudC4gKi9cbiAgICByZWplY3RlZEZpbGVzOiBSZWplY3RlZEZpbGVbXTtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgUmVqZWN0ZWRGaWxlIGV4dGVuZHMgRmlsZSB7XG4gICAgLyoqIFRoZSByZWFzb24gdGhlIGZpbGUgd2FzIHJlamVjdGVkLiAqL1xuICAgIHJlYXNvbj86IFJlamVjdFJlYXNvbjtcbn1cbmV4cG9ydCBkZWNsYXJlIHR5cGUgUmVqZWN0UmVhc29uID0gJ3R5cGUnIHwgJ3NpemUnIHwgJ25vX211bHRpcGxlJztcbi8qKlxuICogVGhpcyBzZXJ2aWNlIGNvbnRhaW5zIHRoZSBmaWx0ZXJpbmcgbG9naWMgdG8gYmUgYXBwbGllZCB0b1xuICogYW55IGRyb3BwZWQgb3Igc2VsZWN0ZWQgZmlsZS4gSWYgYSBmaWxlIG1hdGNoZXMgYWxsIGNyaXRlcmlhXG4gKiBsaWtlIG1heGltdW0gc2l6ZSBvciBhY2NlcHQgdHlwZSwgaXQgd2lsbCBiZSBlbWl0dGVkIGluIHRoZVxuICogYWRkZWRGaWxlcyBhcnJheSwgb3RoZXJ3aXNlIGluIHRoZSByZWplY3RlZEZpbGVzIGFycmF5LlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hEcm9wem9uZVNlcnZpY2Uge1xuICAgIHBhcnNlRmlsZUxpc3QoZmlsZXM6IEZpbGVMaXN0LCBhY2NlcHQ6IHN0cmluZywgbWF4RmlsZVNpemU6IG51bWJlciwgbXVsdGlwbGU6IGJvb2xlYW4pOiBGaWxlU2VsZWN0UmVzdWx0O1xuICAgIHByaXZhdGUgaXNBY2NlcHRlZDtcbiAgICBwcml2YXRlIHJlamVjdEZpbGU7XG59XG4iXX0=