import { __decorate, __metadata } from "tslib";
import { Component, Input, EventEmitter, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from './emoji-button.component';

function EmojiCategoriesComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "emoji-button", 1);
    ɵngcc0.ɵɵlistener("selection", function EmojiCategoriesComponent_ng_container_0_Template_emoji_button_selection_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.handleCategorySelection($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const category_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("dataToEmit", category_r1)("emoji", category_r1.icon);
} }
let EmojiCategoriesComponent = class EmojiCategoriesComponent {
    constructor() {
        this.categorySelection = new EventEmitter();
    }
    handleCategorySelection(event) {
        this.categorySelection.emit(event);
    }
};
EmojiCategoriesComponent.ɵfac = function EmojiCategoriesComponent_Factory(t) { return new (t || EmojiCategoriesComponent)(); };
EmojiCategoriesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EmojiCategoriesComponent, selectors: [["emoji-categories"]], inputs: { emojisCategories: "emojisCategories" }, outputs: { categorySelection: "categorySelection" }, decls: 1, vars: 1, consts: [[4, "ngFor", "ngForOf"], [3, "dataToEmit", "emoji", "selection"]], template: function EmojiCategoriesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, EmojiCategoriesComponent_ng_container_0_Template, 2, 2, "ng-container", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.emojisCategories);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.EmojiButtonComponent], styles: ["[_nghost-%COMP%]{display:flex;flex-wrap:wrap;justify-content:space-between;margin:0 0 10px}"] });
__decorate([
    Input('emojisCategories'),
    __metadata("design:type", Object)
], EmojiCategoriesComponent.prototype, "emojisCategories", void 0);
__decorate([
    Output('categorySelection'),
    __metadata("design:type", Object)
], EmojiCategoriesComponent.prototype, "categorySelection", void 0);
EmojiCategoriesComponent = __decorate([ __metadata("design:paramtypes", [])
], EmojiCategoriesComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmojiCategoriesComponent, [{
        type: Component,
        args: [{
                selector: 'emoji-categories',
                template: `
  <ng-container *ngFor="let category of emojisCategories">
    <emoji-button 
      (selection)="handleCategorySelection($event)"
      [dataToEmit]="category"
      [emoji]="category.icon"></emoji-button>
  </ng-container>
  `,
                styles: [":host{display:flex;flex-wrap:wrap;justify-content:space-between;margin:0 0 10px}"]
            }]
    }], function () { return []; }, { categorySelection: [{
            type: Output,
            args: ['categorySelection']
        }], emojisCategories: [{
            type: Input,
            args: ['emojisCategories']
        }] }); })();
export { EmojiCategoriesComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1vamktY2F0ZWdvcmllcy5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtZW1vamktcGlja2VyL2xpYi9jb21wb25lbnRzL2Vtb2ppLWNhdGVnb3JpZXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7OztBQWV2RSxJQUFhLHdCQUF3QixHQUFyQyxNQUFhLHdCQUF3QjtBQUNyQyxJQUdFO0FBQWdCLFFBRmEsc0JBQWlCLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztBQUMzRSxJQUNpQixDQUFDO0FBQ2xCLElBQ0UsdUJBQXVCLENBQUMsS0FBSztBQUMvQixRQUFJLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdkMsSUFBRSxDQUFDO0FBQ0gsQ0FBQzs7Ozs7OytLQUFBO0FBUjRCO0FBQWEsSUFBdkMsS0FBSyxDQUFDLGtCQUFrQixDQUFDO0FBQUU7QUFDVCxrRUFEeUI7QUFDZjtBQUFhLElBQXpDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQztBQUFFO0FBQXNDLG1FQUFLO0FBRjlELHdCQUF3QixvQkFicEMsU0FBUyxDQUFDLFVBQ1QsUUFBUSxFQUFFLG5DQVlUO2dCQVoyQixVQUU1QiwxQkFXRixHQURhLHdCQUF3QixDQVNwQztJQW5CUyxFQUFFOzs7OztvQ0FPVDs7O2NBQ0YsQ0FBQzs7Ozs7Ozs7Ozs7O29CQVlGO0FBQUMsU0FWWSx3QkFBd0I7QUFDcEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBFdmVudEVtaXR0ZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdlbW9qaS1jYXRlZ29yaWVzJyxcbiAgc3R5bGVVcmxzOiBbJy4uL3N0eWxlcy9lbW9qaS1jYXRlZ29yaWVzLnNjc3MnXSxcbiAgdGVtcGxhdGU6IGBcbiAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgY2F0ZWdvcnkgb2YgZW1vamlzQ2F0ZWdvcmllc1wiPlxuICAgIDxlbW9qaS1idXR0b24gXG4gICAgICAoc2VsZWN0aW9uKT1cImhhbmRsZUNhdGVnb3J5U2VsZWN0aW9uKCRldmVudClcIlxuICAgICAgW2RhdGFUb0VtaXRdPVwiY2F0ZWdvcnlcIlxuICAgICAgW2Vtb2ppXT1cImNhdGVnb3J5Lmljb25cIj48L2Vtb2ppLWJ1dHRvbj5cbiAgPC9uZy1jb250YWluZXI+XG4gIGBcbn0pXG5cbmV4cG9ydCBjbGFzcyBFbW9qaUNhdGVnb3JpZXNDb21wb25lbnQge1xuICBASW5wdXQoJ2Vtb2ppc0NhdGVnb3JpZXMnKSBlbW9qaXNDYXRlZ29yaWVzO1xuICBAT3V0cHV0KCdjYXRlZ29yeVNlbGVjdGlvbicpIGNhdGVnb3J5U2VsZWN0aW9uID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIFxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgaGFuZGxlQ2F0ZWdvcnlTZWxlY3Rpb24oZXZlbnQpIHtcbiAgICB0aGlzLmNhdGVnb3J5U2VsZWN0aW9uLmVtaXQoZXZlbnQpO1xuICB9XG59XG4iXX0=