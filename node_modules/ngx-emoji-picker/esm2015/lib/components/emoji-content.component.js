import { __decorate, __metadata } from "tslib";
import { Component, ViewChild, forwardRef, Output, EventEmitter } from '@angular/core';
import { EMOJIS } from '../misc/emojis.data';
import { EmojiListComponent } from './emoji-list.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './emoji-header.component';
import * as ɵngcc2 from './emoji-list.component';
import * as ɵngcc3 from './emoji-footer.component';
let EmojiContentComponent = class EmojiContentComponent {
    constructor() {
        this.emojiSelectionEmitter = new EventEmitter();
        this._emojis = EMOJIS;
        this.emojis = this._emojis.slice();
        this.emojisCategories = this._emojis.map(category => Object.assign({}, category, { emojis: [] }));
    }
    searchHandler(value) {
        let filteredEmojis = this.emojisCategories.map(category => Object.assign({}, category, { emojis: [] }));
        value = value.replace(/-/g, '').toLowerCase();
        Object.keys(this._emojis).forEach(i => {
            const category = this._emojis[i];
            category.emojis.forEach(emoji => {
                if (emoji[1].indexOf(value) !== -1) {
                    filteredEmojis[i].emojis.push(emoji);
                }
            });
        });
        this.emojis = filteredEmojis;
    }
    categorySelectionHandler(event) {
        this.emojiListComponent.selectCategory(event);
    }
};
EmojiContentComponent.ɵfac = function EmojiContentComponent_Factory(t) { return new (t || EmojiContentComponent)(); };
EmojiContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EmojiContentComponent, selectors: [["emoji-content"]], viewQuery: function EmojiContentComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(EmojiListComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.emojiListComponent = _t.first);
    } }, outputs: { emojiSelectionEmitter: "emoji-selection" }, decls: 3, vars: 2, consts: [[3, "emojisCategories", "categorySelection", "search"], [3, "emojis", "emoji-selection"]], template: function EmojiContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "emoji-header", 0);
        ɵngcc0.ɵɵlistener("categorySelection", function EmojiContentComponent_Template_emoji_header_categorySelection_0_listener($event) { return ctx.categorySelectionHandler($event); })("search", function EmojiContentComponent_Template_emoji_header_search_0_listener($event) { return ctx.searchHandler($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(1, "emoji-list", 1);
        ɵngcc0.ɵɵlistener("emoji-selection", function EmojiContentComponent_Template_emoji_list_emoji_selection_1_listener($event) { return ctx.emojiSelectionEmitter.emit($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(2, "emoji-footer");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("emojisCategories", ctx.emojisCategories);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("emojis", ctx.emojis);
    } }, directives: [ɵngcc1.EmojiHeaderComponent, ɵngcc2.EmojiListComponent, ɵngcc3.EmojiFooterComponent], styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;width:100vw;height:314px;border-radius:3px;background:#fff;text-align:left;box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}@media (min-width:258px){[_nghost-%COMP%]{width:258px}}emoji-list[_ngcontent-%COMP%]{flex-grow:1}"] });
__decorate([
    ViewChild(forwardRef(() => EmojiListComponent), { static: true }),
    __metadata("design:type", EmojiListComponent)
], EmojiContentComponent.prototype, "emojiListComponent", void 0);
__decorate([
    Output('emoji-selection'),
    __metadata("design:type", Object)
], EmojiContentComponent.prototype, "emojiSelectionEmitter", void 0);
EmojiContentComponent = __decorate([ __metadata("design:paramtypes", [])
], EmojiContentComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmojiContentComponent, [{
        type: Component,
        args: [{
                selector: 'emoji-content',
                template: `
  <emoji-header 
    [emojisCategories]="emojisCategories"
    (categorySelection)="categorySelectionHandler($event)"
    (search)="searchHandler($event)"></emoji-header>
  <emoji-list [emojis]="emojis" (emoji-selection)="emojiSelectionEmitter.emit($event)"></emoji-list>
  <emoji-footer></emoji-footer>
  `,
                styles: [":host{display:flex;flex-direction:column;width:100vw;height:314px;border-radius:3px;background:#fff;text-align:left;box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}@media (min-width:258px){:host{width:258px}}emoji-list{flex-grow:1}"]
            }]
    }], function () { return []; }, { emojiSelectionEmitter: [{
            type: Output,
            args: ['emoji-selection']
        }], emojiListComponent: [{
            type: ViewChild,
            args: [forwardRef(() => EmojiListComponent), { static: true }]
        }] }); })();
export { EmojiContentComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1vamktY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtZW1vamktcGlja2VyL2xpYi9jb21wb25lbnRzL2Vtb2ppLWNvbnRlbnQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7Ozs7O0FBZTVELElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXFCO0FBQ2xDLElBT0U7QUFBZ0IsUUFOVywwQkFBcUIsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0FBQzdFLFFBQ1UsWUFBTyxHQUFHLE1BQU0sQ0FBQztBQUMzQixRQUFFLFdBQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ2hDLFFBQUUscUJBQWdCLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ2hHLElBQ2lCLENBQUM7QUFDbEIsSUFDRSxhQUFhLENBQUMsS0FBSztBQUNyQixRQUFJLElBQUksY0FBYyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzdHLFFBQ0ksS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ2xELFFBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzFDLFlBQU0sTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QyxZQUNNLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO0FBQ3RDLGdCQUFRLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtBQUM1QyxvQkFBVSxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMvQyxpQkFBUztBQUNULFlBQU0sQ0FBQyxDQUFDLENBQUM7QUFDVCxRQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ1AsUUFDSSxJQUFJLENBQUMsTUFBTSxHQUFHLGNBQWMsQ0FBQztBQUNqQyxJQUFFLENBQUM7QUFDSCxJQUNFLHdCQUF3QixDQUFDLEtBQUs7QUFDaEMsUUFBSSxJQUFJLENBQUMsa0JBQWtCLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2xELElBQUUsQ0FBQztBQUNILENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c2NBQUE7QUE5Qm9FO0FBQWEsSUFBL0UsU0FBUyxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDO0FBQUUsOEJBQW1CLGtCQUFrQjtBQUMzRyxpRUFENEc7QUFDL0U7QUFBYSxJQUF2QyxNQUFNLENBQUMsaUJBQWlCLENBQUM7QUFBRTtBQUFzQyxvRUFBUztBQUZoRSxxQkFBcUIsb0JBYmpDLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRSxuQ0FZVDthQVp3QixVQUV6Qix2QkFXQyxHQURVLHFCQUFxQixDQStCakM7SUF6Q1MsRUFBRTs7Ozs7Ozs7SUFPVDs7OztrSUFDRixDQUFDOzs7Ozs7OztvQkFrQ0Y7QUFBQyxTQWhDWSxxQkFBcUI7QUFDakMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCwgZm9yd2FyZFJlZiwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEVNT0pJUyB9IGZyb20gJy4uL21pc2MvZW1vamlzLmRhdGEnO1xuaW1wb3J0IHsgRW1vamlMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9lbW9qaS1saXN0LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Vtb2ppLWNvbnRlbnQnLFxuICBzdHlsZVVybHM6IFsnLi4vc3R5bGVzL2Vtb2ppLWNvbnRlbnQuc2NzcyddLFxuICB0ZW1wbGF0ZTogYFxuICA8ZW1vamktaGVhZGVyIFxuICAgIFtlbW9qaXNDYXRlZ29yaWVzXT1cImVtb2ppc0NhdGVnb3JpZXNcIlxuICAgIChjYXRlZ29yeVNlbGVjdGlvbik9XCJjYXRlZ29yeVNlbGVjdGlvbkhhbmRsZXIoJGV2ZW50KVwiXG4gICAgKHNlYXJjaCk9XCJzZWFyY2hIYW5kbGVyKCRldmVudClcIj48L2Vtb2ppLWhlYWRlcj5cbiAgPGVtb2ppLWxpc3QgW2Vtb2ppc109XCJlbW9qaXNcIiAoZW1vamktc2VsZWN0aW9uKT1cImVtb2ppU2VsZWN0aW9uRW1pdHRlci5lbWl0KCRldmVudClcIj48L2Vtb2ppLWxpc3Q+XG4gIDxlbW9qaS1mb290ZXI+PC9lbW9qaS1mb290ZXI+XG4gIGBcbn0pXG5cbmV4cG9ydCBjbGFzcyBFbW9qaUNvbnRlbnRDb21wb25lbnQge1xuICBAVmlld0NoaWxkKGZvcndhcmRSZWYoKCkgPT4gRW1vamlMaXN0Q29tcG9uZW50KSwgeyBzdGF0aWM6IHRydWUgfSkgZW1vamlMaXN0Q29tcG9uZW50OiBFbW9qaUxpc3RDb21wb25lbnQ7XG4gIEBPdXRwdXQoJ2Vtb2ppLXNlbGVjdGlvbicpIGVtb2ppU2VsZWN0aW9uRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIHByaXZhdGUgX2Vtb2ppcyA9IEVNT0pJUztcbiAgZW1vamlzID0gdGhpcy5fZW1vamlzLnNsaWNlKCk7XG4gIGVtb2ppc0NhdGVnb3JpZXMgPSB0aGlzLl9lbW9qaXMubWFwKGNhdGVnb3J5ID0+IE9iamVjdC5hc3NpZ24oe30sIGNhdGVnb3J5LCB7IGVtb2ppcyA6IFtdIH0pKTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgc2VhcmNoSGFuZGxlcih2YWx1ZSkge1xuICAgIGxldCBmaWx0ZXJlZEVtb2ppcyA9IHRoaXMuZW1vamlzQ2F0ZWdvcmllcy5tYXAoY2F0ZWdvcnkgPT4gT2JqZWN0LmFzc2lnbih7fSwgY2F0ZWdvcnksIHsgZW1vamlzIDogW10gfSkpO1xuICAgIFxuICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvLS9nLCAnJykudG9Mb3dlckNhc2UoKTtcblxuICAgIE9iamVjdC5rZXlzKHRoaXMuX2Vtb2ppcykuZm9yRWFjaChpID0+IHtcbiAgICAgIGNvbnN0IGNhdGVnb3J5ID0gdGhpcy5fZW1vamlzW2ldO1xuXG4gICAgICBjYXRlZ29yeS5lbW9qaXMuZm9yRWFjaChlbW9qaSA9PiB7XG4gICAgICAgIGlmIChlbW9qaVsxXS5pbmRleE9mKHZhbHVlKSAhPT0gLTEpIHtcbiAgICAgICAgICBmaWx0ZXJlZEVtb2ppc1tpXS5lbW9qaXMucHVzaChlbW9qaSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgdGhpcy5lbW9qaXMgPSBmaWx0ZXJlZEVtb2ppcztcbiAgfVxuXG4gIGNhdGVnb3J5U2VsZWN0aW9uSGFuZGxlcihldmVudCkge1xuICAgIHRoaXMuZW1vamlMaXN0Q29tcG9uZW50LnNlbGVjdENhdGVnb3J5KGV2ZW50KTtcbiAgfVxufVxuIl19