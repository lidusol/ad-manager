import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, Output, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './emoji-categories.component';
import * as ɵngcc2 from './emoji-search.component';
var EmojiHeaderComponent = /** @class */ (function () {
    function EmojiHeaderComponent() {
        this.categorySelection = new EventEmitter();
        this.searchEmitter = new EventEmitter();
    }
    __decorate([
        Input('emojisCategories'),
        __metadata("design:type", Object)
    ], EmojiHeaderComponent.prototype, "emojisCategories", void 0);
    __decorate([
        Output('categorySelection'),
        __metadata("design:type", Object)
    ], EmojiHeaderComponent.prototype, "categorySelection", void 0);
    __decorate([
        Output('search'),
        __metadata("design:type", Object)
    ], EmojiHeaderComponent.prototype, "searchEmitter", void 0);
    EmojiHeaderComponent = __decorate([ __metadata("design:paramtypes", [])
    ], EmojiHeaderComponent);
EmojiHeaderComponent.ɵfac = function EmojiHeaderComponent_Factory(t) { return new (t || EmojiHeaderComponent)(); };
EmojiHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EmojiHeaderComponent, selectors: [["emoji-header"]], inputs: { emojisCategories: "emojisCategories" }, outputs: { categorySelection: "categorySelection", searchEmitter: "search" }, decls: 2, vars: 1, consts: [[3, "emojisCategories", "categorySelection"], [3, "search"]], template: function EmojiHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "emoji-categories", 0);
        ɵngcc0.ɵɵlistener("categorySelection", function EmojiHeaderComponent_Template_emoji_categories_categorySelection_0_listener($event) { return ctx.categorySelection.emit($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(1, "emoji-search", 1);
        ɵngcc0.ɵɵlistener("search", function EmojiHeaderComponent_Template_emoji_search_search_1_listener($event) { return ctx.searchEmitter.emit($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("emojisCategories", ctx.emojisCategories);
    } }, directives: [ɵngcc1.EmojiCategoriesComponent, ɵngcc2.EmojiSearchComponent], styles: ["[_nghost-%COMP%]{display:block;border-bottom:1px solid #f9f9f9;border-radius:3px 3px 0 0;padding:10px;background:#fcfcfc}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmojiHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'emoji-header',
                template: "\n  <emoji-categories [emojisCategories]=\"emojisCategories\" (categorySelection)=\"categorySelection.emit($event)\"></emoji-categories>\n  <emoji-search (search)=\"searchEmitter.emit($event)\"></emoji-search>\n  ",
                styles: [":host{display:block;border-bottom:1px solid #f9f9f9;border-radius:3px 3px 0 0;padding:10px;background:#fcfcfc}"]
            }]
    }], function () { return []; }, { categorySelection: [{
            type: Output,
            args: ['categorySelection']
        }], searchEmitter: [{
            type: Output,
            args: ['search']
        }], emojisCategories: [{
            type: Input,
            args: ['emojisCategories']
        }] }); })();
    return EmojiHeaderComponent;
}());
export { EmojiHeaderComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1vamktaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmc6L25neC1lbW9qaS1waWNrZXIvbGliL2NvbXBvbmVudHMvZW1vamktaGVhZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQTs7OztBQVV0RTtBQUNvQixJQUtsQjtBQUdVLFFBTm1CLHNCQUFpQixHQUFHLElBQUksWUFBWSxFQUFPLENBQUE7QUFDMUUsUUFBb0Isa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFBO0FBQzlELElBRUUsQ0FBQztBQUNILElBUDZCO0FBQWEsUUFBdkMsS0FBSyxDQUFDLGtCQUFrQixDQUFDO0FBQUU7QUFFTCxrRUFGb0I7QUFFN0MsSUFBK0I7QUFBYSxRQUF6QyxNQUFNLENBQUMsbUJBQW1CLENBQUM7QUFBRTtBQUEwQyxtRUFBQTtBQUN6RSxJQUFtQjtBQUFhLFFBQTlCLE1BQU0sQ0FBQyxRQUFRLENBQUM7QUFBRTtBQUNyQiwrREFEOEQ7QUFFOUQsSUFOYSxvQkFBb0Isd0JBUmhDLFNBQVMsQ0FBQyxjQUNULGpDQU9NO0lBUEUsRUFBRSxjQUFjLHBCQVFqQixPQURJLG9CQUFvQixDQVFoQztJQWJDLFFBQVEsRUFBRTtpSEFHVCxrSkFDRixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFVRjtBQUFDLElBREQsMkJBQUM7QUFDQSxDQURBLEFBUkQsSUFRQztBQUNELFNBVGEsb0JBQW9CO0FBQ2hDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIE91dHB1dCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJ1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdlbW9qaS1oZWFkZXInLFxuICBzdHlsZVVybHM6IFsnLi4vc3R5bGVzL2Vtb2ppLWhlYWRlci5zY3NzJ10sXG4gIHRlbXBsYXRlOiBgXG4gIDxlbW9qaS1jYXRlZ29yaWVzIFtlbW9qaXNDYXRlZ29yaWVzXT1cImVtb2ppc0NhdGVnb3JpZXNcIiAoY2F0ZWdvcnlTZWxlY3Rpb24pPVwiY2F0ZWdvcnlTZWxlY3Rpb24uZW1pdCgkZXZlbnQpXCI+PC9lbW9qaS1jYXRlZ29yaWVzPlxuICA8ZW1vamktc2VhcmNoIChzZWFyY2gpPVwic2VhcmNoRW1pdHRlci5lbWl0KCRldmVudClcIj48L2Vtb2ppLXNlYXJjaD5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBFbW9qaUhlYWRlckNvbXBvbmVudCB7XG4gIEBJbnB1dCgnZW1vamlzQ2F0ZWdvcmllcycpIGVtb2ppc0NhdGVnb3JpZXNcblxuICBAT3V0cHV0KCdjYXRlZ29yeVNlbGVjdGlvbicpIGNhdGVnb3J5U2VsZWN0aW9uID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KClcbiAgQE91dHB1dCgnc2VhcmNoJykgc2VhcmNoRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cbn1cbiJdfQ==