import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/dropdown';
import * as ɵngcc2 from 'ngx-bootstrap/tooltip';
var NgxIntlTelInputModule_1;
import { __decorate } from "tslib";
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { NativeElementInjectorDirective } from './directives/native-element-injector.directive';
import { NgxIntlTelInputComponent } from './ngx-intl-tel-input.component';
import { NgxIntlTelInputService } from './ngx-intl-tel-input.service';
let NgxIntlTelInputModule = NgxIntlTelInputModule_1 = class NgxIntlTelInputModule {
    static forRoot() {
        return {
            ngModule: NgxIntlTelInputModule_1,
            providers: [NgxIntlTelInputService],
        };
    }
};
NgxIntlTelInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxIntlTelInputModule });
NgxIntlTelInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxIntlTelInputModule_Factory(t) { return new (t || NgxIntlTelInputModule)(); }, imports: [[
            CommonModule,
            FormsModule,
            ReactiveFormsModule,
            BsDropdownModule.forRoot(),
            TooltipModule.forRoot(),
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxIntlTelInputModule, { declarations: function () { return [NgxIntlTelInputComponent, NativeElementInjectorDirective]; }, imports: function () { return [CommonModule,
        FormsModule,
        ReactiveFormsModule, ɵngcc1.BsDropdownModule, ɵngcc2.TooltipModule]; }, exports: function () { return [NgxIntlTelInputComponent, NativeElementInjectorDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxIntlTelInputModule, [{
        type: NgModule,
        args: [{
                declarations: [NgxIntlTelInputComponent, NativeElementInjectorDirective],
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule,
                    BsDropdownModule.forRoot(),
                    TooltipModule.forRoot(),
                ],
                exports: [NgxIntlTelInputComponent, NativeElementInjectorDirective]
            }]
    }], null, null); })();
export { NgxIntlTelInputModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWludGwtdGVsLWlucHV0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L25neC1pbnRsLXRlbC1pbnB1dC9saWIvbmd4LWludGwtdGVsLWlucHV0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUV0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRWxFLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBYXRFLElBQWEscUJBQXFCLDZCQUFsQyxNQUFhLHFCQUFxQjtBQUNsQyxJQUFDLE1BQU0sQ0FBQyxPQUFPO0FBQUssUUFDbEIsT0FBTztBQUNULFlBQUcsUUFBUSxFQUFFLHVCQUFxQjtBQUNsQyxZQUFHLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDO0FBQ3RDLFNBQUcsQ0FBQztBQUNKLElBQUMsQ0FBQztBQUNGLENBQUMsQ0FBQTtBQVBZLHFCQUFxQiw4Q0FYakMsUUFBUSxDQUFDLFVBQ1Q7V0FBWSxFQUFFLENBQUMsd0JBQXdCLEVBQUUsOEJBQThCLENBQUMsVUFDeEUsT0FBTyxFQUFFLGNBQ1IsWUFBWSxjQUNaLFdBQVcsY0FDWDtRQUFtQixjQUNuQjtZQUFnQixDQUFDLE9BQU8sRUFBRTtXQUMxQixhQUFhLENBQUMsT0FBTztDQUFFLFdBQ3ZCLFVBQ0QsT0FBTyxFQUFFLENBQUM7Z0JBQXdCLEVBQUU7V0FBOEIsQ0FBQztJQUNuRSxDQUFDLElBQ1cscUJBQXFCLENBT2pDOzs7Ozs7Ozs7Ozs7Ozs7OzBCQUNEO0FBQUMsU0FSWSxxQkFBcUI7QUFDakMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCc0Ryb3Bkb3duTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9kcm9wZG93bic7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgTmF0aXZlRWxlbWVudEluamVjdG9yRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL25hdGl2ZS1lbGVtZW50LWluamVjdG9yLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOZ3hJbnRsVGVsSW5wdXRDb21wb25lbnQgfSBmcm9tICcuL25neC1pbnRsLXRlbC1pbnB1dC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmd4SW50bFRlbElucHV0U2VydmljZSB9IGZyb20gJy4vbmd4LWludGwtdGVsLWlucHV0LnNlcnZpY2UnO1xuXG5ATmdNb2R1bGUoe1xuXHRkZWNsYXJhdGlvbnM6IFtOZ3hJbnRsVGVsSW5wdXRDb21wb25lbnQsIE5hdGl2ZUVsZW1lbnRJbmplY3RvckRpcmVjdGl2ZV0sXG5cdGltcG9ydHM6IFtcblx0XHRDb21tb25Nb2R1bGUsXG5cdFx0Rm9ybXNNb2R1bGUsXG5cdFx0UmVhY3RpdmVGb3Jtc01vZHVsZSxcblx0XHRCc0Ryb3Bkb3duTW9kdWxlLmZvclJvb3QoKSxcblx0XHRUb29sdGlwTW9kdWxlLmZvclJvb3QoKSxcblx0XSxcblx0ZXhwb3J0czogW05neEludGxUZWxJbnB1dENvbXBvbmVudCwgTmF0aXZlRWxlbWVudEluamVjdG9yRGlyZWN0aXZlXSxcbn0pXG5leHBvcnQgY2xhc3MgTmd4SW50bFRlbElucHV0TW9kdWxlIHtcblx0c3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hJbnRsVGVsSW5wdXRNb2R1bGU+IHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0bmdNb2R1bGU6IE5neEludGxUZWxJbnB1dE1vZHVsZSxcblx0XHRcdHByb3ZpZGVyczogW05neEludGxUZWxJbnB1dFNlcnZpY2VdLFxuXHRcdH07XG5cdH1cbn1cbiJdfQ==