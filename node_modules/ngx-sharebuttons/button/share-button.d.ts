import { EventEmitter } from '@angular/core';
import { ShareService } from 'ngx-sharebuttons';
import * as ɵngcc0 from '@angular/core';
export declare class ShareButton {
    private _share;
    /** Share button type */
    button: string;
    /** The page URL */
    url: string;
    /** The title parameter */
    title: string;
    /** The description parameter */
    description: string;
    /** The image parameter for sharing on Pinterest */
    image: string;
    /** The tags parameter for sharing on Twitter and Tumblr */
    tags: string;
    /** Sets meta tags from document head, useful when SEO is available */
    autoSetMeta: boolean;
    /** Show button icon */
    showIcon: boolean;
    /** Show button text */
    showText: boolean;
    /** Button custom text */
    text: string;
    /** Button custom icon */
    icon: string;
    /** Button size */
    size: number;
    /** Button theme */
    theme: string;
    /** A flag that indicates if the button's click is disabled */
    disabled: boolean;
    /** Stream that emits when share dialog is opened */
    opened: EventEmitter<string>;
    /** Stream that emits when share dialog is closed */
    closed: EventEmitter<string>;
    /** Set theme as button class */
    get buttonClass(): string;
    constructor(_share: ShareService);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ShareButton, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ShareButton, "share-button", never, { "showIcon": "showIcon"; "showText": "showText"; "size": "size"; "theme": "theme"; "button": "button"; "url": "url"; "title": "title"; "description": "description"; "image": "image"; "tags": "tags"; "autoSetMeta": "autoSetMeta"; "text": "text"; "icon": "icon"; "disabled": "disabled"; }, { "opened": "opened"; "closed": "closed"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUtYnV0dG9uLmQudHMiLCJzb3VyY2VzIjpbInNoYXJlLWJ1dHRvbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaGFyZVNlcnZpY2UgfSBmcm9tICduZ3gtc2hhcmVidXR0b25zJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNoYXJlQnV0dG9uIHtcbiAgICBwcml2YXRlIF9zaGFyZTtcbiAgICAvKiogU2hhcmUgYnV0dG9uIHR5cGUgKi9cbiAgICBidXR0b246IHN0cmluZztcbiAgICAvKiogVGhlIHBhZ2UgVVJMICovXG4gICAgdXJsOiBzdHJpbmc7XG4gICAgLyoqIFRoZSB0aXRsZSBwYXJhbWV0ZXIgKi9cbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIC8qKiBUaGUgZGVzY3JpcHRpb24gcGFyYW1ldGVyICovXG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICAvKiogVGhlIGltYWdlIHBhcmFtZXRlciBmb3Igc2hhcmluZyBvbiBQaW50ZXJlc3QgKi9cbiAgICBpbWFnZTogc3RyaW5nO1xuICAgIC8qKiBUaGUgdGFncyBwYXJhbWV0ZXIgZm9yIHNoYXJpbmcgb24gVHdpdHRlciBhbmQgVHVtYmxyICovXG4gICAgdGFnczogc3RyaW5nO1xuICAgIC8qKiBTZXRzIG1ldGEgdGFncyBmcm9tIGRvY3VtZW50IGhlYWQsIHVzZWZ1bCB3aGVuIFNFTyBpcyBhdmFpbGFibGUgKi9cbiAgICBhdXRvU2V0TWV0YTogYm9vbGVhbjtcbiAgICAvKiogU2hvdyBidXR0b24gaWNvbiAqL1xuICAgIHNob3dJY29uOiBib29sZWFuO1xuICAgIC8qKiBTaG93IGJ1dHRvbiB0ZXh0ICovXG4gICAgc2hvd1RleHQ6IGJvb2xlYW47XG4gICAgLyoqIEJ1dHRvbiBjdXN0b20gdGV4dCAqL1xuICAgIHRleHQ6IHN0cmluZztcbiAgICAvKiogQnV0dG9uIGN1c3RvbSBpY29uICovXG4gICAgaWNvbjogc3RyaW5nO1xuICAgIC8qKiBCdXR0b24gc2l6ZSAqL1xuICAgIHNpemU6IG51bWJlcjtcbiAgICAvKiogQnV0dG9uIHRoZW1lICovXG4gICAgdGhlbWU6IHN0cmluZztcbiAgICAvKiogQSBmbGFnIHRoYXQgaW5kaWNhdGVzIGlmIHRoZSBidXR0b24ncyBjbGljayBpcyBkaXNhYmxlZCAqL1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIC8qKiBTdHJlYW0gdGhhdCBlbWl0cyB3aGVuIHNoYXJlIGRpYWxvZyBpcyBvcGVuZWQgKi9cbiAgICBvcGVuZWQ6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIC8qKiBTdHJlYW0gdGhhdCBlbWl0cyB3aGVuIHNoYXJlIGRpYWxvZyBpcyBjbG9zZWQgKi9cbiAgICBjbG9zZWQ6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIC8qKiBTZXQgdGhlbWUgYXMgYnV0dG9uIGNsYXNzICovXG4gICAgZ2V0IGJ1dHRvbkNsYXNzKCk6IHN0cmluZztcbiAgICBjb25zdHJ1Y3Rvcihfc2hhcmU6IFNoYXJlU2VydmljZSk7XG59XG4iXX0=