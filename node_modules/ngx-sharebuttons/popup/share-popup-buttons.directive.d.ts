import { EventEmitter, OnDestroy } from '@angular/core';
import { SharePopupService } from './share-popup.service';
import { ShareService } from 'ngx-sharebuttons';
import * as ɵngcc0 from '@angular/core';
export declare class SharePopupButtonsDirective implements OnDestroy {
    private _sharePopup;
    private _share;
    theme: string;
    include: string[];
    exclude: string[];
    closeIcon: string | string[];
    /** The sharing link */
    url: string;
    /** The title parameter */
    title: string;
    /** The description parameter */
    description: string;
    /** The image parameter for sharing on Pinterest */
    image: string;
    /** The tags parameter for sharing on Twitter and Tumblr */
    tags: string;
    /** Sets meta tags from document head, useful when SEO is available */
    autoSetMeta: boolean;
    show: number;
    /** Show buttons icons */
    showIcon: boolean;
    /** Show buttons text */
    showText: boolean;
    /** Buttons size */
    size: number;
    /** A flag that indicates if the button's click is disabled */
    disabled: boolean;
    hasBackdrop: boolean;
    backdropClass: string;
    /** Share dialog opened event */
    opened: EventEmitter<string>;
    /** Share dialog closed event */
    closed: EventEmitter<string>;
    popupClosed: EventEmitter<void>;
    private _popupClosed;
    constructor(_sharePopup: SharePopupService, _share: ShareService);
    onClick(e: any): void;
    ngOnDestroy(): void;
    close(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SharePopupButtonsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SharePopupButtonsDirective, "[shareButtonsPopup]", never, { "theme": "theme"; "include": "include"; "closeIcon": "closeIcon"; "showIcon": "showIcon"; "showText": "showText"; "size": "size"; "hasBackdrop": "hasBackdrop"; "exclude": "exclude"; "url": "url"; "title": "title"; "description": "description"; "image": "image"; "tags": "tags"; "autoSetMeta": "autoSetMeta"; "show": "show"; "disabled": "disabled"; "backdropClass": "backdropClass"; }, { "opened": "opened"; "closed": "closed"; "popupClosed": "popupClosed"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUtcG9wdXAtYnV0dG9ucy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsic2hhcmUtcG9wdXAtYnV0dG9ucy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNoYXJlUG9wdXBTZXJ2aWNlIH0gZnJvbSAnLi9zaGFyZS1wb3B1cC5zZXJ2aWNlJztcbmltcG9ydCB7IFNoYXJlU2VydmljZSB9IGZyb20gJ25neC1zaGFyZWJ1dHRvbnMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2hhcmVQb3B1cEJ1dHRvbnNEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgX3NoYXJlUG9wdXA7XG4gICAgcHJpdmF0ZSBfc2hhcmU7XG4gICAgdGhlbWU6IHN0cmluZztcbiAgICBpbmNsdWRlOiBzdHJpbmdbXTtcbiAgICBleGNsdWRlOiBzdHJpbmdbXTtcbiAgICBjbG9zZUljb246IHN0cmluZyB8IHN0cmluZ1tdO1xuICAgIC8qKiBUaGUgc2hhcmluZyBsaW5rICovXG4gICAgdXJsOiBzdHJpbmc7XG4gICAgLyoqIFRoZSB0aXRsZSBwYXJhbWV0ZXIgKi9cbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIC8qKiBUaGUgZGVzY3JpcHRpb24gcGFyYW1ldGVyICovXG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICAvKiogVGhlIGltYWdlIHBhcmFtZXRlciBmb3Igc2hhcmluZyBvbiBQaW50ZXJlc3QgKi9cbiAgICBpbWFnZTogc3RyaW5nO1xuICAgIC8qKiBUaGUgdGFncyBwYXJhbWV0ZXIgZm9yIHNoYXJpbmcgb24gVHdpdHRlciBhbmQgVHVtYmxyICovXG4gICAgdGFnczogc3RyaW5nO1xuICAgIC8qKiBTZXRzIG1ldGEgdGFncyBmcm9tIGRvY3VtZW50IGhlYWQsIHVzZWZ1bCB3aGVuIFNFTyBpcyBhdmFpbGFibGUgKi9cbiAgICBhdXRvU2V0TWV0YTogYm9vbGVhbjtcbiAgICBzaG93OiBudW1iZXI7XG4gICAgLyoqIFNob3cgYnV0dG9ucyBpY29ucyAqL1xuICAgIHNob3dJY29uOiBib29sZWFuO1xuICAgIC8qKiBTaG93IGJ1dHRvbnMgdGV4dCAqL1xuICAgIHNob3dUZXh0OiBib29sZWFuO1xuICAgIC8qKiBCdXR0b25zIHNpemUgKi9cbiAgICBzaXplOiBudW1iZXI7XG4gICAgLyoqIEEgZmxhZyB0aGF0IGluZGljYXRlcyBpZiB0aGUgYnV0dG9uJ3MgY2xpY2sgaXMgZGlzYWJsZWQgKi9cbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBoYXNCYWNrZHJvcDogYm9vbGVhbjtcbiAgICBiYWNrZHJvcENsYXNzOiBzdHJpbmc7XG4gICAgLyoqIFNoYXJlIGRpYWxvZyBvcGVuZWQgZXZlbnQgKi9cbiAgICBvcGVuZWQ6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIC8qKiBTaGFyZSBkaWFsb2cgY2xvc2VkIGV2ZW50ICovXG4gICAgY2xvc2VkOiBFdmVudEVtaXR0ZXI8c3RyaW5nPjtcbiAgICBwb3B1cENsb3NlZDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICAgIHByaXZhdGUgX3BvcHVwQ2xvc2VkO1xuICAgIGNvbnN0cnVjdG9yKF9zaGFyZVBvcHVwOiBTaGFyZVBvcHVwU2VydmljZSwgX3NoYXJlOiBTaGFyZVNlcnZpY2UpO1xuICAgIG9uQ2xpY2soZTogYW55KTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIGNsb3NlKCk6IHZvaWQ7XG59XG4iXX0=